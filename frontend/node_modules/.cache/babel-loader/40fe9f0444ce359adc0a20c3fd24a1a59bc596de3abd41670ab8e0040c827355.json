{"ast":null,"code":"var _jsxFileName = \"C:\\\\villa-parking-management\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element\n}) => {\n  _s();\n  //관리자 계정\n  if (username === 'dlgmlckd02' && password === 'Lklk591035!') {\n    navigate('/admin');\n    console.log('어드민 계정 접속');\n    return;\n  }\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        await axios.get('http://localhost:3001/api/user/check-session', {\n          withCredentials: true\n        });\n        setIsAuthenticated(true);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n    checkSession();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 38\n  }, this);\n};\n_s(PrivateRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","axios","jsxDEV","_jsxDEV","PrivateRoute","element","_s","username","password","navigate","console","log","isAuthenticated","setIsAuthenticated","checkSession","get","withCredentials","error","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/villa-parking-management/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PrivateRoute = ({ element }) => {\r\n\r\n//관리자 계정\r\nif (username === 'dlgmlckd02' && password === 'Lklk591035!') {\r\n  navigate('/admin');\r\n  console.log('어드민 계정 접속');\r\n  return;\r\n}\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      try {\r\n        await axios.get('http://localhost:3001/api/user/check-session', { withCredentials: true });\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        setIsAuthenticated(false);\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n  }, []);\r\n\r\n  if (isAuthenticated === null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return isAuthenticated ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAEtC;EACA,IAAIC,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,aAAa,EAAE;IAC3DC,QAAQ,CAAC,QAAQ,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB;EACF;EAEE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMb,KAAK,CAACc,GAAG,CAAC,8CAA8C,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAC1FH,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdJ,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC5B,oBAAOT,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,OAAOV,eAAe,GAAGP,OAAO,gBAAGF,OAAA,CAACH,QAAQ;IAACuB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAAChB,EAAA,CA7BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}