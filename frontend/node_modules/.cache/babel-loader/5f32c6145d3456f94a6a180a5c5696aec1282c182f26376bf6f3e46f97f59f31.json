{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"jsQR\"] = factory();else root[\"jsQR\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/if (!__webpack_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          /******/configurable: false,\n          /******/enumerable: true,\n          /******/get: getter\n          /******/\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __webpack_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(__webpack_require__.s = 3);\n    /******/\n  }\n  /************************************************************************/\n  /******/([( /* 0 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var BitMatrix = /** @class */function () {\n      function BitMatrix(data, width) {\n        this.width = width;\n        this.height = data.length / width;\n        this.data = data;\n      }\n      BitMatrix.createEmpty = function (width, height) {\n        return new BitMatrix(new Uint8ClampedArray(width * height), width);\n      };\n      BitMatrix.prototype.get = function (x, y) {\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n          return false;\n        }\n        return !!this.data[y * this.width + x];\n      };\n      BitMatrix.prototype.set = function (x, y, v) {\n        this.data[y * this.width + x] = v ? 1 : 0;\n      };\n      BitMatrix.prototype.setRegion = function (left, top, width, height, v) {\n        for (var y = top; y < top + height; y++) {\n          for (var x = left; x < left + width; x++) {\n            this.set(x, y, !!v);\n          }\n        }\n      };\n      return BitMatrix;\n    }();\n    exports.BitMatrix = BitMatrix;\n\n    /***/\n  }), ( /* 1 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var GenericGFPoly_1 = __webpack_require__(2);\n    function addOrSubtractGF(a, b) {\n      return a ^ b; // tslint:disable-line:no-bitwise\n    }\n    exports.addOrSubtractGF = addOrSubtractGF;\n    var GenericGF = /** @class */function () {\n      function GenericGF(primitive, size, genBase) {\n        this.primitive = primitive;\n        this.size = size;\n        this.generatorBase = genBase;\n        this.expTable = new Array(this.size);\n        this.logTable = new Array(this.size);\n        var x = 1;\n        for (var i = 0; i < this.size; i++) {\n          this.expTable[i] = x;\n          x = x * 2;\n          if (x >= this.size) {\n            x = (x ^ this.primitive) & this.size - 1; // tslint:disable-line:no-bitwise\n          }\n        }\n        for (var i = 0; i < this.size - 1; i++) {\n          this.logTable[this.expTable[i]] = i;\n        }\n        this.zero = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([0]));\n        this.one = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([1]));\n      }\n      GenericGF.prototype.multiply = function (a, b) {\n        if (a === 0 || b === 0) {\n          return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n      };\n      GenericGF.prototype.inverse = function (a) {\n        if (a === 0) {\n          throw new Error(\"Can't invert 0\");\n        }\n        return this.expTable[this.size - this.logTable[a] - 1];\n      };\n      GenericGF.prototype.buildMonomial = function (degree, coefficient) {\n        if (degree < 0) {\n          throw new Error(\"Invalid monomial degree less than 0\");\n        }\n        if (coefficient === 0) {\n          return this.zero;\n        }\n        var coefficients = new Uint8ClampedArray(degree + 1);\n        coefficients[0] = coefficient;\n        return new GenericGFPoly_1.default(this, coefficients);\n      };\n      GenericGF.prototype.log = function (a) {\n        if (a === 0) {\n          throw new Error(\"Can't take log(0)\");\n        }\n        return this.logTable[a];\n      };\n      GenericGF.prototype.exp = function (a) {\n        return this.expTable[a];\n      };\n      return GenericGF;\n    }();\n    exports.default = GenericGF;\n\n    /***/\n  }), ( /* 2 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var GenericGF_1 = __webpack_require__(1);\n    var GenericGFPoly = /** @class */function () {\n      function GenericGFPoly(field, coefficients) {\n        if (coefficients.length === 0) {\n          throw new Error(\"No coefficients.\");\n        }\n        this.field = field;\n        var coefficientsLength = coefficients.length;\n        if (coefficientsLength > 1 && coefficients[0] === 0) {\n          // Leading term must be non-zero for anything except the constant polynomial \"0\"\n          var firstNonZero = 1;\n          while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n            firstNonZero++;\n          }\n          if (firstNonZero === coefficientsLength) {\n            this.coefficients = field.zero.coefficients;\n          } else {\n            this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n            for (var i = 0; i < this.coefficients.length; i++) {\n              this.coefficients[i] = coefficients[firstNonZero + i];\n            }\n          }\n        } else {\n          this.coefficients = coefficients;\n        }\n      }\n      GenericGFPoly.prototype.degree = function () {\n        return this.coefficients.length - 1;\n      };\n      GenericGFPoly.prototype.isZero = function () {\n        return this.coefficients[0] === 0;\n      };\n      GenericGFPoly.prototype.getCoefficient = function (degree) {\n        return this.coefficients[this.coefficients.length - 1 - degree];\n      };\n      GenericGFPoly.prototype.addOrSubtract = function (other) {\n        var _a;\n        if (this.isZero()) {\n          return other;\n        }\n        if (other.isZero()) {\n          return this;\n        }\n        var smallerCoefficients = this.coefficients;\n        var largerCoefficients = other.coefficients;\n        if (smallerCoefficients.length > largerCoefficients.length) {\n          _a = [largerCoefficients, smallerCoefficients], smallerCoefficients = _a[0], largerCoefficients = _a[1];\n        }\n        var sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n        var lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n        for (var i = 0; i < lengthDiff; i++) {\n          sumDiff[i] = largerCoefficients[i];\n        }\n        for (var i = lengthDiff; i < largerCoefficients.length; i++) {\n          sumDiff[i] = GenericGF_1.addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n        }\n        return new GenericGFPoly(this.field, sumDiff);\n      };\n      GenericGFPoly.prototype.multiply = function (scalar) {\n        if (scalar === 0) {\n          return this.field.zero;\n        }\n        if (scalar === 1) {\n          return this;\n        }\n        var size = this.coefficients.length;\n        var product = new Uint8ClampedArray(size);\n        for (var i = 0; i < size; i++) {\n          product[i] = this.field.multiply(this.coefficients[i], scalar);\n        }\n        return new GenericGFPoly(this.field, product);\n      };\n      GenericGFPoly.prototype.multiplyPoly = function (other) {\n        if (this.isZero() || other.isZero()) {\n          return this.field.zero;\n        }\n        var aCoefficients = this.coefficients;\n        var aLength = aCoefficients.length;\n        var bCoefficients = other.coefficients;\n        var bLength = bCoefficients.length;\n        var product = new Uint8ClampedArray(aLength + bLength - 1);\n        for (var i = 0; i < aLength; i++) {\n          var aCoeff = aCoefficients[i];\n          for (var j = 0; j < bLength; j++) {\n            product[i + j] = GenericGF_1.addOrSubtractGF(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n          }\n        }\n        return new GenericGFPoly(this.field, product);\n      };\n      GenericGFPoly.prototype.multiplyByMonomial = function (degree, coefficient) {\n        if (degree < 0) {\n          throw new Error(\"Invalid degree less than 0\");\n        }\n        if (coefficient === 0) {\n          return this.field.zero;\n        }\n        var size = this.coefficients.length;\n        var product = new Uint8ClampedArray(size + degree);\n        for (var i = 0; i < size; i++) {\n          product[i] = this.field.multiply(this.coefficients[i], coefficient);\n        }\n        return new GenericGFPoly(this.field, product);\n      };\n      GenericGFPoly.prototype.evaluateAt = function (a) {\n        var result = 0;\n        if (a === 0) {\n          // Just return the x^0 coefficient\n          return this.getCoefficient(0);\n        }\n        var size = this.coefficients.length;\n        if (a === 1) {\n          // Just the sum of the coefficients\n          this.coefficients.forEach(function (coefficient) {\n            result = GenericGF_1.addOrSubtractGF(result, coefficient);\n          });\n          return result;\n        }\n        result = this.coefficients[0];\n        for (var i = 1; i < size; i++) {\n          result = GenericGF_1.addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n        }\n        return result;\n      };\n      return GenericGFPoly;\n    }();\n    exports.default = GenericGFPoly;\n\n    /***/\n  }), ( /* 3 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var binarizer_1 = __webpack_require__(4);\n    var decoder_1 = __webpack_require__(5);\n    var extractor_1 = __webpack_require__(11);\n    var locator_1 = __webpack_require__(12);\n    function scan(matrix) {\n      var locations = locator_1.locate(matrix);\n      if (!locations) {\n        return null;\n      }\n      for (var _i = 0, locations_1 = locations; _i < locations_1.length; _i++) {\n        var location_1 = locations_1[_i];\n        var extracted = extractor_1.extract(matrix, location_1);\n        var decoded = decoder_1.decode(extracted.matrix);\n        if (decoded) {\n          return {\n            binaryData: decoded.bytes,\n            data: decoded.text,\n            chunks: decoded.chunks,\n            version: decoded.version,\n            location: {\n              topRightCorner: extracted.mappingFunction(location_1.dimension, 0),\n              topLeftCorner: extracted.mappingFunction(0, 0),\n              bottomRightCorner: extracted.mappingFunction(location_1.dimension, location_1.dimension),\n              bottomLeftCorner: extracted.mappingFunction(0, location_1.dimension),\n              topRightFinderPattern: location_1.topRight,\n              topLeftFinderPattern: location_1.topLeft,\n              bottomLeftFinderPattern: location_1.bottomLeft,\n              bottomRightAlignmentPattern: location_1.alignmentPattern\n            }\n          };\n        }\n      }\n      return null;\n    }\n    var defaultOptions = {\n      inversionAttempts: \"attemptBoth\"\n    };\n    function jsQR(data, width, height, providedOptions) {\n      if (providedOptions === void 0) {\n        providedOptions = {};\n      }\n      var options = defaultOptions;\n      Object.keys(options || {}).forEach(function (opt) {\n        options[opt] = providedOptions[opt] || options[opt];\n      });\n      var shouldInvert = options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\";\n      var tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n      var _a = binarizer_1.binarize(data, width, height, shouldInvert),\n        binarized = _a.binarized,\n        inverted = _a.inverted;\n      var result = scan(tryInvertedFirst ? inverted : binarized);\n      if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n        result = scan(tryInvertedFirst ? binarized : inverted);\n      }\n      return result;\n    }\n    jsQR.default = jsQR;\n    exports.default = jsQR;\n\n    /***/\n  }), ( /* 4 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var BitMatrix_1 = __webpack_require__(0);\n    var REGION_SIZE = 8;\n    var MIN_DYNAMIC_RANGE = 24;\n    function numBetween(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n    // Like BitMatrix but accepts arbitry Uint8 values\n    var Matrix = /** @class */function () {\n      function Matrix(width, height) {\n        this.width = width;\n        this.data = new Uint8ClampedArray(width * height);\n      }\n      Matrix.prototype.get = function (x, y) {\n        return this.data[y * this.width + x];\n      };\n      Matrix.prototype.set = function (x, y, value) {\n        this.data[y * this.width + x] = value;\n      };\n      return Matrix;\n    }();\n    function binarize(data, width, height, returnInverted) {\n      if (data.length !== width * height * 4) {\n        throw new Error(\"Malformed data passed to binarizer.\");\n      }\n      // Convert image to greyscale\n      var greyscalePixels = new Matrix(width, height);\n      for (var x = 0; x < width; x++) {\n        for (var y = 0; y < height; y++) {\n          var r = data[(y * width + x) * 4 + 0];\n          var g = data[(y * width + x) * 4 + 1];\n          var b = data[(y * width + x) * 4 + 2];\n          greyscalePixels.set(x, y, 0.2126 * r + 0.7152 * g + 0.0722 * b);\n        }\n      }\n      var horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n      var verticalRegionCount = Math.ceil(height / REGION_SIZE);\n      var blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount);\n      for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n          var sum = 0;\n          var min = Infinity;\n          var max = 0;\n          for (var y = 0; y < REGION_SIZE; y++) {\n            for (var x = 0; x < REGION_SIZE; x++) {\n              var pixelLumosity = greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n              sum += pixelLumosity;\n              min = Math.min(min, pixelLumosity);\n              max = Math.max(max, pixelLumosity);\n            }\n          }\n          var average = sum / Math.pow(REGION_SIZE, 2);\n          if (max - min <= MIN_DYNAMIC_RANGE) {\n            // If variation within the block is low, assume this is a block with only light or only\n            // dark pixels. In that case we do not want to use the average, as it would divide this\n            // low contrast area into black and white pixels, essentially creating data out of noise.\n            //\n            // Default the blackpoint for these blocks to be half the min - effectively white them out\n            average = min / 2;\n            if (verticalRegion > 0 && hortizontalRegion > 0) {\n              // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n              // the pixels in this block to the previously calculated black points. This is based on\n              // the fact that dark barcode symbology is always surrounded by some amount of light\n              // background for which reasonable black point estimates were made. The bp estimated at\n              // the boundaries is used for the interior.\n              // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n              var averageNeighborBlackPoint = (blackPoints.get(hortizontalRegion, verticalRegion - 1) + 2 * blackPoints.get(hortizontalRegion - 1, verticalRegion) + blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) / 4;\n              if (min < averageNeighborBlackPoint) {\n                average = averageNeighborBlackPoint;\n              }\n            }\n          }\n          blackPoints.set(hortizontalRegion, verticalRegion, average);\n        }\n      }\n      var binarized = BitMatrix_1.BitMatrix.createEmpty(width, height);\n      var inverted = null;\n      if (returnInverted) {\n        inverted = BitMatrix_1.BitMatrix.createEmpty(width, height);\n      }\n      for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n          var left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n          var top_1 = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n          var sum = 0;\n          for (var xRegion = -2; xRegion <= 2; xRegion++) {\n            for (var yRegion = -2; yRegion <= 2; yRegion++) {\n              sum += blackPoints.get(left + xRegion, top_1 + yRegion);\n            }\n          }\n          var threshold = sum / 25;\n          for (var xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n            for (var yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n              var x = hortizontalRegion * REGION_SIZE + xRegion;\n              var y = verticalRegion * REGION_SIZE + yRegion;\n              var lum = greyscalePixels.get(x, y);\n              binarized.set(x, y, lum <= threshold);\n              if (returnInverted) {\n                inverted.set(x, y, !(lum <= threshold));\n              }\n            }\n          }\n        }\n      }\n      if (returnInverted) {\n        return {\n          binarized: binarized,\n          inverted: inverted\n        };\n      }\n      return {\n        binarized: binarized\n      };\n    }\n    exports.binarize = binarize;\n\n    /***/\n  }), ( /* 5 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var BitMatrix_1 = __webpack_require__(0);\n    var decodeData_1 = __webpack_require__(6);\n    var reedsolomon_1 = __webpack_require__(9);\n    var version_1 = __webpack_require__(10);\n    // tslint:disable:no-bitwise\n    function numBitsDiffering(x, y) {\n      var z = x ^ y;\n      var bitCount = 0;\n      while (z) {\n        bitCount++;\n        z &= z - 1;\n      }\n      return bitCount;\n    }\n    function pushBit(bit, byte) {\n      return byte << 1 | bit;\n    }\n    // tslint:enable:no-bitwise\n    var FORMAT_INFO_TABLE = [{\n      bits: 0x5412,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 0\n      }\n    }, {\n      bits: 0x5125,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 1\n      }\n    }, {\n      bits: 0x5E7C,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 2\n      }\n    }, {\n      bits: 0x5B4B,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 3\n      }\n    }, {\n      bits: 0x45F9,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 4\n      }\n    }, {\n      bits: 0x40CE,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 5\n      }\n    }, {\n      bits: 0x4F97,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 6\n      }\n    }, {\n      bits: 0x4AA0,\n      formatInfo: {\n        errorCorrectionLevel: 1,\n        dataMask: 7\n      }\n    }, {\n      bits: 0x77C4,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 0\n      }\n    }, {\n      bits: 0x72F3,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 1\n      }\n    }, {\n      bits: 0x7DAA,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 2\n      }\n    }, {\n      bits: 0x789D,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 3\n      }\n    }, {\n      bits: 0x662F,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 4\n      }\n    }, {\n      bits: 0x6318,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 5\n      }\n    }, {\n      bits: 0x6C41,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 6\n      }\n    }, {\n      bits: 0x6976,\n      formatInfo: {\n        errorCorrectionLevel: 0,\n        dataMask: 7\n      }\n    }, {\n      bits: 0x1689,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 0\n      }\n    }, {\n      bits: 0x13BE,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 1\n      }\n    }, {\n      bits: 0x1CE7,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 2\n      }\n    }, {\n      bits: 0x19D0,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 3\n      }\n    }, {\n      bits: 0x0762,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 4\n      }\n    }, {\n      bits: 0x0255,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 5\n      }\n    }, {\n      bits: 0x0D0C,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 6\n      }\n    }, {\n      bits: 0x083B,\n      formatInfo: {\n        errorCorrectionLevel: 3,\n        dataMask: 7\n      }\n    }, {\n      bits: 0x355F,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 0\n      }\n    }, {\n      bits: 0x3068,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 1\n      }\n    }, {\n      bits: 0x3F31,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 2\n      }\n    }, {\n      bits: 0x3A06,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 3\n      }\n    }, {\n      bits: 0x24B4,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 4\n      }\n    }, {\n      bits: 0x2183,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 5\n      }\n    }, {\n      bits: 0x2EDA,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 6\n      }\n    }, {\n      bits: 0x2BED,\n      formatInfo: {\n        errorCorrectionLevel: 2,\n        dataMask: 7\n      }\n    }];\n    var DATA_MASKS = [function (p) {\n      return (p.y + p.x) % 2 === 0;\n    }, function (p) {\n      return p.y % 2 === 0;\n    }, function (p) {\n      return p.x % 3 === 0;\n    }, function (p) {\n      return (p.y + p.x) % 3 === 0;\n    }, function (p) {\n      return (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0;\n    }, function (p) {\n      return p.x * p.y % 2 + p.x * p.y % 3 === 0;\n    }, function (p) {\n      return (p.y * p.x % 2 + p.y * p.x % 3) % 2 === 0;\n    }, function (p) {\n      return ((p.y + p.x) % 2 + p.y * p.x % 3) % 2 === 0;\n    }];\n    function buildFunctionPatternMask(version) {\n      var dimension = 17 + 4 * version.versionNumber;\n      var matrix = BitMatrix_1.BitMatrix.createEmpty(dimension, dimension);\n      matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n      matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n      matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n      // Alignment patterns\n      for (var _i = 0, _a = version.alignmentPatternCenters; _i < _a.length; _i++) {\n        var x = _a[_i];\n        for (var _b = 0, _c = version.alignmentPatternCenters; _b < _c.length; _b++) {\n          var y = _c[_b];\n          if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n            matrix.setRegion(x - 2, y - 2, 5, 5, true);\n          }\n        }\n      }\n      matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n      matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n      if (version.versionNumber > 6) {\n        matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n        matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n      }\n      return matrix;\n    }\n    function readCodewords(matrix, version, formatInfo) {\n      var dataMask = DATA_MASKS[formatInfo.dataMask];\n      var dimension = matrix.height;\n      var functionPatternMask = buildFunctionPatternMask(version);\n      var codewords = [];\n      var currentByte = 0;\n      var bitsRead = 0;\n      // Read columns in pairs, from right to left\n      var readingUp = true;\n      for (var columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n        if (columnIndex === 6) {\n          // Skip whole column with vertical alignment pattern;\n          columnIndex--;\n        }\n        for (var i = 0; i < dimension; i++) {\n          var y = readingUp ? dimension - 1 - i : i;\n          for (var columnOffset = 0; columnOffset < 2; columnOffset++) {\n            var x = columnIndex - columnOffset;\n            if (!functionPatternMask.get(x, y)) {\n              bitsRead++;\n              var bit = matrix.get(x, y);\n              if (dataMask({\n                y: y,\n                x: x\n              })) {\n                bit = !bit;\n              }\n              currentByte = pushBit(bit, currentByte);\n              if (bitsRead === 8) {\n                // Whole bytes\n                codewords.push(currentByte);\n                bitsRead = 0;\n                currentByte = 0;\n              }\n            }\n          }\n        }\n        readingUp = !readingUp;\n      }\n      return codewords;\n    }\n    function readVersion(matrix) {\n      var dimension = matrix.height;\n      var provisionalVersion = Math.floor((dimension - 17) / 4);\n      if (provisionalVersion <= 6) {\n        // 6 and under dont have version info in the QR code\n        return version_1.VERSIONS[provisionalVersion - 1];\n      }\n      var topRightVersionBits = 0;\n      for (var y = 5; y >= 0; y--) {\n        for (var x = dimension - 9; x >= dimension - 11; x--) {\n          topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n        }\n      }\n      var bottomLeftVersionBits = 0;\n      for (var x = 5; x >= 0; x--) {\n        for (var y = dimension - 9; y >= dimension - 11; y--) {\n          bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n        }\n      }\n      var bestDifference = Infinity;\n      var bestVersion;\n      for (var _i = 0, VERSIONS_1 = version_1.VERSIONS; _i < VERSIONS_1.length; _i++) {\n        var version = VERSIONS_1[_i];\n        if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n          return version;\n        }\n        var difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n          bestVersion = version;\n          bestDifference = difference;\n        }\n        difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n          bestVersion = version;\n          bestDifference = difference;\n        }\n      }\n      // We can tolerate up to 3 bits of error since no two version info codewords will\n      // differ in less than 8 bits.\n      if (bestDifference <= 3) {\n        return bestVersion;\n      }\n    }\n    function readFormatInformation(matrix) {\n      var topLeftFormatInfoBits = 0;\n      for (var x = 0; x <= 8; x++) {\n        if (x !== 6) {\n          // Skip timing pattern bit\n          topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n        }\n      }\n      for (var y = 7; y >= 0; y--) {\n        if (y !== 6) {\n          // Skip timing pattern bit\n          topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n        }\n      }\n      var dimension = matrix.height;\n      var topRightBottomRightFormatInfoBits = 0;\n      for (var y = dimension - 1; y >= dimension - 7; y--) {\n        // bottom left\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n      }\n      for (var x = dimension - 8; x < dimension; x++) {\n        // top right\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n      }\n      var bestDifference = Infinity;\n      var bestFormatInfo = null;\n      for (var _i = 0, FORMAT_INFO_TABLE_1 = FORMAT_INFO_TABLE; _i < FORMAT_INFO_TABLE_1.length; _i++) {\n        var _a = FORMAT_INFO_TABLE_1[_i],\n          bits = _a.bits,\n          formatInfo = _a.formatInfo;\n        if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n          return formatInfo;\n        }\n        var difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n        if (difference < bestDifference) {\n          bestFormatInfo = formatInfo;\n          bestDifference = difference;\n        }\n        if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) {\n          // also try the other option\n          difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n          if (difference < bestDifference) {\n            bestFormatInfo = formatInfo;\n            bestDifference = difference;\n          }\n        }\n      }\n      // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n      if (bestDifference <= 3) {\n        return bestFormatInfo;\n      }\n      return null;\n    }\n    function getDataBlocks(codewords, version, ecLevel) {\n      var ecInfo = version.errorCorrectionLevels[ecLevel];\n      var dataBlocks = [];\n      var totalCodewords = 0;\n      ecInfo.ecBlocks.forEach(function (block) {\n        for (var i = 0; i < block.numBlocks; i++) {\n          dataBlocks.push({\n            numDataCodewords: block.dataCodewordsPerBlock,\n            codewords: []\n          });\n          totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n        }\n      });\n      // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n      // If we pull off less there's nothing we can do.\n      // If we pull off more we can safely truncate\n      if (codewords.length < totalCodewords) {\n        return null;\n      }\n      codewords = codewords.slice(0, totalCodewords);\n      var shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n      // Pull codewords to fill the blocks up to the minimum size\n      for (var i = 0; i < shortBlockSize; i++) {\n        for (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\n          var dataBlock = dataBlocks_1[_i];\n          dataBlock.codewords.push(codewords.shift());\n        }\n      }\n      // If there are any large blocks, pull codewords to fill the last element of those\n      if (ecInfo.ecBlocks.length > 1) {\n        var smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n        var largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n        for (var i = 0; i < largeBlockCount; i++) {\n          dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n        }\n      }\n      // Add the rest of the codewords to the blocks. These are the error correction codewords.\n      while (codewords.length > 0) {\n        for (var _a = 0, dataBlocks_2 = dataBlocks; _a < dataBlocks_2.length; _a++) {\n          var dataBlock = dataBlocks_2[_a];\n          dataBlock.codewords.push(codewords.shift());\n        }\n      }\n      return dataBlocks;\n    }\n    function decodeMatrix(matrix) {\n      var version = readVersion(matrix);\n      if (!version) {\n        return null;\n      }\n      var formatInfo = readFormatInformation(matrix);\n      if (!formatInfo) {\n        return null;\n      }\n      var codewords = readCodewords(matrix, version, formatInfo);\n      var dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n      if (!dataBlocks) {\n        return null;\n      }\n      // Count total number of data bytes\n      var totalBytes = dataBlocks.reduce(function (a, b) {\n        return a + b.numDataCodewords;\n      }, 0);\n      var resultBytes = new Uint8ClampedArray(totalBytes);\n      var resultIndex = 0;\n      for (var _i = 0, dataBlocks_3 = dataBlocks; _i < dataBlocks_3.length; _i++) {\n        var dataBlock = dataBlocks_3[_i];\n        var correctedBytes = reedsolomon_1.decode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n        if (!correctedBytes) {\n          return null;\n        }\n        for (var i = 0; i < dataBlock.numDataCodewords; i++) {\n          resultBytes[resultIndex++] = correctedBytes[i];\n        }\n      }\n      try {\n        return decodeData_1.decode(resultBytes, version.versionNumber);\n      } catch (_a) {\n        return null;\n      }\n    }\n    function decode(matrix) {\n      if (matrix == null) {\n        return null;\n      }\n      var result = decodeMatrix(matrix);\n      if (result) {\n        return result;\n      }\n      // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n      for (var x = 0; x < matrix.width; x++) {\n        for (var y = x + 1; y < matrix.height; y++) {\n          if (matrix.get(x, y) !== matrix.get(y, x)) {\n            matrix.set(x, y, !matrix.get(x, y));\n            matrix.set(y, x, !matrix.get(y, x));\n          }\n        }\n      }\n      return decodeMatrix(matrix);\n    }\n    exports.decode = decode;\n\n    /***/\n  }), ( /* 6 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    // tslint:disable:no-bitwise\n    var BitStream_1 = __webpack_require__(7);\n    var shiftJISTable_1 = __webpack_require__(8);\n    var Mode;\n    (function (Mode) {\n      Mode[\"Numeric\"] = \"numeric\";\n      Mode[\"Alphanumeric\"] = \"alphanumeric\";\n      Mode[\"Byte\"] = \"byte\";\n      Mode[\"Kanji\"] = \"kanji\";\n      Mode[\"ECI\"] = \"eci\";\n    })(Mode = exports.Mode || (exports.Mode = {}));\n    var ModeByte;\n    (function (ModeByte) {\n      ModeByte[ModeByte[\"Terminator\"] = 0] = \"Terminator\";\n      ModeByte[ModeByte[\"Numeric\"] = 1] = \"Numeric\";\n      ModeByte[ModeByte[\"Alphanumeric\"] = 2] = \"Alphanumeric\";\n      ModeByte[ModeByte[\"Byte\"] = 4] = \"Byte\";\n      ModeByte[ModeByte[\"Kanji\"] = 8] = \"Kanji\";\n      ModeByte[ModeByte[\"ECI\"] = 7] = \"ECI\";\n      // StructuredAppend = 0x3,\n      // FNC1FirstPosition = 0x5,\n      // FNC1SecondPosition = 0x9,\n    })(ModeByte || (ModeByte = {}));\n    function decodeNumeric(stream, size) {\n      var bytes = [];\n      var text = \"\";\n      var characterCountSize = [10, 12, 14][size];\n      var length = stream.readBits(characterCountSize);\n      // Read digits in groups of 3\n      while (length >= 3) {\n        var num = stream.readBits(10);\n        if (num >= 1000) {\n          throw new Error(\"Invalid numeric value above 999\");\n        }\n        var a = Math.floor(num / 100);\n        var b = Math.floor(num / 10) % 10;\n        var c = num % 10;\n        bytes.push(48 + a, 48 + b, 48 + c);\n        text += a.toString() + b.toString() + c.toString();\n        length -= 3;\n      }\n      // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n      if (length === 2) {\n        var num = stream.readBits(7);\n        if (num >= 100) {\n          throw new Error(\"Invalid numeric value above 99\");\n        }\n        var a = Math.floor(num / 10);\n        var b = num % 10;\n        bytes.push(48 + a, 48 + b);\n        text += a.toString() + b.toString();\n      } else if (length === 1) {\n        var num = stream.readBits(4);\n        if (num >= 10) {\n          throw new Error(\"Invalid numeric value above 9\");\n        }\n        bytes.push(48 + num);\n        text += num.toString();\n      }\n      return {\n        bytes: bytes,\n        text: text\n      };\n    }\n    var AlphanumericCharacterCodes = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\"];\n    function decodeAlphanumeric(stream, size) {\n      var bytes = [];\n      var text = \"\";\n      var characterCountSize = [9, 11, 13][size];\n      var length = stream.readBits(characterCountSize);\n      while (length >= 2) {\n        var v = stream.readBits(11);\n        var a = Math.floor(v / 45);\n        var b = v % 45;\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n        length -= 2;\n      }\n      if (length === 1) {\n        var a = stream.readBits(6);\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a];\n      }\n      return {\n        bytes: bytes,\n        text: text\n      };\n    }\n    function decodeByte(stream, size) {\n      var bytes = [];\n      var text = \"\";\n      var characterCountSize = [8, 16, 16][size];\n      var length = stream.readBits(characterCountSize);\n      for (var i = 0; i < length; i++) {\n        var b = stream.readBits(8);\n        bytes.push(b);\n      }\n      try {\n        text += decodeURIComponent(bytes.map(function (b) {\n          return \"%\" + (\"0\" + b.toString(16)).substr(-2);\n        }).join(\"\"));\n      } catch (_a) {\n        // failed to decode\n      }\n      return {\n        bytes: bytes,\n        text: text\n      };\n    }\n    function decodeKanji(stream, size) {\n      var bytes = [];\n      var text = \"\";\n      var characterCountSize = [8, 10, 12][size];\n      var length = stream.readBits(characterCountSize);\n      for (var i = 0; i < length; i++) {\n        var k = stream.readBits(13);\n        var c = Math.floor(k / 0xC0) << 8 | k % 0xC0;\n        if (c < 0x1F00) {\n          c += 0x8140;\n        } else {\n          c += 0xC140;\n        }\n        bytes.push(c >> 8, c & 0xFF);\n        text += String.fromCharCode(shiftJISTable_1.shiftJISTable[c]);\n      }\n      return {\n        bytes: bytes,\n        text: text\n      };\n    }\n    function decode(data, version) {\n      var _a, _b, _c, _d;\n      var stream = new BitStream_1.BitStream(data);\n      // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n      var size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n      var result = {\n        text: \"\",\n        bytes: [],\n        chunks: [],\n        version: version\n      };\n      while (stream.available() >= 4) {\n        var mode = stream.readBits(4);\n        if (mode === ModeByte.Terminator) {\n          return result;\n        } else if (mode === ModeByte.ECI) {\n          if (stream.readBits(1) === 0) {\n            result.chunks.push({\n              type: Mode.ECI,\n              assignmentNumber: stream.readBits(7)\n            });\n          } else if (stream.readBits(1) === 0) {\n            result.chunks.push({\n              type: Mode.ECI,\n              assignmentNumber: stream.readBits(14)\n            });\n          } else if (stream.readBits(1) === 0) {\n            result.chunks.push({\n              type: Mode.ECI,\n              assignmentNumber: stream.readBits(21)\n            });\n          } else {\n            // ECI data seems corrupted\n            result.chunks.push({\n              type: Mode.ECI,\n              assignmentNumber: -1\n            });\n          }\n        } else if (mode === ModeByte.Numeric) {\n          var numericResult = decodeNumeric(stream, size);\n          result.text += numericResult.text;\n          (_a = result.bytes).push.apply(_a, numericResult.bytes);\n          result.chunks.push({\n            type: Mode.Numeric,\n            text: numericResult.text\n          });\n        } else if (mode === ModeByte.Alphanumeric) {\n          var alphanumericResult = decodeAlphanumeric(stream, size);\n          result.text += alphanumericResult.text;\n          (_b = result.bytes).push.apply(_b, alphanumericResult.bytes);\n          result.chunks.push({\n            type: Mode.Alphanumeric,\n            text: alphanumericResult.text\n          });\n        } else if (mode === ModeByte.Byte) {\n          var byteResult = decodeByte(stream, size);\n          result.text += byteResult.text;\n          (_c = result.bytes).push.apply(_c, byteResult.bytes);\n          result.chunks.push({\n            type: Mode.Byte,\n            bytes: byteResult.bytes,\n            text: byteResult.text\n          });\n        } else if (mode === ModeByte.Kanji) {\n          var kanjiResult = decodeKanji(stream, size);\n          result.text += kanjiResult.text;\n          (_d = result.bytes).push.apply(_d, kanjiResult.bytes);\n          result.chunks.push({\n            type: Mode.Kanji,\n            bytes: kanjiResult.bytes,\n            text: kanjiResult.text\n          });\n        }\n      }\n      // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n      if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n        return result;\n      }\n    }\n    exports.decode = decode;\n\n    /***/\n  }), ( /* 7 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    // tslint:disable:no-bitwise\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var BitStream = /** @class */function () {\n      function BitStream(bytes) {\n        this.byteOffset = 0;\n        this.bitOffset = 0;\n        this.bytes = bytes;\n      }\n      BitStream.prototype.readBits = function (numBits) {\n        if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n          throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n        }\n        var result = 0;\n        // First, read remainder from current byte\n        if (this.bitOffset > 0) {\n          var bitsLeft = 8 - this.bitOffset;\n          var toRead = numBits < bitsLeft ? numBits : bitsLeft;\n          var bitsToNotRead = bitsLeft - toRead;\n          var mask = 0xFF >> 8 - toRead << bitsToNotRead;\n          result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n          numBits -= toRead;\n          this.bitOffset += toRead;\n          if (this.bitOffset === 8) {\n            this.bitOffset = 0;\n            this.byteOffset++;\n          }\n        }\n        // Next read whole bytes\n        if (numBits > 0) {\n          while (numBits >= 8) {\n            result = result << 8 | this.bytes[this.byteOffset] & 0xFF;\n            this.byteOffset++;\n            numBits -= 8;\n          }\n          // Finally read a partial byte\n          if (numBits > 0) {\n            var bitsToNotRead = 8 - numBits;\n            var mask = 0xFF >> bitsToNotRead << bitsToNotRead;\n            result = result << numBits | (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n            this.bitOffset += numBits;\n          }\n        }\n        return result;\n      };\n      BitStream.prototype.available = function () {\n        return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n      };\n      return BitStream;\n    }();\n    exports.BitStream = BitStream;\n\n    /***/\n  }), ( /* 8 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.shiftJISTable = {\n      0x20: 0x0020,\n      0x21: 0x0021,\n      0x22: 0x0022,\n      0x23: 0x0023,\n      0x24: 0x0024,\n      0x25: 0x0025,\n      0x26: 0x0026,\n      0x27: 0x0027,\n      0x28: 0x0028,\n      0x29: 0x0029,\n      0x2A: 0x002A,\n      0x2B: 0x002B,\n      0x2C: 0x002C,\n      0x2D: 0x002D,\n      0x2E: 0x002E,\n      0x2F: 0x002F,\n      0x30: 0x0030,\n      0x31: 0x0031,\n      0x32: 0x0032,\n      0x33: 0x0033,\n      0x34: 0x0034,\n      0x35: 0x0035,\n      0x36: 0x0036,\n      0x37: 0x0037,\n      0x38: 0x0038,\n      0x39: 0x0039,\n      0x3A: 0x003A,\n      0x3B: 0x003B,\n      0x3C: 0x003C,\n      0x3D: 0x003D,\n      0x3E: 0x003E,\n      0x3F: 0x003F,\n      0x40: 0x0040,\n      0x41: 0x0041,\n      0x42: 0x0042,\n      0x43: 0x0043,\n      0x44: 0x0044,\n      0x45: 0x0045,\n      0x46: 0x0046,\n      0x47: 0x0047,\n      0x48: 0x0048,\n      0x49: 0x0049,\n      0x4A: 0x004A,\n      0x4B: 0x004B,\n      0x4C: 0x004C,\n      0x4D: 0x004D,\n      0x4E: 0x004E,\n      0x4F: 0x004F,\n      0x50: 0x0050,\n      0x51: 0x0051,\n      0x52: 0x0052,\n      0x53: 0x0053,\n      0x54: 0x0054,\n      0x55: 0x0055,\n      0x56: 0x0056,\n      0x57: 0x0057,\n      0x58: 0x0058,\n      0x59: 0x0059,\n      0x5A: 0x005A,\n      0x5B: 0x005B,\n      0x5C: 0x00A5,\n      0x5D: 0x005D,\n      0x5E: 0x005E,\n      0x5F: 0x005F,\n      0x60: 0x0060,\n      0x61: 0x0061,\n      0x62: 0x0062,\n      0x63: 0x0063,\n      0x64: 0x0064,\n      0x65: 0x0065,\n      0x66: 0x0066,\n      0x67: 0x0067,\n      0x68: 0x0068,\n      0x69: 0x0069,\n      0x6A: 0x006A,\n      0x6B: 0x006B,\n      0x6C: 0x006C,\n      0x6D: 0x006D,\n      0x6E: 0x006E,\n      0x6F: 0x006F,\n      0x70: 0x0070,\n      0x71: 0x0071,\n      0x72: 0x0072,\n      0x73: 0x0073,\n      0x74: 0x0074,\n      0x75: 0x0075,\n      0x76: 0x0076,\n      0x77: 0x0077,\n      0x78: 0x0078,\n      0x79: 0x0079,\n      0x7A: 0x007A,\n      0x7B: 0x007B,\n      0x7C: 0x007C,\n      0x7D: 0x007D,\n      0x7E: 0x203E,\n      0x8140: 0x3000,\n      0x8141: 0x3001,\n      0x8142: 0x3002,\n      0x8143: 0xFF0C,\n      0x8144: 0xFF0E,\n      0x8145: 0x30FB,\n      0x8146: 0xFF1A,\n      0x8147: 0xFF1B,\n      0x8148: 0xFF1F,\n      0x8149: 0xFF01,\n      0x814A: 0x309B,\n      0x814B: 0x309C,\n      0x814C: 0x00B4,\n      0x814D: 0xFF40,\n      0x814E: 0x00A8,\n      0x814F: 0xFF3E,\n      0x8150: 0xFFE3,\n      0x8151: 0xFF3F,\n      0x8152: 0x30FD,\n      0x8153: 0x30FE,\n      0x8154: 0x309D,\n      0x8155: 0x309E,\n      0x8156: 0x3003,\n      0x8157: 0x4EDD,\n      0x8158: 0x3005,\n      0x8159: 0x3006,\n      0x815A: 0x3007,\n      0x815B: 0x30FC,\n      0x815C: 0x2015,\n      0x815D: 0x2010,\n      0x815E: 0xFF0F,\n      0x815F: 0x005C,\n      0x8160: 0x301C,\n      0x8161: 0x2016,\n      0x8162: 0xFF5C,\n      0x8163: 0x2026,\n      0x8164: 0x2025,\n      0x8165: 0x2018,\n      0x8166: 0x2019,\n      0x8167: 0x201C,\n      0x8168: 0x201D,\n      0x8169: 0xFF08,\n      0x816A: 0xFF09,\n      0x816B: 0x3014,\n      0x816C: 0x3015,\n      0x816D: 0xFF3B,\n      0x816E: 0xFF3D,\n      0x816F: 0xFF5B,\n      0x8170: 0xFF5D,\n      0x8171: 0x3008,\n      0x8172: 0x3009,\n      0x8173: 0x300A,\n      0x8174: 0x300B,\n      0x8175: 0x300C,\n      0x8176: 0x300D,\n      0x8177: 0x300E,\n      0x8178: 0x300F,\n      0x8179: 0x3010,\n      0x817A: 0x3011,\n      0x817B: 0xFF0B,\n      0x817C: 0x2212,\n      0x817D: 0x00B1,\n      0x817E: 0x00D7,\n      0x8180: 0x00F7,\n      0x8181: 0xFF1D,\n      0x8182: 0x2260,\n      0x8183: 0xFF1C,\n      0x8184: 0xFF1E,\n      0x8185: 0x2266,\n      0x8186: 0x2267,\n      0x8187: 0x221E,\n      0x8188: 0x2234,\n      0x8189: 0x2642,\n      0x818A: 0x2640,\n      0x818B: 0x00B0,\n      0x818C: 0x2032,\n      0x818D: 0x2033,\n      0x818E: 0x2103,\n      0x818F: 0xFFE5,\n      0x8190: 0xFF04,\n      0x8191: 0x00A2,\n      0x8192: 0x00A3,\n      0x8193: 0xFF05,\n      0x8194: 0xFF03,\n      0x8195: 0xFF06,\n      0x8196: 0xFF0A,\n      0x8197: 0xFF20,\n      0x8198: 0x00A7,\n      0x8199: 0x2606,\n      0x819A: 0x2605,\n      0x819B: 0x25CB,\n      0x819C: 0x25CF,\n      0x819D: 0x25CE,\n      0x819E: 0x25C7,\n      0x819F: 0x25C6,\n      0x81A0: 0x25A1,\n      0x81A1: 0x25A0,\n      0x81A2: 0x25B3,\n      0x81A3: 0x25B2,\n      0x81A4: 0x25BD,\n      0x81A5: 0x25BC,\n      0x81A6: 0x203B,\n      0x81A7: 0x3012,\n      0x81A8: 0x2192,\n      0x81A9: 0x2190,\n      0x81AA: 0x2191,\n      0x81AB: 0x2193,\n      0x81AC: 0x3013,\n      0x81B8: 0x2208,\n      0x81B9: 0x220B,\n      0x81BA: 0x2286,\n      0x81BB: 0x2287,\n      0x81BC: 0x2282,\n      0x81BD: 0x2283,\n      0x81BE: 0x222A,\n      0x81BF: 0x2229,\n      0x81C8: 0x2227,\n      0x81C9: 0x2228,\n      0x81CA: 0x00AC,\n      0x81CB: 0x21D2,\n      0x81CC: 0x21D4,\n      0x81CD: 0x2200,\n      0x81CE: 0x2203,\n      0x81DA: 0x2220,\n      0x81DB: 0x22A5,\n      0x81DC: 0x2312,\n      0x81DD: 0x2202,\n      0x81DE: 0x2207,\n      0x81DF: 0x2261,\n      0x81E0: 0x2252,\n      0x81E1: 0x226A,\n      0x81E2: 0x226B,\n      0x81E3: 0x221A,\n      0x81E4: 0x223D,\n      0x81E5: 0x221D,\n      0x81E6: 0x2235,\n      0x81E7: 0x222B,\n      0x81E8: 0x222C,\n      0x81F0: 0x212B,\n      0x81F1: 0x2030,\n      0x81F2: 0x266F,\n      0x81F3: 0x266D,\n      0x81F4: 0x266A,\n      0x81F5: 0x2020,\n      0x81F6: 0x2021,\n      0x81F7: 0x00B6,\n      0x81FC: 0x25EF,\n      0x824F: 0xFF10,\n      0x8250: 0xFF11,\n      0x8251: 0xFF12,\n      0x8252: 0xFF13,\n      0x8253: 0xFF14,\n      0x8254: 0xFF15,\n      0x8255: 0xFF16,\n      0x8256: 0xFF17,\n      0x8257: 0xFF18,\n      0x8258: 0xFF19,\n      0x8260: 0xFF21,\n      0x8261: 0xFF22,\n      0x8262: 0xFF23,\n      0x8263: 0xFF24,\n      0x8264: 0xFF25,\n      0x8265: 0xFF26,\n      0x8266: 0xFF27,\n      0x8267: 0xFF28,\n      0x8268: 0xFF29,\n      0x8269: 0xFF2A,\n      0x826A: 0xFF2B,\n      0x826B: 0xFF2C,\n      0x826C: 0xFF2D,\n      0x826D: 0xFF2E,\n      0x826E: 0xFF2F,\n      0x826F: 0xFF30,\n      0x8270: 0xFF31,\n      0x8271: 0xFF32,\n      0x8272: 0xFF33,\n      0x8273: 0xFF34,\n      0x8274: 0xFF35,\n      0x8275: 0xFF36,\n      0x8276: 0xFF37,\n      0x8277: 0xFF38,\n      0x8278: 0xFF39,\n      0x8279: 0xFF3A,\n      0x8281: 0xFF41,\n      0x8282: 0xFF42,\n      0x8283: 0xFF43,\n      0x8284: 0xFF44,\n      0x8285: 0xFF45,\n      0x8286: 0xFF46,\n      0x8287: 0xFF47,\n      0x8288: 0xFF48,\n      0x8289: 0xFF49,\n      0x828A: 0xFF4A,\n      0x828B: 0xFF4B,\n      0x828C: 0xFF4C,\n      0x828D: 0xFF4D,\n      0x828E: 0xFF4E,\n      0x828F: 0xFF4F,\n      0x8290: 0xFF50,\n      0x8291: 0xFF51,\n      0x8292: 0xFF52,\n      0x8293: 0xFF53,\n      0x8294: 0xFF54,\n      0x8295: 0xFF55,\n      0x8296: 0xFF56,\n      0x8297: 0xFF57,\n      0x8298: 0xFF58,\n      0x8299: 0xFF59,\n      0x829A: 0xFF5A,\n      0x829F: 0x3041,\n      0x82A0: 0x3042,\n      0x82A1: 0x3043,\n      0x82A2: 0x3044,\n      0x82A3: 0x3045,\n      0x82A4: 0x3046,\n      0x82A5: 0x3047,\n      0x82A6: 0x3048,\n      0x82A7: 0x3049,\n      0x82A8: 0x304A,\n      0x82A9: 0x304B,\n      0x82AA: 0x304C,\n      0x82AB: 0x304D,\n      0x82AC: 0x304E,\n      0x82AD: 0x304F,\n      0x82AE: 0x3050,\n      0x82AF: 0x3051,\n      0x82B0: 0x3052,\n      0x82B1: 0x3053,\n      0x82B2: 0x3054,\n      0x82B3: 0x3055,\n      0x82B4: 0x3056,\n      0x82B5: 0x3057,\n      0x82B6: 0x3058,\n      0x82B7: 0x3059,\n      0x82B8: 0x305A,\n      0x82B9: 0x305B,\n      0x82BA: 0x305C,\n      0x82BB: 0x305D,\n      0x82BC: 0x305E,\n      0x82BD: 0x305F,\n      0x82BE: 0x3060,\n      0x82BF: 0x3061,\n      0x82C0: 0x3062,\n      0x82C1: 0x3063,\n      0x82C2: 0x3064,\n      0x82C3: 0x3065,\n      0x82C4: 0x3066,\n      0x82C5: 0x3067,\n      0x82C6: 0x3068,\n      0x82C7: 0x3069,\n      0x82C8: 0x306A,\n      0x82C9: 0x306B,\n      0x82CA: 0x306C,\n      0x82CB: 0x306D,\n      0x82CC: 0x306E,\n      0x82CD: 0x306F,\n      0x82CE: 0x3070,\n      0x82CF: 0x3071,\n      0x82D0: 0x3072,\n      0x82D1: 0x3073,\n      0x82D2: 0x3074,\n      0x82D3: 0x3075,\n      0x82D4: 0x3076,\n      0x82D5: 0x3077,\n      0x82D6: 0x3078,\n      0x82D7: 0x3079,\n      0x82D8: 0x307A,\n      0x82D9: 0x307B,\n      0x82DA: 0x307C,\n      0x82DB: 0x307D,\n      0x82DC: 0x307E,\n      0x82DD: 0x307F,\n      0x82DE: 0x3080,\n      0x82DF: 0x3081,\n      0x82E0: 0x3082,\n      0x82E1: 0x3083,\n      0x82E2: 0x3084,\n      0x82E3: 0x3085,\n      0x82E4: 0x3086,\n      0x82E5: 0x3087,\n      0x82E6: 0x3088,\n      0x82E7: 0x3089,\n      0x82E8: 0x308A,\n      0x82E9: 0x308B,\n      0x82EA: 0x308C,\n      0x82EB: 0x308D,\n      0x82EC: 0x308E,\n      0x82ED: 0x308F,\n      0x82EE: 0x3090,\n      0x82EF: 0x3091,\n      0x82F0: 0x3092,\n      0x82F1: 0x3093,\n      0x8340: 0x30A1,\n      0x8341: 0x30A2,\n      0x8342: 0x30A3,\n      0x8343: 0x30A4,\n      0x8344: 0x30A5,\n      0x8345: 0x30A6,\n      0x8346: 0x30A7,\n      0x8347: 0x30A8,\n      0x8348: 0x30A9,\n      0x8349: 0x30AA,\n      0x834A: 0x30AB,\n      0x834B: 0x30AC,\n      0x834C: 0x30AD,\n      0x834D: 0x30AE,\n      0x834E: 0x30AF,\n      0x834F: 0x30B0,\n      0x8350: 0x30B1,\n      0x8351: 0x30B2,\n      0x8352: 0x30B3,\n      0x8353: 0x30B4,\n      0x8354: 0x30B5,\n      0x8355: 0x30B6,\n      0x8356: 0x30B7,\n      0x8357: 0x30B8,\n      0x8358: 0x30B9,\n      0x8359: 0x30BA,\n      0x835A: 0x30BB,\n      0x835B: 0x30BC,\n      0x835C: 0x30BD,\n      0x835D: 0x30BE,\n      0x835E: 0x30BF,\n      0x835F: 0x30C0,\n      0x8360: 0x30C1,\n      0x8361: 0x30C2,\n      0x8362: 0x30C3,\n      0x8363: 0x30C4,\n      0x8364: 0x30C5,\n      0x8365: 0x30C6,\n      0x8366: 0x30C7,\n      0x8367: 0x30C8,\n      0x8368: 0x30C9,\n      0x8369: 0x30CA,\n      0x836A: 0x30CB,\n      0x836B: 0x30CC,\n      0x836C: 0x30CD,\n      0x836D: 0x30CE,\n      0x836E: 0x30CF,\n      0x836F: 0x30D0,\n      0x8370: 0x30D1,\n      0x8371: 0x30D2,\n      0x8372: 0x30D3,\n      0x8373: 0x30D4,\n      0x8374: 0x30D5,\n      0x8375: 0x30D6,\n      0x8376: 0x30D7,\n      0x8377: 0x30D8,\n      0x8378: 0x30D9,\n      0x8379: 0x30DA,\n      0x837A: 0x30DB,\n      0x837B: 0x30DC,\n      0x837C: 0x30DD,\n      0x837D: 0x30DE,\n      0x837E: 0x30DF,\n      0x8380: 0x30E0,\n      0x8381: 0x30E1,\n      0x8382: 0x30E2,\n      0x8383: 0x30E3,\n      0x8384: 0x30E4,\n      0x8385: 0x30E5,\n      0x8386: 0x30E6,\n      0x8387: 0x30E7,\n      0x8388: 0x30E8,\n      0x8389: 0x30E9,\n      0x838A: 0x30EA,\n      0x838B: 0x30EB,\n      0x838C: 0x30EC,\n      0x838D: 0x30ED,\n      0x838E: 0x30EE,\n      0x838F: 0x30EF,\n      0x8390: 0x30F0,\n      0x8391: 0x30F1,\n      0x8392: 0x30F2,\n      0x8393: 0x30F3,\n      0x8394: 0x30F4,\n      0x8395: 0x30F5,\n      0x8396: 0x30F6,\n      0x839F: 0x0391,\n      0x83A0: 0x0392,\n      0x83A1: 0x0393,\n      0x83A2: 0x0394,\n      0x83A3: 0x0395,\n      0x83A4: 0x0396,\n      0x83A5: 0x0397,\n      0x83A6: 0x0398,\n      0x83A7: 0x0399,\n      0x83A8: 0x039A,\n      0x83A9: 0x039B,\n      0x83AA: 0x039C,\n      0x83AB: 0x039D,\n      0x83AC: 0x039E,\n      0x83AD: 0x039F,\n      0x83AE: 0x03A0,\n      0x83AF: 0x03A1,\n      0x83B0: 0x03A3,\n      0x83B1: 0x03A4,\n      0x83B2: 0x03A5,\n      0x83B3: 0x03A6,\n      0x83B4: 0x03A7,\n      0x83B5: 0x03A8,\n      0x83B6: 0x03A9,\n      0x83BF: 0x03B1,\n      0x83C0: 0x03B2,\n      0x83C1: 0x03B3,\n      0x83C2: 0x03B4,\n      0x83C3: 0x03B5,\n      0x83C4: 0x03B6,\n      0x83C5: 0x03B7,\n      0x83C6: 0x03B8,\n      0x83C7: 0x03B9,\n      0x83C8: 0x03BA,\n      0x83C9: 0x03BB,\n      0x83CA: 0x03BC,\n      0x83CB: 0x03BD,\n      0x83CC: 0x03BE,\n      0x83CD: 0x03BF,\n      0x83CE: 0x03C0,\n      0x83CF: 0x03C1,\n      0x83D0: 0x03C3,\n      0x83D1: 0x03C4,\n      0x83D2: 0x03C5,\n      0x83D3: 0x03C6,\n      0x83D4: 0x03C7,\n      0x83D5: 0x03C8,\n      0x83D6: 0x03C9,\n      0x8440: 0x0410,\n      0x8441: 0x0411,\n      0x8442: 0x0412,\n      0x8443: 0x0413,\n      0x8444: 0x0414,\n      0x8445: 0x0415,\n      0x8446: 0x0401,\n      0x8447: 0x0416,\n      0x8448: 0x0417,\n      0x8449: 0x0418,\n      0x844A: 0x0419,\n      0x844B: 0x041A,\n      0x844C: 0x041B,\n      0x844D: 0x041C,\n      0x844E: 0x041D,\n      0x844F: 0x041E,\n      0x8450: 0x041F,\n      0x8451: 0x0420,\n      0x8452: 0x0421,\n      0x8453: 0x0422,\n      0x8454: 0x0423,\n      0x8455: 0x0424,\n      0x8456: 0x0425,\n      0x8457: 0x0426,\n      0x8458: 0x0427,\n      0x8459: 0x0428,\n      0x845A: 0x0429,\n      0x845B: 0x042A,\n      0x845C: 0x042B,\n      0x845D: 0x042C,\n      0x845E: 0x042D,\n      0x845F: 0x042E,\n      0x8460: 0x042F,\n      0x8470: 0x0430,\n      0x8471: 0x0431,\n      0x8472: 0x0432,\n      0x8473: 0x0433,\n      0x8474: 0x0434,\n      0x8475: 0x0435,\n      0x8476: 0x0451,\n      0x8477: 0x0436,\n      0x8478: 0x0437,\n      0x8479: 0x0438,\n      0x847A: 0x0439,\n      0x847B: 0x043A,\n      0x847C: 0x043B,\n      0x847D: 0x043C,\n      0x847E: 0x043D,\n      0x8480: 0x043E,\n      0x8481: 0x043F,\n      0x8482: 0x0440,\n      0x8483: 0x0441,\n      0x8484: 0x0442,\n      0x8485: 0x0443,\n      0x8486: 0x0444,\n      0x8487: 0x0445,\n      0x8488: 0x0446,\n      0x8489: 0x0447,\n      0x848A: 0x0448,\n      0x848B: 0x0449,\n      0x848C: 0x044A,\n      0x848D: 0x044B,\n      0x848E: 0x044C,\n      0x848F: 0x044D,\n      0x8490: 0x044E,\n      0x8491: 0x044F,\n      0x849F: 0x2500,\n      0x84A0: 0x2502,\n      0x84A1: 0x250C,\n      0x84A2: 0x2510,\n      0x84A3: 0x2518,\n      0x84A4: 0x2514,\n      0x84A5: 0x251C,\n      0x84A6: 0x252C,\n      0x84A7: 0x2524,\n      0x84A8: 0x2534,\n      0x84A9: 0x253C,\n      0x84AA: 0x2501,\n      0x84AB: 0x2503,\n      0x84AC: 0x250F,\n      0x84AD: 0x2513,\n      0x84AE: 0x251B,\n      0x84AF: 0x2517,\n      0x84B0: 0x2523,\n      0x84B1: 0x2533,\n      0x84B2: 0x252B,\n      0x84B3: 0x253B,\n      0x84B4: 0x254B,\n      0x84B5: 0x2520,\n      0x84B6: 0x252F,\n      0x84B7: 0x2528,\n      0x84B8: 0x2537,\n      0x84B9: 0x253F,\n      0x84BA: 0x251D,\n      0x84BB: 0x2530,\n      0x84BC: 0x2525,\n      0x84BD: 0x2538,\n      0x84BE: 0x2542,\n      0x889F: 0x4E9C,\n      0x88A0: 0x5516,\n      0x88A1: 0x5A03,\n      0x88A2: 0x963F,\n      0x88A3: 0x54C0,\n      0x88A4: 0x611B,\n      0x88A5: 0x6328,\n      0x88A6: 0x59F6,\n      0x88A7: 0x9022,\n      0x88A8: 0x8475,\n      0x88A9: 0x831C,\n      0x88AA: 0x7A50,\n      0x88AB: 0x60AA,\n      0x88AC: 0x63E1,\n      0x88AD: 0x6E25,\n      0x88AE: 0x65ED,\n      0x88AF: 0x8466,\n      0x88B0: 0x82A6,\n      0x88B1: 0x9BF5,\n      0x88B2: 0x6893,\n      0x88B3: 0x5727,\n      0x88B4: 0x65A1,\n      0x88B5: 0x6271,\n      0x88B6: 0x5B9B,\n      0x88B7: 0x59D0,\n      0x88B8: 0x867B,\n      0x88B9: 0x98F4,\n      0x88BA: 0x7D62,\n      0x88BB: 0x7DBE,\n      0x88BC: 0x9B8E,\n      0x88BD: 0x6216,\n      0x88BE: 0x7C9F,\n      0x88BF: 0x88B7,\n      0x88C0: 0x5B89,\n      0x88C1: 0x5EB5,\n      0x88C2: 0x6309,\n      0x88C3: 0x6697,\n      0x88C4: 0x6848,\n      0x88C5: 0x95C7,\n      0x88C6: 0x978D,\n      0x88C7: 0x674F,\n      0x88C8: 0x4EE5,\n      0x88C9: 0x4F0A,\n      0x88CA: 0x4F4D,\n      0x88CB: 0x4F9D,\n      0x88CC: 0x5049,\n      0x88CD: 0x56F2,\n      0x88CE: 0x5937,\n      0x88CF: 0x59D4,\n      0x88D0: 0x5A01,\n      0x88D1: 0x5C09,\n      0x88D2: 0x60DF,\n      0x88D3: 0x610F,\n      0x88D4: 0x6170,\n      0x88D5: 0x6613,\n      0x88D6: 0x6905,\n      0x88D7: 0x70BA,\n      0x88D8: 0x754F,\n      0x88D9: 0x7570,\n      0x88DA: 0x79FB,\n      0x88DB: 0x7DAD,\n      0x88DC: 0x7DEF,\n      0x88DD: 0x80C3,\n      0x88DE: 0x840E,\n      0x88DF: 0x8863,\n      0x88E0: 0x8B02,\n      0x88E1: 0x9055,\n      0x88E2: 0x907A,\n      0x88E3: 0x533B,\n      0x88E4: 0x4E95,\n      0x88E5: 0x4EA5,\n      0x88E6: 0x57DF,\n      0x88E7: 0x80B2,\n      0x88E8: 0x90C1,\n      0x88E9: 0x78EF,\n      0x88EA: 0x4E00,\n      0x88EB: 0x58F1,\n      0x88EC: 0x6EA2,\n      0x88ED: 0x9038,\n      0x88EE: 0x7A32,\n      0x88EF: 0x8328,\n      0x88F0: 0x828B,\n      0x88F1: 0x9C2F,\n      0x88F2: 0x5141,\n      0x88F3: 0x5370,\n      0x88F4: 0x54BD,\n      0x88F5: 0x54E1,\n      0x88F6: 0x56E0,\n      0x88F7: 0x59FB,\n      0x88F8: 0x5F15,\n      0x88F9: 0x98F2,\n      0x88FA: 0x6DEB,\n      0x88FB: 0x80E4,\n      0x88FC: 0x852D,\n      0x8940: 0x9662,\n      0x8941: 0x9670,\n      0x8942: 0x96A0,\n      0x8943: 0x97FB,\n      0x8944: 0x540B,\n      0x8945: 0x53F3,\n      0x8946: 0x5B87,\n      0x8947: 0x70CF,\n      0x8948: 0x7FBD,\n      0x8949: 0x8FC2,\n      0x894A: 0x96E8,\n      0x894B: 0x536F,\n      0x894C: 0x9D5C,\n      0x894D: 0x7ABA,\n      0x894E: 0x4E11,\n      0x894F: 0x7893,\n      0x8950: 0x81FC,\n      0x8951: 0x6E26,\n      0x8952: 0x5618,\n      0x8953: 0x5504,\n      0x8954: 0x6B1D,\n      0x8955: 0x851A,\n      0x8956: 0x9C3B,\n      0x8957: 0x59E5,\n      0x8958: 0x53A9,\n      0x8959: 0x6D66,\n      0x895A: 0x74DC,\n      0x895B: 0x958F,\n      0x895C: 0x5642,\n      0x895D: 0x4E91,\n      0x895E: 0x904B,\n      0x895F: 0x96F2,\n      0x8960: 0x834F,\n      0x8961: 0x990C,\n      0x8962: 0x53E1,\n      0x8963: 0x55B6,\n      0x8964: 0x5B30,\n      0x8965: 0x5F71,\n      0x8966: 0x6620,\n      0x8967: 0x66F3,\n      0x8968: 0x6804,\n      0x8969: 0x6C38,\n      0x896A: 0x6CF3,\n      0x896B: 0x6D29,\n      0x896C: 0x745B,\n      0x896D: 0x76C8,\n      0x896E: 0x7A4E,\n      0x896F: 0x9834,\n      0x8970: 0x82F1,\n      0x8971: 0x885B,\n      0x8972: 0x8A60,\n      0x8973: 0x92ED,\n      0x8974: 0x6DB2,\n      0x8975: 0x75AB,\n      0x8976: 0x76CA,\n      0x8977: 0x99C5,\n      0x8978: 0x60A6,\n      0x8979: 0x8B01,\n      0x897A: 0x8D8A,\n      0x897B: 0x95B2,\n      0x897C: 0x698E,\n      0x897D: 0x53AD,\n      0x897E: 0x5186,\n      0x8980: 0x5712,\n      0x8981: 0x5830,\n      0x8982: 0x5944,\n      0x8983: 0x5BB4,\n      0x8984: 0x5EF6,\n      0x8985: 0x6028,\n      0x8986: 0x63A9,\n      0x8987: 0x63F4,\n      0x8988: 0x6CBF,\n      0x8989: 0x6F14,\n      0x898A: 0x708E,\n      0x898B: 0x7114,\n      0x898C: 0x7159,\n      0x898D: 0x71D5,\n      0x898E: 0x733F,\n      0x898F: 0x7E01,\n      0x8990: 0x8276,\n      0x8991: 0x82D1,\n      0x8992: 0x8597,\n      0x8993: 0x9060,\n      0x8994: 0x925B,\n      0x8995: 0x9D1B,\n      0x8996: 0x5869,\n      0x8997: 0x65BC,\n      0x8998: 0x6C5A,\n      0x8999: 0x7525,\n      0x899A: 0x51F9,\n      0x899B: 0x592E,\n      0x899C: 0x5965,\n      0x899D: 0x5F80,\n      0x899E: 0x5FDC,\n      0x899F: 0x62BC,\n      0x89A0: 0x65FA,\n      0x89A1: 0x6A2A,\n      0x89A2: 0x6B27,\n      0x89A3: 0x6BB4,\n      0x89A4: 0x738B,\n      0x89A5: 0x7FC1,\n      0x89A6: 0x8956,\n      0x89A7: 0x9D2C,\n      0x89A8: 0x9D0E,\n      0x89A9: 0x9EC4,\n      0x89AA: 0x5CA1,\n      0x89AB: 0x6C96,\n      0x89AC: 0x837B,\n      0x89AD: 0x5104,\n      0x89AE: 0x5C4B,\n      0x89AF: 0x61B6,\n      0x89B0: 0x81C6,\n      0x89B1: 0x6876,\n      0x89B2: 0x7261,\n      0x89B3: 0x4E59,\n      0x89B4: 0x4FFA,\n      0x89B5: 0x5378,\n      0x89B6: 0x6069,\n      0x89B7: 0x6E29,\n      0x89B8: 0x7A4F,\n      0x89B9: 0x97F3,\n      0x89BA: 0x4E0B,\n      0x89BB: 0x5316,\n      0x89BC: 0x4EEE,\n      0x89BD: 0x4F55,\n      0x89BE: 0x4F3D,\n      0x89BF: 0x4FA1,\n      0x89C0: 0x4F73,\n      0x89C1: 0x52A0,\n      0x89C2: 0x53EF,\n      0x89C3: 0x5609,\n      0x89C4: 0x590F,\n      0x89C5: 0x5AC1,\n      0x89C6: 0x5BB6,\n      0x89C7: 0x5BE1,\n      0x89C8: 0x79D1,\n      0x89C9: 0x6687,\n      0x89CA: 0x679C,\n      0x89CB: 0x67B6,\n      0x89CC: 0x6B4C,\n      0x89CD: 0x6CB3,\n      0x89CE: 0x706B,\n      0x89CF: 0x73C2,\n      0x89D0: 0x798D,\n      0x89D1: 0x79BE,\n      0x89D2: 0x7A3C,\n      0x89D3: 0x7B87,\n      0x89D4: 0x82B1,\n      0x89D5: 0x82DB,\n      0x89D6: 0x8304,\n      0x89D7: 0x8377,\n      0x89D8: 0x83EF,\n      0x89D9: 0x83D3,\n      0x89DA: 0x8766,\n      0x89DB: 0x8AB2,\n      0x89DC: 0x5629,\n      0x89DD: 0x8CA8,\n      0x89DE: 0x8FE6,\n      0x89DF: 0x904E,\n      0x89E0: 0x971E,\n      0x89E1: 0x868A,\n      0x89E2: 0x4FC4,\n      0x89E3: 0x5CE8,\n      0x89E4: 0x6211,\n      0x89E5: 0x7259,\n      0x89E6: 0x753B,\n      0x89E7: 0x81E5,\n      0x89E8: 0x82BD,\n      0x89E9: 0x86FE,\n      0x89EA: 0x8CC0,\n      0x89EB: 0x96C5,\n      0x89EC: 0x9913,\n      0x89ED: 0x99D5,\n      0x89EE: 0x4ECB,\n      0x89EF: 0x4F1A,\n      0x89F0: 0x89E3,\n      0x89F1: 0x56DE,\n      0x89F2: 0x584A,\n      0x89F3: 0x58CA,\n      0x89F4: 0x5EFB,\n      0x89F5: 0x5FEB,\n      0x89F6: 0x602A,\n      0x89F7: 0x6094,\n      0x89F8: 0x6062,\n      0x89F9: 0x61D0,\n      0x89FA: 0x6212,\n      0x89FB: 0x62D0,\n      0x89FC: 0x6539,\n      0x8A40: 0x9B41,\n      0x8A41: 0x6666,\n      0x8A42: 0x68B0,\n      0x8A43: 0x6D77,\n      0x8A44: 0x7070,\n      0x8A45: 0x754C,\n      0x8A46: 0x7686,\n      0x8A47: 0x7D75,\n      0x8A48: 0x82A5,\n      0x8A49: 0x87F9,\n      0x8A4A: 0x958B,\n      0x8A4B: 0x968E,\n      0x8A4C: 0x8C9D,\n      0x8A4D: 0x51F1,\n      0x8A4E: 0x52BE,\n      0x8A4F: 0x5916,\n      0x8A50: 0x54B3,\n      0x8A51: 0x5BB3,\n      0x8A52: 0x5D16,\n      0x8A53: 0x6168,\n      0x8A54: 0x6982,\n      0x8A55: 0x6DAF,\n      0x8A56: 0x788D,\n      0x8A57: 0x84CB,\n      0x8A58: 0x8857,\n      0x8A59: 0x8A72,\n      0x8A5A: 0x93A7,\n      0x8A5B: 0x9AB8,\n      0x8A5C: 0x6D6C,\n      0x8A5D: 0x99A8,\n      0x8A5E: 0x86D9,\n      0x8A5F: 0x57A3,\n      0x8A60: 0x67FF,\n      0x8A61: 0x86CE,\n      0x8A62: 0x920E,\n      0x8A63: 0x5283,\n      0x8A64: 0x5687,\n      0x8A65: 0x5404,\n      0x8A66: 0x5ED3,\n      0x8A67: 0x62E1,\n      0x8A68: 0x64B9,\n      0x8A69: 0x683C,\n      0x8A6A: 0x6838,\n      0x8A6B: 0x6BBB,\n      0x8A6C: 0x7372,\n      0x8A6D: 0x78BA,\n      0x8A6E: 0x7A6B,\n      0x8A6F: 0x899A,\n      0x8A70: 0x89D2,\n      0x8A71: 0x8D6B,\n      0x8A72: 0x8F03,\n      0x8A73: 0x90ED,\n      0x8A74: 0x95A3,\n      0x8A75: 0x9694,\n      0x8A76: 0x9769,\n      0x8A77: 0x5B66,\n      0x8A78: 0x5CB3,\n      0x8A79: 0x697D,\n      0x8A7A: 0x984D,\n      0x8A7B: 0x984E,\n      0x8A7C: 0x639B,\n      0x8A7D: 0x7B20,\n      0x8A7E: 0x6A2B,\n      0x8A80: 0x6A7F,\n      0x8A81: 0x68B6,\n      0x8A82: 0x9C0D,\n      0x8A83: 0x6F5F,\n      0x8A84: 0x5272,\n      0x8A85: 0x559D,\n      0x8A86: 0x6070,\n      0x8A87: 0x62EC,\n      0x8A88: 0x6D3B,\n      0x8A89: 0x6E07,\n      0x8A8A: 0x6ED1,\n      0x8A8B: 0x845B,\n      0x8A8C: 0x8910,\n      0x8A8D: 0x8F44,\n      0x8A8E: 0x4E14,\n      0x8A8F: 0x9C39,\n      0x8A90: 0x53F6,\n      0x8A91: 0x691B,\n      0x8A92: 0x6A3A,\n      0x8A93: 0x9784,\n      0x8A94: 0x682A,\n      0x8A95: 0x515C,\n      0x8A96: 0x7AC3,\n      0x8A97: 0x84B2,\n      0x8A98: 0x91DC,\n      0x8A99: 0x938C,\n      0x8A9A: 0x565B,\n      0x8A9B: 0x9D28,\n      0x8A9C: 0x6822,\n      0x8A9D: 0x8305,\n      0x8A9E: 0x8431,\n      0x8A9F: 0x7CA5,\n      0x8AA0: 0x5208,\n      0x8AA1: 0x82C5,\n      0x8AA2: 0x74E6,\n      0x8AA3: 0x4E7E,\n      0x8AA4: 0x4F83,\n      0x8AA5: 0x51A0,\n      0x8AA6: 0x5BD2,\n      0x8AA7: 0x520A,\n      0x8AA8: 0x52D8,\n      0x8AA9: 0x52E7,\n      0x8AAA: 0x5DFB,\n      0x8AAB: 0x559A,\n      0x8AAC: 0x582A,\n      0x8AAD: 0x59E6,\n      0x8AAE: 0x5B8C,\n      0x8AAF: 0x5B98,\n      0x8AB0: 0x5BDB,\n      0x8AB1: 0x5E72,\n      0x8AB2: 0x5E79,\n      0x8AB3: 0x60A3,\n      0x8AB4: 0x611F,\n      0x8AB5: 0x6163,\n      0x8AB6: 0x61BE,\n      0x8AB7: 0x63DB,\n      0x8AB8: 0x6562,\n      0x8AB9: 0x67D1,\n      0x8ABA: 0x6853,\n      0x8ABB: 0x68FA,\n      0x8ABC: 0x6B3E,\n      0x8ABD: 0x6B53,\n      0x8ABE: 0x6C57,\n      0x8ABF: 0x6F22,\n      0x8AC0: 0x6F97,\n      0x8AC1: 0x6F45,\n      0x8AC2: 0x74B0,\n      0x8AC3: 0x7518,\n      0x8AC4: 0x76E3,\n      0x8AC5: 0x770B,\n      0x8AC6: 0x7AFF,\n      0x8AC7: 0x7BA1,\n      0x8AC8: 0x7C21,\n      0x8AC9: 0x7DE9,\n      0x8ACA: 0x7F36,\n      0x8ACB: 0x7FF0,\n      0x8ACC: 0x809D,\n      0x8ACD: 0x8266,\n      0x8ACE: 0x839E,\n      0x8ACF: 0x89B3,\n      0x8AD0: 0x8ACC,\n      0x8AD1: 0x8CAB,\n      0x8AD2: 0x9084,\n      0x8AD3: 0x9451,\n      0x8AD4: 0x9593,\n      0x8AD5: 0x9591,\n      0x8AD6: 0x95A2,\n      0x8AD7: 0x9665,\n      0x8AD8: 0x97D3,\n      0x8AD9: 0x9928,\n      0x8ADA: 0x8218,\n      0x8ADB: 0x4E38,\n      0x8ADC: 0x542B,\n      0x8ADD: 0x5CB8,\n      0x8ADE: 0x5DCC,\n      0x8ADF: 0x73A9,\n      0x8AE0: 0x764C,\n      0x8AE1: 0x773C,\n      0x8AE2: 0x5CA9,\n      0x8AE3: 0x7FEB,\n      0x8AE4: 0x8D0B,\n      0x8AE5: 0x96C1,\n      0x8AE6: 0x9811,\n      0x8AE7: 0x9854,\n      0x8AE8: 0x9858,\n      0x8AE9: 0x4F01,\n      0x8AEA: 0x4F0E,\n      0x8AEB: 0x5371,\n      0x8AEC: 0x559C,\n      0x8AED: 0x5668,\n      0x8AEE: 0x57FA,\n      0x8AEF: 0x5947,\n      0x8AF0: 0x5B09,\n      0x8AF1: 0x5BC4,\n      0x8AF2: 0x5C90,\n      0x8AF3: 0x5E0C,\n      0x8AF4: 0x5E7E,\n      0x8AF5: 0x5FCC,\n      0x8AF6: 0x63EE,\n      0x8AF7: 0x673A,\n      0x8AF8: 0x65D7,\n      0x8AF9: 0x65E2,\n      0x8AFA: 0x671F,\n      0x8AFB: 0x68CB,\n      0x8AFC: 0x68C4,\n      0x8B40: 0x6A5F,\n      0x8B41: 0x5E30,\n      0x8B42: 0x6BC5,\n      0x8B43: 0x6C17,\n      0x8B44: 0x6C7D,\n      0x8B45: 0x757F,\n      0x8B46: 0x7948,\n      0x8B47: 0x5B63,\n      0x8B48: 0x7A00,\n      0x8B49: 0x7D00,\n      0x8B4A: 0x5FBD,\n      0x8B4B: 0x898F,\n      0x8B4C: 0x8A18,\n      0x8B4D: 0x8CB4,\n      0x8B4E: 0x8D77,\n      0x8B4F: 0x8ECC,\n      0x8B50: 0x8F1D,\n      0x8B51: 0x98E2,\n      0x8B52: 0x9A0E,\n      0x8B53: 0x9B3C,\n      0x8B54: 0x4E80,\n      0x8B55: 0x507D,\n      0x8B56: 0x5100,\n      0x8B57: 0x5993,\n      0x8B58: 0x5B9C,\n      0x8B59: 0x622F,\n      0x8B5A: 0x6280,\n      0x8B5B: 0x64EC,\n      0x8B5C: 0x6B3A,\n      0x8B5D: 0x72A0,\n      0x8B5E: 0x7591,\n      0x8B5F: 0x7947,\n      0x8B60: 0x7FA9,\n      0x8B61: 0x87FB,\n      0x8B62: 0x8ABC,\n      0x8B63: 0x8B70,\n      0x8B64: 0x63AC,\n      0x8B65: 0x83CA,\n      0x8B66: 0x97A0,\n      0x8B67: 0x5409,\n      0x8B68: 0x5403,\n      0x8B69: 0x55AB,\n      0x8B6A: 0x6854,\n      0x8B6B: 0x6A58,\n      0x8B6C: 0x8A70,\n      0x8B6D: 0x7827,\n      0x8B6E: 0x6775,\n      0x8B6F: 0x9ECD,\n      0x8B70: 0x5374,\n      0x8B71: 0x5BA2,\n      0x8B72: 0x811A,\n      0x8B73: 0x8650,\n      0x8B74: 0x9006,\n      0x8B75: 0x4E18,\n      0x8B76: 0x4E45,\n      0x8B77: 0x4EC7,\n      0x8B78: 0x4F11,\n      0x8B79: 0x53CA,\n      0x8B7A: 0x5438,\n      0x8B7B: 0x5BAE,\n      0x8B7C: 0x5F13,\n      0x8B7D: 0x6025,\n      0x8B7E: 0x6551,\n      0x8B80: 0x673D,\n      0x8B81: 0x6C42,\n      0x8B82: 0x6C72,\n      0x8B83: 0x6CE3,\n      0x8B84: 0x7078,\n      0x8B85: 0x7403,\n      0x8B86: 0x7A76,\n      0x8B87: 0x7AAE,\n      0x8B88: 0x7B08,\n      0x8B89: 0x7D1A,\n      0x8B8A: 0x7CFE,\n      0x8B8B: 0x7D66,\n      0x8B8C: 0x65E7,\n      0x8B8D: 0x725B,\n      0x8B8E: 0x53BB,\n      0x8B8F: 0x5C45,\n      0x8B90: 0x5DE8,\n      0x8B91: 0x62D2,\n      0x8B92: 0x62E0,\n      0x8B93: 0x6319,\n      0x8B94: 0x6E20,\n      0x8B95: 0x865A,\n      0x8B96: 0x8A31,\n      0x8B97: 0x8DDD,\n      0x8B98: 0x92F8,\n      0x8B99: 0x6F01,\n      0x8B9A: 0x79A6,\n      0x8B9B: 0x9B5A,\n      0x8B9C: 0x4EA8,\n      0x8B9D: 0x4EAB,\n      0x8B9E: 0x4EAC,\n      0x8B9F: 0x4F9B,\n      0x8BA0: 0x4FA0,\n      0x8BA1: 0x50D1,\n      0x8BA2: 0x5147,\n      0x8BA3: 0x7AF6,\n      0x8BA4: 0x5171,\n      0x8BA5: 0x51F6,\n      0x8BA6: 0x5354,\n      0x8BA7: 0x5321,\n      0x8BA8: 0x537F,\n      0x8BA9: 0x53EB,\n      0x8BAA: 0x55AC,\n      0x8BAB: 0x5883,\n      0x8BAC: 0x5CE1,\n      0x8BAD: 0x5F37,\n      0x8BAE: 0x5F4A,\n      0x8BAF: 0x602F,\n      0x8BB0: 0x6050,\n      0x8BB1: 0x606D,\n      0x8BB2: 0x631F,\n      0x8BB3: 0x6559,\n      0x8BB4: 0x6A4B,\n      0x8BB5: 0x6CC1,\n      0x8BB6: 0x72C2,\n      0x8BB7: 0x72ED,\n      0x8BB8: 0x77EF,\n      0x8BB9: 0x80F8,\n      0x8BBA: 0x8105,\n      0x8BBB: 0x8208,\n      0x8BBC: 0x854E,\n      0x8BBD: 0x90F7,\n      0x8BBE: 0x93E1,\n      0x8BBF: 0x97FF,\n      0x8BC0: 0x9957,\n      0x8BC1: 0x9A5A,\n      0x8BC2: 0x4EF0,\n      0x8BC3: 0x51DD,\n      0x8BC4: 0x5C2D,\n      0x8BC5: 0x6681,\n      0x8BC6: 0x696D,\n      0x8BC7: 0x5C40,\n      0x8BC8: 0x66F2,\n      0x8BC9: 0x6975,\n      0x8BCA: 0x7389,\n      0x8BCB: 0x6850,\n      0x8BCC: 0x7C81,\n      0x8BCD: 0x50C5,\n      0x8BCE: 0x52E4,\n      0x8BCF: 0x5747,\n      0x8BD0: 0x5DFE,\n      0x8BD1: 0x9326,\n      0x8BD2: 0x65A4,\n      0x8BD3: 0x6B23,\n      0x8BD4: 0x6B3D,\n      0x8BD5: 0x7434,\n      0x8BD6: 0x7981,\n      0x8BD7: 0x79BD,\n      0x8BD8: 0x7B4B,\n      0x8BD9: 0x7DCA,\n      0x8BDA: 0x82B9,\n      0x8BDB: 0x83CC,\n      0x8BDC: 0x887F,\n      0x8BDD: 0x895F,\n      0x8BDE: 0x8B39,\n      0x8BDF: 0x8FD1,\n      0x8BE0: 0x91D1,\n      0x8BE1: 0x541F,\n      0x8BE2: 0x9280,\n      0x8BE3: 0x4E5D,\n      0x8BE4: 0x5036,\n      0x8BE5: 0x53E5,\n      0x8BE6: 0x533A,\n      0x8BE7: 0x72D7,\n      0x8BE8: 0x7396,\n      0x8BE9: 0x77E9,\n      0x8BEA: 0x82E6,\n      0x8BEB: 0x8EAF,\n      0x8BEC: 0x99C6,\n      0x8BED: 0x99C8,\n      0x8BEE: 0x99D2,\n      0x8BEF: 0x5177,\n      0x8BF0: 0x611A,\n      0x8BF1: 0x865E,\n      0x8BF2: 0x55B0,\n      0x8BF3: 0x7A7A,\n      0x8BF4: 0x5076,\n      0x8BF5: 0x5BD3,\n      0x8BF6: 0x9047,\n      0x8BF7: 0x9685,\n      0x8BF8: 0x4E32,\n      0x8BF9: 0x6ADB,\n      0x8BFA: 0x91E7,\n      0x8BFB: 0x5C51,\n      0x8BFC: 0x5C48,\n      0x8C40: 0x6398,\n      0x8C41: 0x7A9F,\n      0x8C42: 0x6C93,\n      0x8C43: 0x9774,\n      0x8C44: 0x8F61,\n      0x8C45: 0x7AAA,\n      0x8C46: 0x718A,\n      0x8C47: 0x9688,\n      0x8C48: 0x7C82,\n      0x8C49: 0x6817,\n      0x8C4A: 0x7E70,\n      0x8C4B: 0x6851,\n      0x8C4C: 0x936C,\n      0x8C4D: 0x52F2,\n      0x8C4E: 0x541B,\n      0x8C4F: 0x85AB,\n      0x8C50: 0x8A13,\n      0x8C51: 0x7FA4,\n      0x8C52: 0x8ECD,\n      0x8C53: 0x90E1,\n      0x8C54: 0x5366,\n      0x8C55: 0x8888,\n      0x8C56: 0x7941,\n      0x8C57: 0x4FC2,\n      0x8C58: 0x50BE,\n      0x8C59: 0x5211,\n      0x8C5A: 0x5144,\n      0x8C5B: 0x5553,\n      0x8C5C: 0x572D,\n      0x8C5D: 0x73EA,\n      0x8C5E: 0x578B,\n      0x8C5F: 0x5951,\n      0x8C60: 0x5F62,\n      0x8C61: 0x5F84,\n      0x8C62: 0x6075,\n      0x8C63: 0x6176,\n      0x8C64: 0x6167,\n      0x8C65: 0x61A9,\n      0x8C66: 0x63B2,\n      0x8C67: 0x643A,\n      0x8C68: 0x656C,\n      0x8C69: 0x666F,\n      0x8C6A: 0x6842,\n      0x8C6B: 0x6E13,\n      0x8C6C: 0x7566,\n      0x8C6D: 0x7A3D,\n      0x8C6E: 0x7CFB,\n      0x8C6F: 0x7D4C,\n      0x8C70: 0x7D99,\n      0x8C71: 0x7E4B,\n      0x8C72: 0x7F6B,\n      0x8C73: 0x830E,\n      0x8C74: 0x834A,\n      0x8C75: 0x86CD,\n      0x8C76: 0x8A08,\n      0x8C77: 0x8A63,\n      0x8C78: 0x8B66,\n      0x8C79: 0x8EFD,\n      0x8C7A: 0x981A,\n      0x8C7B: 0x9D8F,\n      0x8C7C: 0x82B8,\n      0x8C7D: 0x8FCE,\n      0x8C7E: 0x9BE8,\n      0x8C80: 0x5287,\n      0x8C81: 0x621F,\n      0x8C82: 0x6483,\n      0x8C83: 0x6FC0,\n      0x8C84: 0x9699,\n      0x8C85: 0x6841,\n      0x8C86: 0x5091,\n      0x8C87: 0x6B20,\n      0x8C88: 0x6C7A,\n      0x8C89: 0x6F54,\n      0x8C8A: 0x7A74,\n      0x8C8B: 0x7D50,\n      0x8C8C: 0x8840,\n      0x8C8D: 0x8A23,\n      0x8C8E: 0x6708,\n      0x8C8F: 0x4EF6,\n      0x8C90: 0x5039,\n      0x8C91: 0x5026,\n      0x8C92: 0x5065,\n      0x8C93: 0x517C,\n      0x8C94: 0x5238,\n      0x8C95: 0x5263,\n      0x8C96: 0x55A7,\n      0x8C97: 0x570F,\n      0x8C98: 0x5805,\n      0x8C99: 0x5ACC,\n      0x8C9A: 0x5EFA,\n      0x8C9B: 0x61B2,\n      0x8C9C: 0x61F8,\n      0x8C9D: 0x62F3,\n      0x8C9E: 0x6372,\n      0x8C9F: 0x691C,\n      0x8CA0: 0x6A29,\n      0x8CA1: 0x727D,\n      0x8CA2: 0x72AC,\n      0x8CA3: 0x732E,\n      0x8CA4: 0x7814,\n      0x8CA5: 0x786F,\n      0x8CA6: 0x7D79,\n      0x8CA7: 0x770C,\n      0x8CA8: 0x80A9,\n      0x8CA9: 0x898B,\n      0x8CAA: 0x8B19,\n      0x8CAB: 0x8CE2,\n      0x8CAC: 0x8ED2,\n      0x8CAD: 0x9063,\n      0x8CAE: 0x9375,\n      0x8CAF: 0x967A,\n      0x8CB0: 0x9855,\n      0x8CB1: 0x9A13,\n      0x8CB2: 0x9E78,\n      0x8CB3: 0x5143,\n      0x8CB4: 0x539F,\n      0x8CB5: 0x53B3,\n      0x8CB6: 0x5E7B,\n      0x8CB7: 0x5F26,\n      0x8CB8: 0x6E1B,\n      0x8CB9: 0x6E90,\n      0x8CBA: 0x7384,\n      0x8CBB: 0x73FE,\n      0x8CBC: 0x7D43,\n      0x8CBD: 0x8237,\n      0x8CBE: 0x8A00,\n      0x8CBF: 0x8AFA,\n      0x8CC0: 0x9650,\n      0x8CC1: 0x4E4E,\n      0x8CC2: 0x500B,\n      0x8CC3: 0x53E4,\n      0x8CC4: 0x547C,\n      0x8CC5: 0x56FA,\n      0x8CC6: 0x59D1,\n      0x8CC7: 0x5B64,\n      0x8CC8: 0x5DF1,\n      0x8CC9: 0x5EAB,\n      0x8CCA: 0x5F27,\n      0x8CCB: 0x6238,\n      0x8CCC: 0x6545,\n      0x8CCD: 0x67AF,\n      0x8CCE: 0x6E56,\n      0x8CCF: 0x72D0,\n      0x8CD0: 0x7CCA,\n      0x8CD1: 0x88B4,\n      0x8CD2: 0x80A1,\n      0x8CD3: 0x80E1,\n      0x8CD4: 0x83F0,\n      0x8CD5: 0x864E,\n      0x8CD6: 0x8A87,\n      0x8CD7: 0x8DE8,\n      0x8CD8: 0x9237,\n      0x8CD9: 0x96C7,\n      0x8CDA: 0x9867,\n      0x8CDB: 0x9F13,\n      0x8CDC: 0x4E94,\n      0x8CDD: 0x4E92,\n      0x8CDE: 0x4F0D,\n      0x8CDF: 0x5348,\n      0x8CE0: 0x5449,\n      0x8CE1: 0x543E,\n      0x8CE2: 0x5A2F,\n      0x8CE3: 0x5F8C,\n      0x8CE4: 0x5FA1,\n      0x8CE5: 0x609F,\n      0x8CE6: 0x68A7,\n      0x8CE7: 0x6A8E,\n      0x8CE8: 0x745A,\n      0x8CE9: 0x7881,\n      0x8CEA: 0x8A9E,\n      0x8CEB: 0x8AA4,\n      0x8CEC: 0x8B77,\n      0x8CED: 0x9190,\n      0x8CEE: 0x4E5E,\n      0x8CEF: 0x9BC9,\n      0x8CF0: 0x4EA4,\n      0x8CF1: 0x4F7C,\n      0x8CF2: 0x4FAF,\n      0x8CF3: 0x5019,\n      0x8CF4: 0x5016,\n      0x8CF5: 0x5149,\n      0x8CF6: 0x516C,\n      0x8CF7: 0x529F,\n      0x8CF8: 0x52B9,\n      0x8CF9: 0x52FE,\n      0x8CFA: 0x539A,\n      0x8CFB: 0x53E3,\n      0x8CFC: 0x5411,\n      0x8D40: 0x540E,\n      0x8D41: 0x5589,\n      0x8D42: 0x5751,\n      0x8D43: 0x57A2,\n      0x8D44: 0x597D,\n      0x8D45: 0x5B54,\n      0x8D46: 0x5B5D,\n      0x8D47: 0x5B8F,\n      0x8D48: 0x5DE5,\n      0x8D49: 0x5DE7,\n      0x8D4A: 0x5DF7,\n      0x8D4B: 0x5E78,\n      0x8D4C: 0x5E83,\n      0x8D4D: 0x5E9A,\n      0x8D4E: 0x5EB7,\n      0x8D4F: 0x5F18,\n      0x8D50: 0x6052,\n      0x8D51: 0x614C,\n      0x8D52: 0x6297,\n      0x8D53: 0x62D8,\n      0x8D54: 0x63A7,\n      0x8D55: 0x653B,\n      0x8D56: 0x6602,\n      0x8D57: 0x6643,\n      0x8D58: 0x66F4,\n      0x8D59: 0x676D,\n      0x8D5A: 0x6821,\n      0x8D5B: 0x6897,\n      0x8D5C: 0x69CB,\n      0x8D5D: 0x6C5F,\n      0x8D5E: 0x6D2A,\n      0x8D5F: 0x6D69,\n      0x8D60: 0x6E2F,\n      0x8D61: 0x6E9D,\n      0x8D62: 0x7532,\n      0x8D63: 0x7687,\n      0x8D64: 0x786C,\n      0x8D65: 0x7A3F,\n      0x8D66: 0x7CE0,\n      0x8D67: 0x7D05,\n      0x8D68: 0x7D18,\n      0x8D69: 0x7D5E,\n      0x8D6A: 0x7DB1,\n      0x8D6B: 0x8015,\n      0x8D6C: 0x8003,\n      0x8D6D: 0x80AF,\n      0x8D6E: 0x80B1,\n      0x8D6F: 0x8154,\n      0x8D70: 0x818F,\n      0x8D71: 0x822A,\n      0x8D72: 0x8352,\n      0x8D73: 0x884C,\n      0x8D74: 0x8861,\n      0x8D75: 0x8B1B,\n      0x8D76: 0x8CA2,\n      0x8D77: 0x8CFC,\n      0x8D78: 0x90CA,\n      0x8D79: 0x9175,\n      0x8D7A: 0x9271,\n      0x8D7B: 0x783F,\n      0x8D7C: 0x92FC,\n      0x8D7D: 0x95A4,\n      0x8D7E: 0x964D,\n      0x8D80: 0x9805,\n      0x8D81: 0x9999,\n      0x8D82: 0x9AD8,\n      0x8D83: 0x9D3B,\n      0x8D84: 0x525B,\n      0x8D85: 0x52AB,\n      0x8D86: 0x53F7,\n      0x8D87: 0x5408,\n      0x8D88: 0x58D5,\n      0x8D89: 0x62F7,\n      0x8D8A: 0x6FE0,\n      0x8D8B: 0x8C6A,\n      0x8D8C: 0x8F5F,\n      0x8D8D: 0x9EB9,\n      0x8D8E: 0x514B,\n      0x8D8F: 0x523B,\n      0x8D90: 0x544A,\n      0x8D91: 0x56FD,\n      0x8D92: 0x7A40,\n      0x8D93: 0x9177,\n      0x8D94: 0x9D60,\n      0x8D95: 0x9ED2,\n      0x8D96: 0x7344,\n      0x8D97: 0x6F09,\n      0x8D98: 0x8170,\n      0x8D99: 0x7511,\n      0x8D9A: 0x5FFD,\n      0x8D9B: 0x60DA,\n      0x8D9C: 0x9AA8,\n      0x8D9D: 0x72DB,\n      0x8D9E: 0x8FBC,\n      0x8D9F: 0x6B64,\n      0x8DA0: 0x9803,\n      0x8DA1: 0x4ECA,\n      0x8DA2: 0x56F0,\n      0x8DA3: 0x5764,\n      0x8DA4: 0x58BE,\n      0x8DA5: 0x5A5A,\n      0x8DA6: 0x6068,\n      0x8DA7: 0x61C7,\n      0x8DA8: 0x660F,\n      0x8DA9: 0x6606,\n      0x8DAA: 0x6839,\n      0x8DAB: 0x68B1,\n      0x8DAC: 0x6DF7,\n      0x8DAD: 0x75D5,\n      0x8DAE: 0x7D3A,\n      0x8DAF: 0x826E,\n      0x8DB0: 0x9B42,\n      0x8DB1: 0x4E9B,\n      0x8DB2: 0x4F50,\n      0x8DB3: 0x53C9,\n      0x8DB4: 0x5506,\n      0x8DB5: 0x5D6F,\n      0x8DB6: 0x5DE6,\n      0x8DB7: 0x5DEE,\n      0x8DB8: 0x67FB,\n      0x8DB9: 0x6C99,\n      0x8DBA: 0x7473,\n      0x8DBB: 0x7802,\n      0x8DBC: 0x8A50,\n      0x8DBD: 0x9396,\n      0x8DBE: 0x88DF,\n      0x8DBF: 0x5750,\n      0x8DC0: 0x5EA7,\n      0x8DC1: 0x632B,\n      0x8DC2: 0x50B5,\n      0x8DC3: 0x50AC,\n      0x8DC4: 0x518D,\n      0x8DC5: 0x6700,\n      0x8DC6: 0x54C9,\n      0x8DC7: 0x585E,\n      0x8DC8: 0x59BB,\n      0x8DC9: 0x5BB0,\n      0x8DCA: 0x5F69,\n      0x8DCB: 0x624D,\n      0x8DCC: 0x63A1,\n      0x8DCD: 0x683D,\n      0x8DCE: 0x6B73,\n      0x8DCF: 0x6E08,\n      0x8DD0: 0x707D,\n      0x8DD1: 0x91C7,\n      0x8DD2: 0x7280,\n      0x8DD3: 0x7815,\n      0x8DD4: 0x7826,\n      0x8DD5: 0x796D,\n      0x8DD6: 0x658E,\n      0x8DD7: 0x7D30,\n      0x8DD8: 0x83DC,\n      0x8DD9: 0x88C1,\n      0x8DDA: 0x8F09,\n      0x8DDB: 0x969B,\n      0x8DDC: 0x5264,\n      0x8DDD: 0x5728,\n      0x8DDE: 0x6750,\n      0x8DDF: 0x7F6A,\n      0x8DE0: 0x8CA1,\n      0x8DE1: 0x51B4,\n      0x8DE2: 0x5742,\n      0x8DE3: 0x962A,\n      0x8DE4: 0x583A,\n      0x8DE5: 0x698A,\n      0x8DE6: 0x80B4,\n      0x8DE7: 0x54B2,\n      0x8DE8: 0x5D0E,\n      0x8DE9: 0x57FC,\n      0x8DEA: 0x7895,\n      0x8DEB: 0x9DFA,\n      0x8DEC: 0x4F5C,\n      0x8DED: 0x524A,\n      0x8DEE: 0x548B,\n      0x8DEF: 0x643E,\n      0x8DF0: 0x6628,\n      0x8DF1: 0x6714,\n      0x8DF2: 0x67F5,\n      0x8DF3: 0x7A84,\n      0x8DF4: 0x7B56,\n      0x8DF5: 0x7D22,\n      0x8DF6: 0x932F,\n      0x8DF7: 0x685C,\n      0x8DF8: 0x9BAD,\n      0x8DF9: 0x7B39,\n      0x8DFA: 0x5319,\n      0x8DFB: 0x518A,\n      0x8DFC: 0x5237,\n      0x8E40: 0x5BDF,\n      0x8E41: 0x62F6,\n      0x8E42: 0x64AE,\n      0x8E43: 0x64E6,\n      0x8E44: 0x672D,\n      0x8E45: 0x6BBA,\n      0x8E46: 0x85A9,\n      0x8E47: 0x96D1,\n      0x8E48: 0x7690,\n      0x8E49: 0x9BD6,\n      0x8E4A: 0x634C,\n      0x8E4B: 0x9306,\n      0x8E4C: 0x9BAB,\n      0x8E4D: 0x76BF,\n      0x8E4E: 0x6652,\n      0x8E4F: 0x4E09,\n      0x8E50: 0x5098,\n      0x8E51: 0x53C2,\n      0x8E52: 0x5C71,\n      0x8E53: 0x60E8,\n      0x8E54: 0x6492,\n      0x8E55: 0x6563,\n      0x8E56: 0x685F,\n      0x8E57: 0x71E6,\n      0x8E58: 0x73CA,\n      0x8E59: 0x7523,\n      0x8E5A: 0x7B97,\n      0x8E5B: 0x7E82,\n      0x8E5C: 0x8695,\n      0x8E5D: 0x8B83,\n      0x8E5E: 0x8CDB,\n      0x8E5F: 0x9178,\n      0x8E60: 0x9910,\n      0x8E61: 0x65AC,\n      0x8E62: 0x66AB,\n      0x8E63: 0x6B8B,\n      0x8E64: 0x4ED5,\n      0x8E65: 0x4ED4,\n      0x8E66: 0x4F3A,\n      0x8E67: 0x4F7F,\n      0x8E68: 0x523A,\n      0x8E69: 0x53F8,\n      0x8E6A: 0x53F2,\n      0x8E6B: 0x55E3,\n      0x8E6C: 0x56DB,\n      0x8E6D: 0x58EB,\n      0x8E6E: 0x59CB,\n      0x8E6F: 0x59C9,\n      0x8E70: 0x59FF,\n      0x8E71: 0x5B50,\n      0x8E72: 0x5C4D,\n      0x8E73: 0x5E02,\n      0x8E74: 0x5E2B,\n      0x8E75: 0x5FD7,\n      0x8E76: 0x601D,\n      0x8E77: 0x6307,\n      0x8E78: 0x652F,\n      0x8E79: 0x5B5C,\n      0x8E7A: 0x65AF,\n      0x8E7B: 0x65BD,\n      0x8E7C: 0x65E8,\n      0x8E7D: 0x679D,\n      0x8E7E: 0x6B62,\n      0x8E80: 0x6B7B,\n      0x8E81: 0x6C0F,\n      0x8E82: 0x7345,\n      0x8E83: 0x7949,\n      0x8E84: 0x79C1,\n      0x8E85: 0x7CF8,\n      0x8E86: 0x7D19,\n      0x8E87: 0x7D2B,\n      0x8E88: 0x80A2,\n      0x8E89: 0x8102,\n      0x8E8A: 0x81F3,\n      0x8E8B: 0x8996,\n      0x8E8C: 0x8A5E,\n      0x8E8D: 0x8A69,\n      0x8E8E: 0x8A66,\n      0x8E8F: 0x8A8C,\n      0x8E90: 0x8AEE,\n      0x8E91: 0x8CC7,\n      0x8E92: 0x8CDC,\n      0x8E93: 0x96CC,\n      0x8E94: 0x98FC,\n      0x8E95: 0x6B6F,\n      0x8E96: 0x4E8B,\n      0x8E97: 0x4F3C,\n      0x8E98: 0x4F8D,\n      0x8E99: 0x5150,\n      0x8E9A: 0x5B57,\n      0x8E9B: 0x5BFA,\n      0x8E9C: 0x6148,\n      0x8E9D: 0x6301,\n      0x8E9E: 0x6642,\n      0x8E9F: 0x6B21,\n      0x8EA0: 0x6ECB,\n      0x8EA1: 0x6CBB,\n      0x8EA2: 0x723E,\n      0x8EA3: 0x74BD,\n      0x8EA4: 0x75D4,\n      0x8EA5: 0x78C1,\n      0x8EA6: 0x793A,\n      0x8EA7: 0x800C,\n      0x8EA8: 0x8033,\n      0x8EA9: 0x81EA,\n      0x8EAA: 0x8494,\n      0x8EAB: 0x8F9E,\n      0x8EAC: 0x6C50,\n      0x8EAD: 0x9E7F,\n      0x8EAE: 0x5F0F,\n      0x8EAF: 0x8B58,\n      0x8EB0: 0x9D2B,\n      0x8EB1: 0x7AFA,\n      0x8EB2: 0x8EF8,\n      0x8EB3: 0x5B8D,\n      0x8EB4: 0x96EB,\n      0x8EB5: 0x4E03,\n      0x8EB6: 0x53F1,\n      0x8EB7: 0x57F7,\n      0x8EB8: 0x5931,\n      0x8EB9: 0x5AC9,\n      0x8EBA: 0x5BA4,\n      0x8EBB: 0x6089,\n      0x8EBC: 0x6E7F,\n      0x8EBD: 0x6F06,\n      0x8EBE: 0x75BE,\n      0x8EBF: 0x8CEA,\n      0x8EC0: 0x5B9F,\n      0x8EC1: 0x8500,\n      0x8EC2: 0x7BE0,\n      0x8EC3: 0x5072,\n      0x8EC4: 0x67F4,\n      0x8EC5: 0x829D,\n      0x8EC6: 0x5C61,\n      0x8EC7: 0x854A,\n      0x8EC8: 0x7E1E,\n      0x8EC9: 0x820E,\n      0x8ECA: 0x5199,\n      0x8ECB: 0x5C04,\n      0x8ECC: 0x6368,\n      0x8ECD: 0x8D66,\n      0x8ECE: 0x659C,\n      0x8ECF: 0x716E,\n      0x8ED0: 0x793E,\n      0x8ED1: 0x7D17,\n      0x8ED2: 0x8005,\n      0x8ED3: 0x8B1D,\n      0x8ED4: 0x8ECA,\n      0x8ED5: 0x906E,\n      0x8ED6: 0x86C7,\n      0x8ED7: 0x90AA,\n      0x8ED8: 0x501F,\n      0x8ED9: 0x52FA,\n      0x8EDA: 0x5C3A,\n      0x8EDB: 0x6753,\n      0x8EDC: 0x707C,\n      0x8EDD: 0x7235,\n      0x8EDE: 0x914C,\n      0x8EDF: 0x91C8,\n      0x8EE0: 0x932B,\n      0x8EE1: 0x82E5,\n      0x8EE2: 0x5BC2,\n      0x8EE3: 0x5F31,\n      0x8EE4: 0x60F9,\n      0x8EE5: 0x4E3B,\n      0x8EE6: 0x53D6,\n      0x8EE7: 0x5B88,\n      0x8EE8: 0x624B,\n      0x8EE9: 0x6731,\n      0x8EEA: 0x6B8A,\n      0x8EEB: 0x72E9,\n      0x8EEC: 0x73E0,\n      0x8EED: 0x7A2E,\n      0x8EEE: 0x816B,\n      0x8EEF: 0x8DA3,\n      0x8EF0: 0x9152,\n      0x8EF1: 0x9996,\n      0x8EF2: 0x5112,\n      0x8EF3: 0x53D7,\n      0x8EF4: 0x546A,\n      0x8EF5: 0x5BFF,\n      0x8EF6: 0x6388,\n      0x8EF7: 0x6A39,\n      0x8EF8: 0x7DAC,\n      0x8EF9: 0x9700,\n      0x8EFA: 0x56DA,\n      0x8EFB: 0x53CE,\n      0x8EFC: 0x5468,\n      0x8F40: 0x5B97,\n      0x8F41: 0x5C31,\n      0x8F42: 0x5DDE,\n      0x8F43: 0x4FEE,\n      0x8F44: 0x6101,\n      0x8F45: 0x62FE,\n      0x8F46: 0x6D32,\n      0x8F47: 0x79C0,\n      0x8F48: 0x79CB,\n      0x8F49: 0x7D42,\n      0x8F4A: 0x7E4D,\n      0x8F4B: 0x7FD2,\n      0x8F4C: 0x81ED,\n      0x8F4D: 0x821F,\n      0x8F4E: 0x8490,\n      0x8F4F: 0x8846,\n      0x8F50: 0x8972,\n      0x8F51: 0x8B90,\n      0x8F52: 0x8E74,\n      0x8F53: 0x8F2F,\n      0x8F54: 0x9031,\n      0x8F55: 0x914B,\n      0x8F56: 0x916C,\n      0x8F57: 0x96C6,\n      0x8F58: 0x919C,\n      0x8F59: 0x4EC0,\n      0x8F5A: 0x4F4F,\n      0x8F5B: 0x5145,\n      0x8F5C: 0x5341,\n      0x8F5D: 0x5F93,\n      0x8F5E: 0x620E,\n      0x8F5F: 0x67D4,\n      0x8F60: 0x6C41,\n      0x8F61: 0x6E0B,\n      0x8F62: 0x7363,\n      0x8F63: 0x7E26,\n      0x8F64: 0x91CD,\n      0x8F65: 0x9283,\n      0x8F66: 0x53D4,\n      0x8F67: 0x5919,\n      0x8F68: 0x5BBF,\n      0x8F69: 0x6DD1,\n      0x8F6A: 0x795D,\n      0x8F6B: 0x7E2E,\n      0x8F6C: 0x7C9B,\n      0x8F6D: 0x587E,\n      0x8F6E: 0x719F,\n      0x8F6F: 0x51FA,\n      0x8F70: 0x8853,\n      0x8F71: 0x8FF0,\n      0x8F72: 0x4FCA,\n      0x8F73: 0x5CFB,\n      0x8F74: 0x6625,\n      0x8F75: 0x77AC,\n      0x8F76: 0x7AE3,\n      0x8F77: 0x821C,\n      0x8F78: 0x99FF,\n      0x8F79: 0x51C6,\n      0x8F7A: 0x5FAA,\n      0x8F7B: 0x65EC,\n      0x8F7C: 0x696F,\n      0x8F7D: 0x6B89,\n      0x8F7E: 0x6DF3,\n      0x8F80: 0x6E96,\n      0x8F81: 0x6F64,\n      0x8F82: 0x76FE,\n      0x8F83: 0x7D14,\n      0x8F84: 0x5DE1,\n      0x8F85: 0x9075,\n      0x8F86: 0x9187,\n      0x8F87: 0x9806,\n      0x8F88: 0x51E6,\n      0x8F89: 0x521D,\n      0x8F8A: 0x6240,\n      0x8F8B: 0x6691,\n      0x8F8C: 0x66D9,\n      0x8F8D: 0x6E1A,\n      0x8F8E: 0x5EB6,\n      0x8F8F: 0x7DD2,\n      0x8F90: 0x7F72,\n      0x8F91: 0x66F8,\n      0x8F92: 0x85AF,\n      0x8F93: 0x85F7,\n      0x8F94: 0x8AF8,\n      0x8F95: 0x52A9,\n      0x8F96: 0x53D9,\n      0x8F97: 0x5973,\n      0x8F98: 0x5E8F,\n      0x8F99: 0x5F90,\n      0x8F9A: 0x6055,\n      0x8F9B: 0x92E4,\n      0x8F9C: 0x9664,\n      0x8F9D: 0x50B7,\n      0x8F9E: 0x511F,\n      0x8F9F: 0x52DD,\n      0x8FA0: 0x5320,\n      0x8FA1: 0x5347,\n      0x8FA2: 0x53EC,\n      0x8FA3: 0x54E8,\n      0x8FA4: 0x5546,\n      0x8FA5: 0x5531,\n      0x8FA6: 0x5617,\n      0x8FA7: 0x5968,\n      0x8FA8: 0x59BE,\n      0x8FA9: 0x5A3C,\n      0x8FAA: 0x5BB5,\n      0x8FAB: 0x5C06,\n      0x8FAC: 0x5C0F,\n      0x8FAD: 0x5C11,\n      0x8FAE: 0x5C1A,\n      0x8FAF: 0x5E84,\n      0x8FB0: 0x5E8A,\n      0x8FB1: 0x5EE0,\n      0x8FB2: 0x5F70,\n      0x8FB3: 0x627F,\n      0x8FB4: 0x6284,\n      0x8FB5: 0x62DB,\n      0x8FB6: 0x638C,\n      0x8FB7: 0x6377,\n      0x8FB8: 0x6607,\n      0x8FB9: 0x660C,\n      0x8FBA: 0x662D,\n      0x8FBB: 0x6676,\n      0x8FBC: 0x677E,\n      0x8FBD: 0x68A2,\n      0x8FBE: 0x6A1F,\n      0x8FBF: 0x6A35,\n      0x8FC0: 0x6CBC,\n      0x8FC1: 0x6D88,\n      0x8FC2: 0x6E09,\n      0x8FC3: 0x6E58,\n      0x8FC4: 0x713C,\n      0x8FC5: 0x7126,\n      0x8FC6: 0x7167,\n      0x8FC7: 0x75C7,\n      0x8FC8: 0x7701,\n      0x8FC9: 0x785D,\n      0x8FCA: 0x7901,\n      0x8FCB: 0x7965,\n      0x8FCC: 0x79F0,\n      0x8FCD: 0x7AE0,\n      0x8FCE: 0x7B11,\n      0x8FCF: 0x7CA7,\n      0x8FD0: 0x7D39,\n      0x8FD1: 0x8096,\n      0x8FD2: 0x83D6,\n      0x8FD3: 0x848B,\n      0x8FD4: 0x8549,\n      0x8FD5: 0x885D,\n      0x8FD6: 0x88F3,\n      0x8FD7: 0x8A1F,\n      0x8FD8: 0x8A3C,\n      0x8FD9: 0x8A54,\n      0x8FDA: 0x8A73,\n      0x8FDB: 0x8C61,\n      0x8FDC: 0x8CDE,\n      0x8FDD: 0x91A4,\n      0x8FDE: 0x9266,\n      0x8FDF: 0x937E,\n      0x8FE0: 0x9418,\n      0x8FE1: 0x969C,\n      0x8FE2: 0x9798,\n      0x8FE3: 0x4E0A,\n      0x8FE4: 0x4E08,\n      0x8FE5: 0x4E1E,\n      0x8FE6: 0x4E57,\n      0x8FE7: 0x5197,\n      0x8FE8: 0x5270,\n      0x8FE9: 0x57CE,\n      0x8FEA: 0x5834,\n      0x8FEB: 0x58CC,\n      0x8FEC: 0x5B22,\n      0x8FED: 0x5E38,\n      0x8FEE: 0x60C5,\n      0x8FEF: 0x64FE,\n      0x8FF0: 0x6761,\n      0x8FF1: 0x6756,\n      0x8FF2: 0x6D44,\n      0x8FF3: 0x72B6,\n      0x8FF4: 0x7573,\n      0x8FF5: 0x7A63,\n      0x8FF6: 0x84B8,\n      0x8FF7: 0x8B72,\n      0x8FF8: 0x91B8,\n      0x8FF9: 0x9320,\n      0x8FFA: 0x5631,\n      0x8FFB: 0x57F4,\n      0x8FFC: 0x98FE,\n      0x9040: 0x62ED,\n      0x9041: 0x690D,\n      0x9042: 0x6B96,\n      0x9043: 0x71ED,\n      0x9044: 0x7E54,\n      0x9045: 0x8077,\n      0x9046: 0x8272,\n      0x9047: 0x89E6,\n      0x9048: 0x98DF,\n      0x9049: 0x8755,\n      0x904A: 0x8FB1,\n      0x904B: 0x5C3B,\n      0x904C: 0x4F38,\n      0x904D: 0x4FE1,\n      0x904E: 0x4FB5,\n      0x904F: 0x5507,\n      0x9050: 0x5A20,\n      0x9051: 0x5BDD,\n      0x9052: 0x5BE9,\n      0x9053: 0x5FC3,\n      0x9054: 0x614E,\n      0x9055: 0x632F,\n      0x9056: 0x65B0,\n      0x9057: 0x664B,\n      0x9058: 0x68EE,\n      0x9059: 0x699B,\n      0x905A: 0x6D78,\n      0x905B: 0x6DF1,\n      0x905C: 0x7533,\n      0x905D: 0x75B9,\n      0x905E: 0x771F,\n      0x905F: 0x795E,\n      0x9060: 0x79E6,\n      0x9061: 0x7D33,\n      0x9062: 0x81E3,\n      0x9063: 0x82AF,\n      0x9064: 0x85AA,\n      0x9065: 0x89AA,\n      0x9066: 0x8A3A,\n      0x9067: 0x8EAB,\n      0x9068: 0x8F9B,\n      0x9069: 0x9032,\n      0x906A: 0x91DD,\n      0x906B: 0x9707,\n      0x906C: 0x4EBA,\n      0x906D: 0x4EC1,\n      0x906E: 0x5203,\n      0x906F: 0x5875,\n      0x9070: 0x58EC,\n      0x9071: 0x5C0B,\n      0x9072: 0x751A,\n      0x9073: 0x5C3D,\n      0x9074: 0x814E,\n      0x9075: 0x8A0A,\n      0x9076: 0x8FC5,\n      0x9077: 0x9663,\n      0x9078: 0x976D,\n      0x9079: 0x7B25,\n      0x907A: 0x8ACF,\n      0x907B: 0x9808,\n      0x907C: 0x9162,\n      0x907D: 0x56F3,\n      0x907E: 0x53A8,\n      0x9080: 0x9017,\n      0x9081: 0x5439,\n      0x9082: 0x5782,\n      0x9083: 0x5E25,\n      0x9084: 0x63A8,\n      0x9085: 0x6C34,\n      0x9086: 0x708A,\n      0x9087: 0x7761,\n      0x9088: 0x7C8B,\n      0x9089: 0x7FE0,\n      0x908A: 0x8870,\n      0x908B: 0x9042,\n      0x908C: 0x9154,\n      0x908D: 0x9310,\n      0x908E: 0x9318,\n      0x908F: 0x968F,\n      0x9090: 0x745E,\n      0x9091: 0x9AC4,\n      0x9092: 0x5D07,\n      0x9093: 0x5D69,\n      0x9094: 0x6570,\n      0x9095: 0x67A2,\n      0x9096: 0x8DA8,\n      0x9097: 0x96DB,\n      0x9098: 0x636E,\n      0x9099: 0x6749,\n      0x909A: 0x6919,\n      0x909B: 0x83C5,\n      0x909C: 0x9817,\n      0x909D: 0x96C0,\n      0x909E: 0x88FE,\n      0x909F: 0x6F84,\n      0x90A0: 0x647A,\n      0x90A1: 0x5BF8,\n      0x90A2: 0x4E16,\n      0x90A3: 0x702C,\n      0x90A4: 0x755D,\n      0x90A5: 0x662F,\n      0x90A6: 0x51C4,\n      0x90A7: 0x5236,\n      0x90A8: 0x52E2,\n      0x90A9: 0x59D3,\n      0x90AA: 0x5F81,\n      0x90AB: 0x6027,\n      0x90AC: 0x6210,\n      0x90AD: 0x653F,\n      0x90AE: 0x6574,\n      0x90AF: 0x661F,\n      0x90B0: 0x6674,\n      0x90B1: 0x68F2,\n      0x90B2: 0x6816,\n      0x90B3: 0x6B63,\n      0x90B4: 0x6E05,\n      0x90B5: 0x7272,\n      0x90B6: 0x751F,\n      0x90B7: 0x76DB,\n      0x90B8: 0x7CBE,\n      0x90B9: 0x8056,\n      0x90BA: 0x58F0,\n      0x90BB: 0x88FD,\n      0x90BC: 0x897F,\n      0x90BD: 0x8AA0,\n      0x90BE: 0x8A93,\n      0x90BF: 0x8ACB,\n      0x90C0: 0x901D,\n      0x90C1: 0x9192,\n      0x90C2: 0x9752,\n      0x90C3: 0x9759,\n      0x90C4: 0x6589,\n      0x90C5: 0x7A0E,\n      0x90C6: 0x8106,\n      0x90C7: 0x96BB,\n      0x90C8: 0x5E2D,\n      0x90C9: 0x60DC,\n      0x90CA: 0x621A,\n      0x90CB: 0x65A5,\n      0x90CC: 0x6614,\n      0x90CD: 0x6790,\n      0x90CE: 0x77F3,\n      0x90CF: 0x7A4D,\n      0x90D0: 0x7C4D,\n      0x90D1: 0x7E3E,\n      0x90D2: 0x810A,\n      0x90D3: 0x8CAC,\n      0x90D4: 0x8D64,\n      0x90D5: 0x8DE1,\n      0x90D6: 0x8E5F,\n      0x90D7: 0x78A9,\n      0x90D8: 0x5207,\n      0x90D9: 0x62D9,\n      0x90DA: 0x63A5,\n      0x90DB: 0x6442,\n      0x90DC: 0x6298,\n      0x90DD: 0x8A2D,\n      0x90DE: 0x7A83,\n      0x90DF: 0x7BC0,\n      0x90E0: 0x8AAC,\n      0x90E1: 0x96EA,\n      0x90E2: 0x7D76,\n      0x90E3: 0x820C,\n      0x90E4: 0x8749,\n      0x90E5: 0x4ED9,\n      0x90E6: 0x5148,\n      0x90E7: 0x5343,\n      0x90E8: 0x5360,\n      0x90E9: 0x5BA3,\n      0x90EA: 0x5C02,\n      0x90EB: 0x5C16,\n      0x90EC: 0x5DDD,\n      0x90ED: 0x6226,\n      0x90EE: 0x6247,\n      0x90EF: 0x64B0,\n      0x90F0: 0x6813,\n      0x90F1: 0x6834,\n      0x90F2: 0x6CC9,\n      0x90F3: 0x6D45,\n      0x90F4: 0x6D17,\n      0x90F5: 0x67D3,\n      0x90F6: 0x6F5C,\n      0x90F7: 0x714E,\n      0x90F8: 0x717D,\n      0x90F9: 0x65CB,\n      0x90FA: 0x7A7F,\n      0x90FB: 0x7BAD,\n      0x90FC: 0x7DDA,\n      0x9140: 0x7E4A,\n      0x9141: 0x7FA8,\n      0x9142: 0x817A,\n      0x9143: 0x821B,\n      0x9144: 0x8239,\n      0x9145: 0x85A6,\n      0x9146: 0x8A6E,\n      0x9147: 0x8CCE,\n      0x9148: 0x8DF5,\n      0x9149: 0x9078,\n      0x914A: 0x9077,\n      0x914B: 0x92AD,\n      0x914C: 0x9291,\n      0x914D: 0x9583,\n      0x914E: 0x9BAE,\n      0x914F: 0x524D,\n      0x9150: 0x5584,\n      0x9151: 0x6F38,\n      0x9152: 0x7136,\n      0x9153: 0x5168,\n      0x9154: 0x7985,\n      0x9155: 0x7E55,\n      0x9156: 0x81B3,\n      0x9157: 0x7CCE,\n      0x9158: 0x564C,\n      0x9159: 0x5851,\n      0x915A: 0x5CA8,\n      0x915B: 0x63AA,\n      0x915C: 0x66FE,\n      0x915D: 0x66FD,\n      0x915E: 0x695A,\n      0x915F: 0x72D9,\n      0x9160: 0x758F,\n      0x9161: 0x758E,\n      0x9162: 0x790E,\n      0x9163: 0x7956,\n      0x9164: 0x79DF,\n      0x9165: 0x7C97,\n      0x9166: 0x7D20,\n      0x9167: 0x7D44,\n      0x9168: 0x8607,\n      0x9169: 0x8A34,\n      0x916A: 0x963B,\n      0x916B: 0x9061,\n      0x916C: 0x9F20,\n      0x916D: 0x50E7,\n      0x916E: 0x5275,\n      0x916F: 0x53CC,\n      0x9170: 0x53E2,\n      0x9171: 0x5009,\n      0x9172: 0x55AA,\n      0x9173: 0x58EE,\n      0x9174: 0x594F,\n      0x9175: 0x723D,\n      0x9176: 0x5B8B,\n      0x9177: 0x5C64,\n      0x9178: 0x531D,\n      0x9179: 0x60E3,\n      0x917A: 0x60F3,\n      0x917B: 0x635C,\n      0x917C: 0x6383,\n      0x917D: 0x633F,\n      0x917E: 0x63BB,\n      0x9180: 0x64CD,\n      0x9181: 0x65E9,\n      0x9182: 0x66F9,\n      0x9183: 0x5DE3,\n      0x9184: 0x69CD,\n      0x9185: 0x69FD,\n      0x9186: 0x6F15,\n      0x9187: 0x71E5,\n      0x9188: 0x4E89,\n      0x9189: 0x75E9,\n      0x918A: 0x76F8,\n      0x918B: 0x7A93,\n      0x918C: 0x7CDF,\n      0x918D: 0x7DCF,\n      0x918E: 0x7D9C,\n      0x918F: 0x8061,\n      0x9190: 0x8349,\n      0x9191: 0x8358,\n      0x9192: 0x846C,\n      0x9193: 0x84BC,\n      0x9194: 0x85FB,\n      0x9195: 0x88C5,\n      0x9196: 0x8D70,\n      0x9197: 0x9001,\n      0x9198: 0x906D,\n      0x9199: 0x9397,\n      0x919A: 0x971C,\n      0x919B: 0x9A12,\n      0x919C: 0x50CF,\n      0x919D: 0x5897,\n      0x919E: 0x618E,\n      0x919F: 0x81D3,\n      0x91A0: 0x8535,\n      0x91A1: 0x8D08,\n      0x91A2: 0x9020,\n      0x91A3: 0x4FC3,\n      0x91A4: 0x5074,\n      0x91A5: 0x5247,\n      0x91A6: 0x5373,\n      0x91A7: 0x606F,\n      0x91A8: 0x6349,\n      0x91A9: 0x675F,\n      0x91AA: 0x6E2C,\n      0x91AB: 0x8DB3,\n      0x91AC: 0x901F,\n      0x91AD: 0x4FD7,\n      0x91AE: 0x5C5E,\n      0x91AF: 0x8CCA,\n      0x91B0: 0x65CF,\n      0x91B1: 0x7D9A,\n      0x91B2: 0x5352,\n      0x91B3: 0x8896,\n      0x91B4: 0x5176,\n      0x91B5: 0x63C3,\n      0x91B6: 0x5B58,\n      0x91B7: 0x5B6B,\n      0x91B8: 0x5C0A,\n      0x91B9: 0x640D,\n      0x91BA: 0x6751,\n      0x91BB: 0x905C,\n      0x91BC: 0x4ED6,\n      0x91BD: 0x591A,\n      0x91BE: 0x592A,\n      0x91BF: 0x6C70,\n      0x91C0: 0x8A51,\n      0x91C1: 0x553E,\n      0x91C2: 0x5815,\n      0x91C3: 0x59A5,\n      0x91C4: 0x60F0,\n      0x91C5: 0x6253,\n      0x91C6: 0x67C1,\n      0x91C7: 0x8235,\n      0x91C8: 0x6955,\n      0x91C9: 0x9640,\n      0x91CA: 0x99C4,\n      0x91CB: 0x9A28,\n      0x91CC: 0x4F53,\n      0x91CD: 0x5806,\n      0x91CE: 0x5BFE,\n      0x91CF: 0x8010,\n      0x91D0: 0x5CB1,\n      0x91D1: 0x5E2F,\n      0x91D2: 0x5F85,\n      0x91D3: 0x6020,\n      0x91D4: 0x614B,\n      0x91D5: 0x6234,\n      0x91D6: 0x66FF,\n      0x91D7: 0x6CF0,\n      0x91D8: 0x6EDE,\n      0x91D9: 0x80CE,\n      0x91DA: 0x817F,\n      0x91DB: 0x82D4,\n      0x91DC: 0x888B,\n      0x91DD: 0x8CB8,\n      0x91DE: 0x9000,\n      0x91DF: 0x902E,\n      0x91E0: 0x968A,\n      0x91E1: 0x9EDB,\n      0x91E2: 0x9BDB,\n      0x91E3: 0x4EE3,\n      0x91E4: 0x53F0,\n      0x91E5: 0x5927,\n      0x91E6: 0x7B2C,\n      0x91E7: 0x918D,\n      0x91E8: 0x984C,\n      0x91E9: 0x9DF9,\n      0x91EA: 0x6EDD,\n      0x91EB: 0x7027,\n      0x91EC: 0x5353,\n      0x91ED: 0x5544,\n      0x91EE: 0x5B85,\n      0x91EF: 0x6258,\n      0x91F0: 0x629E,\n      0x91F1: 0x62D3,\n      0x91F2: 0x6CA2,\n      0x91F3: 0x6FEF,\n      0x91F4: 0x7422,\n      0x91F5: 0x8A17,\n      0x91F6: 0x9438,\n      0x91F7: 0x6FC1,\n      0x91F8: 0x8AFE,\n      0x91F9: 0x8338,\n      0x91FA: 0x51E7,\n      0x91FB: 0x86F8,\n      0x91FC: 0x53EA,\n      0x9240: 0x53E9,\n      0x9241: 0x4F46,\n      0x9242: 0x9054,\n      0x9243: 0x8FB0,\n      0x9244: 0x596A,\n      0x9245: 0x8131,\n      0x9246: 0x5DFD,\n      0x9247: 0x7AEA,\n      0x9248: 0x8FBF,\n      0x9249: 0x68DA,\n      0x924A: 0x8C37,\n      0x924B: 0x72F8,\n      0x924C: 0x9C48,\n      0x924D: 0x6A3D,\n      0x924E: 0x8AB0,\n      0x924F: 0x4E39,\n      0x9250: 0x5358,\n      0x9251: 0x5606,\n      0x9252: 0x5766,\n      0x9253: 0x62C5,\n      0x9254: 0x63A2,\n      0x9255: 0x65E6,\n      0x9256: 0x6B4E,\n      0x9257: 0x6DE1,\n      0x9258: 0x6E5B,\n      0x9259: 0x70AD,\n      0x925A: 0x77ED,\n      0x925B: 0x7AEF,\n      0x925C: 0x7BAA,\n      0x925D: 0x7DBB,\n      0x925E: 0x803D,\n      0x925F: 0x80C6,\n      0x9260: 0x86CB,\n      0x9261: 0x8A95,\n      0x9262: 0x935B,\n      0x9263: 0x56E3,\n      0x9264: 0x58C7,\n      0x9265: 0x5F3E,\n      0x9266: 0x65AD,\n      0x9267: 0x6696,\n      0x9268: 0x6A80,\n      0x9269: 0x6BB5,\n      0x926A: 0x7537,\n      0x926B: 0x8AC7,\n      0x926C: 0x5024,\n      0x926D: 0x77E5,\n      0x926E: 0x5730,\n      0x926F: 0x5F1B,\n      0x9270: 0x6065,\n      0x9271: 0x667A,\n      0x9272: 0x6C60,\n      0x9273: 0x75F4,\n      0x9274: 0x7A1A,\n      0x9275: 0x7F6E,\n      0x9276: 0x81F4,\n      0x9277: 0x8718,\n      0x9278: 0x9045,\n      0x9279: 0x99B3,\n      0x927A: 0x7BC9,\n      0x927B: 0x755C,\n      0x927C: 0x7AF9,\n      0x927D: 0x7B51,\n      0x927E: 0x84C4,\n      0x9280: 0x9010,\n      0x9281: 0x79E9,\n      0x9282: 0x7A92,\n      0x9283: 0x8336,\n      0x9284: 0x5AE1,\n      0x9285: 0x7740,\n      0x9286: 0x4E2D,\n      0x9287: 0x4EF2,\n      0x9288: 0x5B99,\n      0x9289: 0x5FE0,\n      0x928A: 0x62BD,\n      0x928B: 0x663C,\n      0x928C: 0x67F1,\n      0x928D: 0x6CE8,\n      0x928E: 0x866B,\n      0x928F: 0x8877,\n      0x9290: 0x8A3B,\n      0x9291: 0x914E,\n      0x9292: 0x92F3,\n      0x9293: 0x99D0,\n      0x9294: 0x6A17,\n      0x9295: 0x7026,\n      0x9296: 0x732A,\n      0x9297: 0x82E7,\n      0x9298: 0x8457,\n      0x9299: 0x8CAF,\n      0x929A: 0x4E01,\n      0x929B: 0x5146,\n      0x929C: 0x51CB,\n      0x929D: 0x558B,\n      0x929E: 0x5BF5,\n      0x929F: 0x5E16,\n      0x92A0: 0x5E33,\n      0x92A1: 0x5E81,\n      0x92A2: 0x5F14,\n      0x92A3: 0x5F35,\n      0x92A4: 0x5F6B,\n      0x92A5: 0x5FB4,\n      0x92A6: 0x61F2,\n      0x92A7: 0x6311,\n      0x92A8: 0x66A2,\n      0x92A9: 0x671D,\n      0x92AA: 0x6F6E,\n      0x92AB: 0x7252,\n      0x92AC: 0x753A,\n      0x92AD: 0x773A,\n      0x92AE: 0x8074,\n      0x92AF: 0x8139,\n      0x92B0: 0x8178,\n      0x92B1: 0x8776,\n      0x92B2: 0x8ABF,\n      0x92B3: 0x8ADC,\n      0x92B4: 0x8D85,\n      0x92B5: 0x8DF3,\n      0x92B6: 0x929A,\n      0x92B7: 0x9577,\n      0x92B8: 0x9802,\n      0x92B9: 0x9CE5,\n      0x92BA: 0x52C5,\n      0x92BB: 0x6357,\n      0x92BC: 0x76F4,\n      0x92BD: 0x6715,\n      0x92BE: 0x6C88,\n      0x92BF: 0x73CD,\n      0x92C0: 0x8CC3,\n      0x92C1: 0x93AE,\n      0x92C2: 0x9673,\n      0x92C3: 0x6D25,\n      0x92C4: 0x589C,\n      0x92C5: 0x690E,\n      0x92C6: 0x69CC,\n      0x92C7: 0x8FFD,\n      0x92C8: 0x939A,\n      0x92C9: 0x75DB,\n      0x92CA: 0x901A,\n      0x92CB: 0x585A,\n      0x92CC: 0x6802,\n      0x92CD: 0x63B4,\n      0x92CE: 0x69FB,\n      0x92CF: 0x4F43,\n      0x92D0: 0x6F2C,\n      0x92D1: 0x67D8,\n      0x92D2: 0x8FBB,\n      0x92D3: 0x8526,\n      0x92D4: 0x7DB4,\n      0x92D5: 0x9354,\n      0x92D6: 0x693F,\n      0x92D7: 0x6F70,\n      0x92D8: 0x576A,\n      0x92D9: 0x58F7,\n      0x92DA: 0x5B2C,\n      0x92DB: 0x7D2C,\n      0x92DC: 0x722A,\n      0x92DD: 0x540A,\n      0x92DE: 0x91E3,\n      0x92DF: 0x9DB4,\n      0x92E0: 0x4EAD,\n      0x92E1: 0x4F4E,\n      0x92E2: 0x505C,\n      0x92E3: 0x5075,\n      0x92E4: 0x5243,\n      0x92E5: 0x8C9E,\n      0x92E6: 0x5448,\n      0x92E7: 0x5824,\n      0x92E8: 0x5B9A,\n      0x92E9: 0x5E1D,\n      0x92EA: 0x5E95,\n      0x92EB: 0x5EAD,\n      0x92EC: 0x5EF7,\n      0x92ED: 0x5F1F,\n      0x92EE: 0x608C,\n      0x92EF: 0x62B5,\n      0x92F0: 0x633A,\n      0x92F1: 0x63D0,\n      0x92F2: 0x68AF,\n      0x92F3: 0x6C40,\n      0x92F4: 0x7887,\n      0x92F5: 0x798E,\n      0x92F6: 0x7A0B,\n      0x92F7: 0x7DE0,\n      0x92F8: 0x8247,\n      0x92F9: 0x8A02,\n      0x92FA: 0x8AE6,\n      0x92FB: 0x8E44,\n      0x92FC: 0x9013,\n      0x9340: 0x90B8,\n      0x9341: 0x912D,\n      0x9342: 0x91D8,\n      0x9343: 0x9F0E,\n      0x9344: 0x6CE5,\n      0x9345: 0x6458,\n      0x9346: 0x64E2,\n      0x9347: 0x6575,\n      0x9348: 0x6EF4,\n      0x9349: 0x7684,\n      0x934A: 0x7B1B,\n      0x934B: 0x9069,\n      0x934C: 0x93D1,\n      0x934D: 0x6EBA,\n      0x934E: 0x54F2,\n      0x934F: 0x5FB9,\n      0x9350: 0x64A4,\n      0x9351: 0x8F4D,\n      0x9352: 0x8FED,\n      0x9353: 0x9244,\n      0x9354: 0x5178,\n      0x9355: 0x586B,\n      0x9356: 0x5929,\n      0x9357: 0x5C55,\n      0x9358: 0x5E97,\n      0x9359: 0x6DFB,\n      0x935A: 0x7E8F,\n      0x935B: 0x751C,\n      0x935C: 0x8CBC,\n      0x935D: 0x8EE2,\n      0x935E: 0x985B,\n      0x935F: 0x70B9,\n      0x9360: 0x4F1D,\n      0x9361: 0x6BBF,\n      0x9362: 0x6FB1,\n      0x9363: 0x7530,\n      0x9364: 0x96FB,\n      0x9365: 0x514E,\n      0x9366: 0x5410,\n      0x9367: 0x5835,\n      0x9368: 0x5857,\n      0x9369: 0x59AC,\n      0x936A: 0x5C60,\n      0x936B: 0x5F92,\n      0x936C: 0x6597,\n      0x936D: 0x675C,\n      0x936E: 0x6E21,\n      0x936F: 0x767B,\n      0x9370: 0x83DF,\n      0x9371: 0x8CED,\n      0x9372: 0x9014,\n      0x9373: 0x90FD,\n      0x9374: 0x934D,\n      0x9375: 0x7825,\n      0x9376: 0x783A,\n      0x9377: 0x52AA,\n      0x9378: 0x5EA6,\n      0x9379: 0x571F,\n      0x937A: 0x5974,\n      0x937B: 0x6012,\n      0x937C: 0x5012,\n      0x937D: 0x515A,\n      0x937E: 0x51AC,\n      0x9380: 0x51CD,\n      0x9381: 0x5200,\n      0x9382: 0x5510,\n      0x9383: 0x5854,\n      0x9384: 0x5858,\n      0x9385: 0x5957,\n      0x9386: 0x5B95,\n      0x9387: 0x5CF6,\n      0x9388: 0x5D8B,\n      0x9389: 0x60BC,\n      0x938A: 0x6295,\n      0x938B: 0x642D,\n      0x938C: 0x6771,\n      0x938D: 0x6843,\n      0x938E: 0x68BC,\n      0x938F: 0x68DF,\n      0x9390: 0x76D7,\n      0x9391: 0x6DD8,\n      0x9392: 0x6E6F,\n      0x9393: 0x6D9B,\n      0x9394: 0x706F,\n      0x9395: 0x71C8,\n      0x9396: 0x5F53,\n      0x9397: 0x75D8,\n      0x9398: 0x7977,\n      0x9399: 0x7B49,\n      0x939A: 0x7B54,\n      0x939B: 0x7B52,\n      0x939C: 0x7CD6,\n      0x939D: 0x7D71,\n      0x939E: 0x5230,\n      0x939F: 0x8463,\n      0x93A0: 0x8569,\n      0x93A1: 0x85E4,\n      0x93A2: 0x8A0E,\n      0x93A3: 0x8B04,\n      0x93A4: 0x8C46,\n      0x93A5: 0x8E0F,\n      0x93A6: 0x9003,\n      0x93A7: 0x900F,\n      0x93A8: 0x9419,\n      0x93A9: 0x9676,\n      0x93AA: 0x982D,\n      0x93AB: 0x9A30,\n      0x93AC: 0x95D8,\n      0x93AD: 0x50CD,\n      0x93AE: 0x52D5,\n      0x93AF: 0x540C,\n      0x93B0: 0x5802,\n      0x93B1: 0x5C0E,\n      0x93B2: 0x61A7,\n      0x93B3: 0x649E,\n      0x93B4: 0x6D1E,\n      0x93B5: 0x77B3,\n      0x93B6: 0x7AE5,\n      0x93B7: 0x80F4,\n      0x93B8: 0x8404,\n      0x93B9: 0x9053,\n      0x93BA: 0x9285,\n      0x93BB: 0x5CE0,\n      0x93BC: 0x9D07,\n      0x93BD: 0x533F,\n      0x93BE: 0x5F97,\n      0x93BF: 0x5FB3,\n      0x93C0: 0x6D9C,\n      0x93C1: 0x7279,\n      0x93C2: 0x7763,\n      0x93C3: 0x79BF,\n      0x93C4: 0x7BE4,\n      0x93C5: 0x6BD2,\n      0x93C6: 0x72EC,\n      0x93C7: 0x8AAD,\n      0x93C8: 0x6803,\n      0x93C9: 0x6A61,\n      0x93CA: 0x51F8,\n      0x93CB: 0x7A81,\n      0x93CC: 0x6934,\n      0x93CD: 0x5C4A,\n      0x93CE: 0x9CF6,\n      0x93CF: 0x82EB,\n      0x93D0: 0x5BC5,\n      0x93D1: 0x9149,\n      0x93D2: 0x701E,\n      0x93D3: 0x5678,\n      0x93D4: 0x5C6F,\n      0x93D5: 0x60C7,\n      0x93D6: 0x6566,\n      0x93D7: 0x6C8C,\n      0x93D8: 0x8C5A,\n      0x93D9: 0x9041,\n      0x93DA: 0x9813,\n      0x93DB: 0x5451,\n      0x93DC: 0x66C7,\n      0x93DD: 0x920D,\n      0x93DE: 0x5948,\n      0x93DF: 0x90A3,\n      0x93E0: 0x5185,\n      0x93E1: 0x4E4D,\n      0x93E2: 0x51EA,\n      0x93E3: 0x8599,\n      0x93E4: 0x8B0E,\n      0x93E5: 0x7058,\n      0x93E6: 0x637A,\n      0x93E7: 0x934B,\n      0x93E8: 0x6962,\n      0x93E9: 0x99B4,\n      0x93EA: 0x7E04,\n      0x93EB: 0x7577,\n      0x93EC: 0x5357,\n      0x93ED: 0x6960,\n      0x93EE: 0x8EDF,\n      0x93EF: 0x96E3,\n      0x93F0: 0x6C5D,\n      0x93F1: 0x4E8C,\n      0x93F2: 0x5C3C,\n      0x93F3: 0x5F10,\n      0x93F4: 0x8FE9,\n      0x93F5: 0x5302,\n      0x93F6: 0x8CD1,\n      0x93F7: 0x8089,\n      0x93F8: 0x8679,\n      0x93F9: 0x5EFF,\n      0x93FA: 0x65E5,\n      0x93FB: 0x4E73,\n      0x93FC: 0x5165,\n      0x9440: 0x5982,\n      0x9441: 0x5C3F,\n      0x9442: 0x97EE,\n      0x9443: 0x4EFB,\n      0x9444: 0x598A,\n      0x9445: 0x5FCD,\n      0x9446: 0x8A8D,\n      0x9447: 0x6FE1,\n      0x9448: 0x79B0,\n      0x9449: 0x7962,\n      0x944A: 0x5BE7,\n      0x944B: 0x8471,\n      0x944C: 0x732B,\n      0x944D: 0x71B1,\n      0x944E: 0x5E74,\n      0x944F: 0x5FF5,\n      0x9450: 0x637B,\n      0x9451: 0x649A,\n      0x9452: 0x71C3,\n      0x9453: 0x7C98,\n      0x9454: 0x4E43,\n      0x9455: 0x5EFC,\n      0x9456: 0x4E4B,\n      0x9457: 0x57DC,\n      0x9458: 0x56A2,\n      0x9459: 0x60A9,\n      0x945A: 0x6FC3,\n      0x945B: 0x7D0D,\n      0x945C: 0x80FD,\n      0x945D: 0x8133,\n      0x945E: 0x81BF,\n      0x945F: 0x8FB2,\n      0x9460: 0x8997,\n      0x9461: 0x86A4,\n      0x9462: 0x5DF4,\n      0x9463: 0x628A,\n      0x9464: 0x64AD,\n      0x9465: 0x8987,\n      0x9466: 0x6777,\n      0x9467: 0x6CE2,\n      0x9468: 0x6D3E,\n      0x9469: 0x7436,\n      0x946A: 0x7834,\n      0x946B: 0x5A46,\n      0x946C: 0x7F75,\n      0x946D: 0x82AD,\n      0x946E: 0x99AC,\n      0x946F: 0x4FF3,\n      0x9470: 0x5EC3,\n      0x9471: 0x62DD,\n      0x9472: 0x6392,\n      0x9473: 0x6557,\n      0x9474: 0x676F,\n      0x9475: 0x76C3,\n      0x9476: 0x724C,\n      0x9477: 0x80CC,\n      0x9478: 0x80BA,\n      0x9479: 0x8F29,\n      0x947A: 0x914D,\n      0x947B: 0x500D,\n      0x947C: 0x57F9,\n      0x947D: 0x5A92,\n      0x947E: 0x6885,\n      0x9480: 0x6973,\n      0x9481: 0x7164,\n      0x9482: 0x72FD,\n      0x9483: 0x8CB7,\n      0x9484: 0x58F2,\n      0x9485: 0x8CE0,\n      0x9486: 0x966A,\n      0x9487: 0x9019,\n      0x9488: 0x877F,\n      0x9489: 0x79E4,\n      0x948A: 0x77E7,\n      0x948B: 0x8429,\n      0x948C: 0x4F2F,\n      0x948D: 0x5265,\n      0x948E: 0x535A,\n      0x948F: 0x62CD,\n      0x9490: 0x67CF,\n      0x9491: 0x6CCA,\n      0x9492: 0x767D,\n      0x9493: 0x7B94,\n      0x9494: 0x7C95,\n      0x9495: 0x8236,\n      0x9496: 0x8584,\n      0x9497: 0x8FEB,\n      0x9498: 0x66DD,\n      0x9499: 0x6F20,\n      0x949A: 0x7206,\n      0x949B: 0x7E1B,\n      0x949C: 0x83AB,\n      0x949D: 0x99C1,\n      0x949E: 0x9EA6,\n      0x949F: 0x51FD,\n      0x94A0: 0x7BB1,\n      0x94A1: 0x7872,\n      0x94A2: 0x7BB8,\n      0x94A3: 0x8087,\n      0x94A4: 0x7B48,\n      0x94A5: 0x6AE8,\n      0x94A6: 0x5E61,\n      0x94A7: 0x808C,\n      0x94A8: 0x7551,\n      0x94A9: 0x7560,\n      0x94AA: 0x516B,\n      0x94AB: 0x9262,\n      0x94AC: 0x6E8C,\n      0x94AD: 0x767A,\n      0x94AE: 0x9197,\n      0x94AF: 0x9AEA,\n      0x94B0: 0x4F10,\n      0x94B1: 0x7F70,\n      0x94B2: 0x629C,\n      0x94B3: 0x7B4F,\n      0x94B4: 0x95A5,\n      0x94B5: 0x9CE9,\n      0x94B6: 0x567A,\n      0x94B7: 0x5859,\n      0x94B8: 0x86E4,\n      0x94B9: 0x96BC,\n      0x94BA: 0x4F34,\n      0x94BB: 0x5224,\n      0x94BC: 0x534A,\n      0x94BD: 0x53CD,\n      0x94BE: 0x53DB,\n      0x94BF: 0x5E06,\n      0x94C0: 0x642C,\n      0x94C1: 0x6591,\n      0x94C2: 0x677F,\n      0x94C3: 0x6C3E,\n      0x94C4: 0x6C4E,\n      0x94C5: 0x7248,\n      0x94C6: 0x72AF,\n      0x94C7: 0x73ED,\n      0x94C8: 0x7554,\n      0x94C9: 0x7E41,\n      0x94CA: 0x822C,\n      0x94CB: 0x85E9,\n      0x94CC: 0x8CA9,\n      0x94CD: 0x7BC4,\n      0x94CE: 0x91C6,\n      0x94CF: 0x7169,\n      0x94D0: 0x9812,\n      0x94D1: 0x98EF,\n      0x94D2: 0x633D,\n      0x94D3: 0x6669,\n      0x94D4: 0x756A,\n      0x94D5: 0x76E4,\n      0x94D6: 0x78D0,\n      0x94D7: 0x8543,\n      0x94D8: 0x86EE,\n      0x94D9: 0x532A,\n      0x94DA: 0x5351,\n      0x94DB: 0x5426,\n      0x94DC: 0x5983,\n      0x94DD: 0x5E87,\n      0x94DE: 0x5F7C,\n      0x94DF: 0x60B2,\n      0x94E0: 0x6249,\n      0x94E1: 0x6279,\n      0x94E2: 0x62AB,\n      0x94E3: 0x6590,\n      0x94E4: 0x6BD4,\n      0x94E5: 0x6CCC,\n      0x94E6: 0x75B2,\n      0x94E7: 0x76AE,\n      0x94E8: 0x7891,\n      0x94E9: 0x79D8,\n      0x94EA: 0x7DCB,\n      0x94EB: 0x7F77,\n      0x94EC: 0x80A5,\n      0x94ED: 0x88AB,\n      0x94EE: 0x8AB9,\n      0x94EF: 0x8CBB,\n      0x94F0: 0x907F,\n      0x94F1: 0x975E,\n      0x94F2: 0x98DB,\n      0x94F3: 0x6A0B,\n      0x94F4: 0x7C38,\n      0x94F5: 0x5099,\n      0x94F6: 0x5C3E,\n      0x94F7: 0x5FAE,\n      0x94F8: 0x6787,\n      0x94F9: 0x6BD8,\n      0x94FA: 0x7435,\n      0x94FB: 0x7709,\n      0x94FC: 0x7F8E,\n      0x9540: 0x9F3B,\n      0x9541: 0x67CA,\n      0x9542: 0x7A17,\n      0x9543: 0x5339,\n      0x9544: 0x758B,\n      0x9545: 0x9AED,\n      0x9546: 0x5F66,\n      0x9547: 0x819D,\n      0x9548: 0x83F1,\n      0x9549: 0x8098,\n      0x954A: 0x5F3C,\n      0x954B: 0x5FC5,\n      0x954C: 0x7562,\n      0x954D: 0x7B46,\n      0x954E: 0x903C,\n      0x954F: 0x6867,\n      0x9550: 0x59EB,\n      0x9551: 0x5A9B,\n      0x9552: 0x7D10,\n      0x9553: 0x767E,\n      0x9554: 0x8B2C,\n      0x9555: 0x4FF5,\n      0x9556: 0x5F6A,\n      0x9557: 0x6A19,\n      0x9558: 0x6C37,\n      0x9559: 0x6F02,\n      0x955A: 0x74E2,\n      0x955B: 0x7968,\n      0x955C: 0x8868,\n      0x955D: 0x8A55,\n      0x955E: 0x8C79,\n      0x955F: 0x5EDF,\n      0x9560: 0x63CF,\n      0x9561: 0x75C5,\n      0x9562: 0x79D2,\n      0x9563: 0x82D7,\n      0x9564: 0x9328,\n      0x9565: 0x92F2,\n      0x9566: 0x849C,\n      0x9567: 0x86ED,\n      0x9568: 0x9C2D,\n      0x9569: 0x54C1,\n      0x956A: 0x5F6C,\n      0x956B: 0x658C,\n      0x956C: 0x6D5C,\n      0x956D: 0x7015,\n      0x956E: 0x8CA7,\n      0x956F: 0x8CD3,\n      0x9570: 0x983B,\n      0x9571: 0x654F,\n      0x9572: 0x74F6,\n      0x9573: 0x4E0D,\n      0x9574: 0x4ED8,\n      0x9575: 0x57E0,\n      0x9576: 0x592B,\n      0x9577: 0x5A66,\n      0x9578: 0x5BCC,\n      0x9579: 0x51A8,\n      0x957A: 0x5E03,\n      0x957B: 0x5E9C,\n      0x957C: 0x6016,\n      0x957D: 0x6276,\n      0x957E: 0x6577,\n      0x9580: 0x65A7,\n      0x9581: 0x666E,\n      0x9582: 0x6D6E,\n      0x9583: 0x7236,\n      0x9584: 0x7B26,\n      0x9585: 0x8150,\n      0x9586: 0x819A,\n      0x9587: 0x8299,\n      0x9588: 0x8B5C,\n      0x9589: 0x8CA0,\n      0x958A: 0x8CE6,\n      0x958B: 0x8D74,\n      0x958C: 0x961C,\n      0x958D: 0x9644,\n      0x958E: 0x4FAE,\n      0x958F: 0x64AB,\n      0x9590: 0x6B66,\n      0x9591: 0x821E,\n      0x9592: 0x8461,\n      0x9593: 0x856A,\n      0x9594: 0x90E8,\n      0x9595: 0x5C01,\n      0x9596: 0x6953,\n      0x9597: 0x98A8,\n      0x9598: 0x847A,\n      0x9599: 0x8557,\n      0x959A: 0x4F0F,\n      0x959B: 0x526F,\n      0x959C: 0x5FA9,\n      0x959D: 0x5E45,\n      0x959E: 0x670D,\n      0x959F: 0x798F,\n      0x95A0: 0x8179,\n      0x95A1: 0x8907,\n      0x95A2: 0x8986,\n      0x95A3: 0x6DF5,\n      0x95A4: 0x5F17,\n      0x95A5: 0x6255,\n      0x95A6: 0x6CB8,\n      0x95A7: 0x4ECF,\n      0x95A8: 0x7269,\n      0x95A9: 0x9B92,\n      0x95AA: 0x5206,\n      0x95AB: 0x543B,\n      0x95AC: 0x5674,\n      0x95AD: 0x58B3,\n      0x95AE: 0x61A4,\n      0x95AF: 0x626E,\n      0x95B0: 0x711A,\n      0x95B1: 0x596E,\n      0x95B2: 0x7C89,\n      0x95B3: 0x7CDE,\n      0x95B4: 0x7D1B,\n      0x95B5: 0x96F0,\n      0x95B6: 0x6587,\n      0x95B7: 0x805E,\n      0x95B8: 0x4E19,\n      0x95B9: 0x4F75,\n      0x95BA: 0x5175,\n      0x95BB: 0x5840,\n      0x95BC: 0x5E63,\n      0x95BD: 0x5E73,\n      0x95BE: 0x5F0A,\n      0x95BF: 0x67C4,\n      0x95C0: 0x4E26,\n      0x95C1: 0x853D,\n      0x95C2: 0x9589,\n      0x95C3: 0x965B,\n      0x95C4: 0x7C73,\n      0x95C5: 0x9801,\n      0x95C6: 0x50FB,\n      0x95C7: 0x58C1,\n      0x95C8: 0x7656,\n      0x95C9: 0x78A7,\n      0x95CA: 0x5225,\n      0x95CB: 0x77A5,\n      0x95CC: 0x8511,\n      0x95CD: 0x7B86,\n      0x95CE: 0x504F,\n      0x95CF: 0x5909,\n      0x95D0: 0x7247,\n      0x95D1: 0x7BC7,\n      0x95D2: 0x7DE8,\n      0x95D3: 0x8FBA,\n      0x95D4: 0x8FD4,\n      0x95D5: 0x904D,\n      0x95D6: 0x4FBF,\n      0x95D7: 0x52C9,\n      0x95D8: 0x5A29,\n      0x95D9: 0x5F01,\n      0x95DA: 0x97AD,\n      0x95DB: 0x4FDD,\n      0x95DC: 0x8217,\n      0x95DD: 0x92EA,\n      0x95DE: 0x5703,\n      0x95DF: 0x6355,\n      0x95E0: 0x6B69,\n      0x95E1: 0x752B,\n      0x95E2: 0x88DC,\n      0x95E3: 0x8F14,\n      0x95E4: 0x7A42,\n      0x95E5: 0x52DF,\n      0x95E6: 0x5893,\n      0x95E7: 0x6155,\n      0x95E8: 0x620A,\n      0x95E9: 0x66AE,\n      0x95EA: 0x6BCD,\n      0x95EB: 0x7C3F,\n      0x95EC: 0x83E9,\n      0x95ED: 0x5023,\n      0x95EE: 0x4FF8,\n      0x95EF: 0x5305,\n      0x95F0: 0x5446,\n      0x95F1: 0x5831,\n      0x95F2: 0x5949,\n      0x95F3: 0x5B9D,\n      0x95F4: 0x5CF0,\n      0x95F5: 0x5CEF,\n      0x95F6: 0x5D29,\n      0x95F7: 0x5E96,\n      0x95F8: 0x62B1,\n      0x95F9: 0x6367,\n      0x95FA: 0x653E,\n      0x95FB: 0x65B9,\n      0x95FC: 0x670B,\n      0x9640: 0x6CD5,\n      0x9641: 0x6CE1,\n      0x9642: 0x70F9,\n      0x9643: 0x7832,\n      0x9644: 0x7E2B,\n      0x9645: 0x80DE,\n      0x9646: 0x82B3,\n      0x9647: 0x840C,\n      0x9648: 0x84EC,\n      0x9649: 0x8702,\n      0x964A: 0x8912,\n      0x964B: 0x8A2A,\n      0x964C: 0x8C4A,\n      0x964D: 0x90A6,\n      0x964E: 0x92D2,\n      0x964F: 0x98FD,\n      0x9650: 0x9CF3,\n      0x9651: 0x9D6C,\n      0x9652: 0x4E4F,\n      0x9653: 0x4EA1,\n      0x9654: 0x508D,\n      0x9655: 0x5256,\n      0x9656: 0x574A,\n      0x9657: 0x59A8,\n      0x9658: 0x5E3D,\n      0x9659: 0x5FD8,\n      0x965A: 0x5FD9,\n      0x965B: 0x623F,\n      0x965C: 0x66B4,\n      0x965D: 0x671B,\n      0x965E: 0x67D0,\n      0x965F: 0x68D2,\n      0x9660: 0x5192,\n      0x9661: 0x7D21,\n      0x9662: 0x80AA,\n      0x9663: 0x81A8,\n      0x9664: 0x8B00,\n      0x9665: 0x8C8C,\n      0x9666: 0x8CBF,\n      0x9667: 0x927E,\n      0x9668: 0x9632,\n      0x9669: 0x5420,\n      0x966A: 0x982C,\n      0x966B: 0x5317,\n      0x966C: 0x50D5,\n      0x966D: 0x535C,\n      0x966E: 0x58A8,\n      0x966F: 0x64B2,\n      0x9670: 0x6734,\n      0x9671: 0x7267,\n      0x9672: 0x7766,\n      0x9673: 0x7A46,\n      0x9674: 0x91E6,\n      0x9675: 0x52C3,\n      0x9676: 0x6CA1,\n      0x9677: 0x6B86,\n      0x9678: 0x5800,\n      0x9679: 0x5E4C,\n      0x967A: 0x5954,\n      0x967B: 0x672C,\n      0x967C: 0x7FFB,\n      0x967D: 0x51E1,\n      0x967E: 0x76C6,\n      0x9680: 0x6469,\n      0x9681: 0x78E8,\n      0x9682: 0x9B54,\n      0x9683: 0x9EBB,\n      0x9684: 0x57CB,\n      0x9685: 0x59B9,\n      0x9686: 0x6627,\n      0x9687: 0x679A,\n      0x9688: 0x6BCE,\n      0x9689: 0x54E9,\n      0x968A: 0x69D9,\n      0x968B: 0x5E55,\n      0x968C: 0x819C,\n      0x968D: 0x6795,\n      0x968E: 0x9BAA,\n      0x968F: 0x67FE,\n      0x9690: 0x9C52,\n      0x9691: 0x685D,\n      0x9692: 0x4EA6,\n      0x9693: 0x4FE3,\n      0x9694: 0x53C8,\n      0x9695: 0x62B9,\n      0x9696: 0x672B,\n      0x9697: 0x6CAB,\n      0x9698: 0x8FC4,\n      0x9699: 0x4FAD,\n      0x969A: 0x7E6D,\n      0x969B: 0x9EBF,\n      0x969C: 0x4E07,\n      0x969D: 0x6162,\n      0x969E: 0x6E80,\n      0x969F: 0x6F2B,\n      0x96A0: 0x8513,\n      0x96A1: 0x5473,\n      0x96A2: 0x672A,\n      0x96A3: 0x9B45,\n      0x96A4: 0x5DF3,\n      0x96A5: 0x7B95,\n      0x96A6: 0x5CAC,\n      0x96A7: 0x5BC6,\n      0x96A8: 0x871C,\n      0x96A9: 0x6E4A,\n      0x96AA: 0x84D1,\n      0x96AB: 0x7A14,\n      0x96AC: 0x8108,\n      0x96AD: 0x5999,\n      0x96AE: 0x7C8D,\n      0x96AF: 0x6C11,\n      0x96B0: 0x7720,\n      0x96B1: 0x52D9,\n      0x96B2: 0x5922,\n      0x96B3: 0x7121,\n      0x96B4: 0x725F,\n      0x96B5: 0x77DB,\n      0x96B6: 0x9727,\n      0x96B7: 0x9D61,\n      0x96B8: 0x690B,\n      0x96B9: 0x5A7F,\n      0x96BA: 0x5A18,\n      0x96BB: 0x51A5,\n      0x96BC: 0x540D,\n      0x96BD: 0x547D,\n      0x96BE: 0x660E,\n      0x96BF: 0x76DF,\n      0x96C0: 0x8FF7,\n      0x96C1: 0x9298,\n      0x96C2: 0x9CF4,\n      0x96C3: 0x59EA,\n      0x96C4: 0x725D,\n      0x96C5: 0x6EC5,\n      0x96C6: 0x514D,\n      0x96C7: 0x68C9,\n      0x96C8: 0x7DBF,\n      0x96C9: 0x7DEC,\n      0x96CA: 0x9762,\n      0x96CB: 0x9EBA,\n      0x96CC: 0x6478,\n      0x96CD: 0x6A21,\n      0x96CE: 0x8302,\n      0x96CF: 0x5984,\n      0x96D0: 0x5B5F,\n      0x96D1: 0x6BDB,\n      0x96D2: 0x731B,\n      0x96D3: 0x76F2,\n      0x96D4: 0x7DB2,\n      0x96D5: 0x8017,\n      0x96D6: 0x8499,\n      0x96D7: 0x5132,\n      0x96D8: 0x6728,\n      0x96D9: 0x9ED9,\n      0x96DA: 0x76EE,\n      0x96DB: 0x6762,\n      0x96DC: 0x52FF,\n      0x96DD: 0x9905,\n      0x96DE: 0x5C24,\n      0x96DF: 0x623B,\n      0x96E0: 0x7C7E,\n      0x96E1: 0x8CB0,\n      0x96E2: 0x554F,\n      0x96E3: 0x60B6,\n      0x96E4: 0x7D0B,\n      0x96E5: 0x9580,\n      0x96E6: 0x5301,\n      0x96E7: 0x4E5F,\n      0x96E8: 0x51B6,\n      0x96E9: 0x591C,\n      0x96EA: 0x723A,\n      0x96EB: 0x8036,\n      0x96EC: 0x91CE,\n      0x96ED: 0x5F25,\n      0x96EE: 0x77E2,\n      0x96EF: 0x5384,\n      0x96F0: 0x5F79,\n      0x96F1: 0x7D04,\n      0x96F2: 0x85AC,\n      0x96F3: 0x8A33,\n      0x96F4: 0x8E8D,\n      0x96F5: 0x9756,\n      0x96F6: 0x67F3,\n      0x96F7: 0x85AE,\n      0x96F8: 0x9453,\n      0x96F9: 0x6109,\n      0x96FA: 0x6108,\n      0x96FB: 0x6CB9,\n      0x96FC: 0x7652,\n      0x9740: 0x8AED,\n      0x9741: 0x8F38,\n      0x9742: 0x552F,\n      0x9743: 0x4F51,\n      0x9744: 0x512A,\n      0x9745: 0x52C7,\n      0x9746: 0x53CB,\n      0x9747: 0x5BA5,\n      0x9748: 0x5E7D,\n      0x9749: 0x60A0,\n      0x974A: 0x6182,\n      0x974B: 0x63D6,\n      0x974C: 0x6709,\n      0x974D: 0x67DA,\n      0x974E: 0x6E67,\n      0x974F: 0x6D8C,\n      0x9750: 0x7336,\n      0x9751: 0x7337,\n      0x9752: 0x7531,\n      0x9753: 0x7950,\n      0x9754: 0x88D5,\n      0x9755: 0x8A98,\n      0x9756: 0x904A,\n      0x9757: 0x9091,\n      0x9758: 0x90F5,\n      0x9759: 0x96C4,\n      0x975A: 0x878D,\n      0x975B: 0x5915,\n      0x975C: 0x4E88,\n      0x975D: 0x4F59,\n      0x975E: 0x4E0E,\n      0x975F: 0x8A89,\n      0x9760: 0x8F3F,\n      0x9761: 0x9810,\n      0x9762: 0x50AD,\n      0x9763: 0x5E7C,\n      0x9764: 0x5996,\n      0x9765: 0x5BB9,\n      0x9766: 0x5EB8,\n      0x9767: 0x63DA,\n      0x9768: 0x63FA,\n      0x9769: 0x64C1,\n      0x976A: 0x66DC,\n      0x976B: 0x694A,\n      0x976C: 0x69D8,\n      0x976D: 0x6D0B,\n      0x976E: 0x6EB6,\n      0x976F: 0x7194,\n      0x9770: 0x7528,\n      0x9771: 0x7AAF,\n      0x9772: 0x7F8A,\n      0x9773: 0x8000,\n      0x9774: 0x8449,\n      0x9775: 0x84C9,\n      0x9776: 0x8981,\n      0x9777: 0x8B21,\n      0x9778: 0x8E0A,\n      0x9779: 0x9065,\n      0x977A: 0x967D,\n      0x977B: 0x990A,\n      0x977C: 0x617E,\n      0x977D: 0x6291,\n      0x977E: 0x6B32,\n      0x9780: 0x6C83,\n      0x9781: 0x6D74,\n      0x9782: 0x7FCC,\n      0x9783: 0x7FFC,\n      0x9784: 0x6DC0,\n      0x9785: 0x7F85,\n      0x9786: 0x87BA,\n      0x9787: 0x88F8,\n      0x9788: 0x6765,\n      0x9789: 0x83B1,\n      0x978A: 0x983C,\n      0x978B: 0x96F7,\n      0x978C: 0x6D1B,\n      0x978D: 0x7D61,\n      0x978E: 0x843D,\n      0x978F: 0x916A,\n      0x9790: 0x4E71,\n      0x9791: 0x5375,\n      0x9792: 0x5D50,\n      0x9793: 0x6B04,\n      0x9794: 0x6FEB,\n      0x9795: 0x85CD,\n      0x9796: 0x862D,\n      0x9797: 0x89A7,\n      0x9798: 0x5229,\n      0x9799: 0x540F,\n      0x979A: 0x5C65,\n      0x979B: 0x674E,\n      0x979C: 0x68A8,\n      0x979D: 0x7406,\n      0x979E: 0x7483,\n      0x979F: 0x75E2,\n      0x97A0: 0x88CF,\n      0x97A1: 0x88E1,\n      0x97A2: 0x91CC,\n      0x97A3: 0x96E2,\n      0x97A4: 0x9678,\n      0x97A5: 0x5F8B,\n      0x97A6: 0x7387,\n      0x97A7: 0x7ACB,\n      0x97A8: 0x844E,\n      0x97A9: 0x63A0,\n      0x97AA: 0x7565,\n      0x97AB: 0x5289,\n      0x97AC: 0x6D41,\n      0x97AD: 0x6E9C,\n      0x97AE: 0x7409,\n      0x97AF: 0x7559,\n      0x97B0: 0x786B,\n      0x97B1: 0x7C92,\n      0x97B2: 0x9686,\n      0x97B3: 0x7ADC,\n      0x97B4: 0x9F8D,\n      0x97B5: 0x4FB6,\n      0x97B6: 0x616E,\n      0x97B7: 0x65C5,\n      0x97B8: 0x865C,\n      0x97B9: 0x4E86,\n      0x97BA: 0x4EAE,\n      0x97BB: 0x50DA,\n      0x97BC: 0x4E21,\n      0x97BD: 0x51CC,\n      0x97BE: 0x5BEE,\n      0x97BF: 0x6599,\n      0x97C0: 0x6881,\n      0x97C1: 0x6DBC,\n      0x97C2: 0x731F,\n      0x97C3: 0x7642,\n      0x97C4: 0x77AD,\n      0x97C5: 0x7A1C,\n      0x97C6: 0x7CE7,\n      0x97C7: 0x826F,\n      0x97C8: 0x8AD2,\n      0x97C9: 0x907C,\n      0x97CA: 0x91CF,\n      0x97CB: 0x9675,\n      0x97CC: 0x9818,\n      0x97CD: 0x529B,\n      0x97CE: 0x7DD1,\n      0x97CF: 0x502B,\n      0x97D0: 0x5398,\n      0x97D1: 0x6797,\n      0x97D2: 0x6DCB,\n      0x97D3: 0x71D0,\n      0x97D4: 0x7433,\n      0x97D5: 0x81E8,\n      0x97D6: 0x8F2A,\n      0x97D7: 0x96A3,\n      0x97D8: 0x9C57,\n      0x97D9: 0x9E9F,\n      0x97DA: 0x7460,\n      0x97DB: 0x5841,\n      0x97DC: 0x6D99,\n      0x97DD: 0x7D2F,\n      0x97DE: 0x985E,\n      0x97DF: 0x4EE4,\n      0x97E0: 0x4F36,\n      0x97E1: 0x4F8B,\n      0x97E2: 0x51B7,\n      0x97E3: 0x52B1,\n      0x97E4: 0x5DBA,\n      0x97E5: 0x601C,\n      0x97E6: 0x73B2,\n      0x97E7: 0x793C,\n      0x97E8: 0x82D3,\n      0x97E9: 0x9234,\n      0x97EA: 0x96B7,\n      0x97EB: 0x96F6,\n      0x97EC: 0x970A,\n      0x97ED: 0x9E97,\n      0x97EE: 0x9F62,\n      0x97EF: 0x66A6,\n      0x97F0: 0x6B74,\n      0x97F1: 0x5217,\n      0x97F2: 0x52A3,\n      0x97F3: 0x70C8,\n      0x97F4: 0x88C2,\n      0x97F5: 0x5EC9,\n      0x97F6: 0x604B,\n      0x97F7: 0x6190,\n      0x97F8: 0x6F23,\n      0x97F9: 0x7149,\n      0x97FA: 0x7C3E,\n      0x97FB: 0x7DF4,\n      0x97FC: 0x806F,\n      0x9840: 0x84EE,\n      0x9841: 0x9023,\n      0x9842: 0x932C,\n      0x9843: 0x5442,\n      0x9844: 0x9B6F,\n      0x9845: 0x6AD3,\n      0x9846: 0x7089,\n      0x9847: 0x8CC2,\n      0x9848: 0x8DEF,\n      0x9849: 0x9732,\n      0x984A: 0x52B4,\n      0x984B: 0x5A41,\n      0x984C: 0x5ECA,\n      0x984D: 0x5F04,\n      0x984E: 0x6717,\n      0x984F: 0x697C,\n      0x9850: 0x6994,\n      0x9851: 0x6D6A,\n      0x9852: 0x6F0F,\n      0x9853: 0x7262,\n      0x9854: 0x72FC,\n      0x9855: 0x7BED,\n      0x9856: 0x8001,\n      0x9857: 0x807E,\n      0x9858: 0x874B,\n      0x9859: 0x90CE,\n      0x985A: 0x516D,\n      0x985B: 0x9E93,\n      0x985C: 0x7984,\n      0x985D: 0x808B,\n      0x985E: 0x9332,\n      0x985F: 0x8AD6,\n      0x9860: 0x502D,\n      0x9861: 0x548C,\n      0x9862: 0x8A71,\n      0x9863: 0x6B6A,\n      0x9864: 0x8CC4,\n      0x9865: 0x8107,\n      0x9866: 0x60D1,\n      0x9867: 0x67A0,\n      0x9868: 0x9DF2,\n      0x9869: 0x4E99,\n      0x986A: 0x4E98,\n      0x986B: 0x9C10,\n      0x986C: 0x8A6B,\n      0x986D: 0x85C1,\n      0x986E: 0x8568,\n      0x986F: 0x6900,\n      0x9870: 0x6E7E,\n      0x9871: 0x7897,\n      0x9872: 0x8155,\n      0x989F: 0x5F0C,\n      0x98A0: 0x4E10,\n      0x98A1: 0x4E15,\n      0x98A2: 0x4E2A,\n      0x98A3: 0x4E31,\n      0x98A4: 0x4E36,\n      0x98A5: 0x4E3C,\n      0x98A6: 0x4E3F,\n      0x98A7: 0x4E42,\n      0x98A8: 0x4E56,\n      0x98A9: 0x4E58,\n      0x98AA: 0x4E82,\n      0x98AB: 0x4E85,\n      0x98AC: 0x8C6B,\n      0x98AD: 0x4E8A,\n      0x98AE: 0x8212,\n      0x98AF: 0x5F0D,\n      0x98B0: 0x4E8E,\n      0x98B1: 0x4E9E,\n      0x98B2: 0x4E9F,\n      0x98B3: 0x4EA0,\n      0x98B4: 0x4EA2,\n      0x98B5: 0x4EB0,\n      0x98B6: 0x4EB3,\n      0x98B7: 0x4EB6,\n      0x98B8: 0x4ECE,\n      0x98B9: 0x4ECD,\n      0x98BA: 0x4EC4,\n      0x98BB: 0x4EC6,\n      0x98BC: 0x4EC2,\n      0x98BD: 0x4ED7,\n      0x98BE: 0x4EDE,\n      0x98BF: 0x4EED,\n      0x98C0: 0x4EDF,\n      0x98C1: 0x4EF7,\n      0x98C2: 0x4F09,\n      0x98C3: 0x4F5A,\n      0x98C4: 0x4F30,\n      0x98C5: 0x4F5B,\n      0x98C6: 0x4F5D,\n      0x98C7: 0x4F57,\n      0x98C8: 0x4F47,\n      0x98C9: 0x4F76,\n      0x98CA: 0x4F88,\n      0x98CB: 0x4F8F,\n      0x98CC: 0x4F98,\n      0x98CD: 0x4F7B,\n      0x98CE: 0x4F69,\n      0x98CF: 0x4F70,\n      0x98D0: 0x4F91,\n      0x98D1: 0x4F6F,\n      0x98D2: 0x4F86,\n      0x98D3: 0x4F96,\n      0x98D4: 0x5118,\n      0x98D5: 0x4FD4,\n      0x98D6: 0x4FDF,\n      0x98D7: 0x4FCE,\n      0x98D8: 0x4FD8,\n      0x98D9: 0x4FDB,\n      0x98DA: 0x4FD1,\n      0x98DB: 0x4FDA,\n      0x98DC: 0x4FD0,\n      0x98DD: 0x4FE4,\n      0x98DE: 0x4FE5,\n      0x98DF: 0x501A,\n      0x98E0: 0x5028,\n      0x98E1: 0x5014,\n      0x98E2: 0x502A,\n      0x98E3: 0x5025,\n      0x98E4: 0x5005,\n      0x98E5: 0x4F1C,\n      0x98E6: 0x4FF6,\n      0x98E7: 0x5021,\n      0x98E8: 0x5029,\n      0x98E9: 0x502C,\n      0x98EA: 0x4FFE,\n      0x98EB: 0x4FEF,\n      0x98EC: 0x5011,\n      0x98ED: 0x5006,\n      0x98EE: 0x5043,\n      0x98EF: 0x5047,\n      0x98F0: 0x6703,\n      0x98F1: 0x5055,\n      0x98F2: 0x5050,\n      0x98F3: 0x5048,\n      0x98F4: 0x505A,\n      0x98F5: 0x5056,\n      0x98F6: 0x506C,\n      0x98F7: 0x5078,\n      0x98F8: 0x5080,\n      0x98F9: 0x509A,\n      0x98FA: 0x5085,\n      0x98FB: 0x50B4,\n      0x98FC: 0x50B2,\n      0x9940: 0x50C9,\n      0x9941: 0x50CA,\n      0x9942: 0x50B3,\n      0x9943: 0x50C2,\n      0x9944: 0x50D6,\n      0x9945: 0x50DE,\n      0x9946: 0x50E5,\n      0x9947: 0x50ED,\n      0x9948: 0x50E3,\n      0x9949: 0x50EE,\n      0x994A: 0x50F9,\n      0x994B: 0x50F5,\n      0x994C: 0x5109,\n      0x994D: 0x5101,\n      0x994E: 0x5102,\n      0x994F: 0x5116,\n      0x9950: 0x5115,\n      0x9951: 0x5114,\n      0x9952: 0x511A,\n      0x9953: 0x5121,\n      0x9954: 0x513A,\n      0x9955: 0x5137,\n      0x9956: 0x513C,\n      0x9957: 0x513B,\n      0x9958: 0x513F,\n      0x9959: 0x5140,\n      0x995A: 0x5152,\n      0x995B: 0x514C,\n      0x995C: 0x5154,\n      0x995D: 0x5162,\n      0x995E: 0x7AF8,\n      0x995F: 0x5169,\n      0x9960: 0x516A,\n      0x9961: 0x516E,\n      0x9962: 0x5180,\n      0x9963: 0x5182,\n      0x9964: 0x56D8,\n      0x9965: 0x518C,\n      0x9966: 0x5189,\n      0x9967: 0x518F,\n      0x9968: 0x5191,\n      0x9969: 0x5193,\n      0x996A: 0x5195,\n      0x996B: 0x5196,\n      0x996C: 0x51A4,\n      0x996D: 0x51A6,\n      0x996E: 0x51A2,\n      0x996F: 0x51A9,\n      0x9970: 0x51AA,\n      0x9971: 0x51AB,\n      0x9972: 0x51B3,\n      0x9973: 0x51B1,\n      0x9974: 0x51B2,\n      0x9975: 0x51B0,\n      0x9976: 0x51B5,\n      0x9977: 0x51BD,\n      0x9978: 0x51C5,\n      0x9979: 0x51C9,\n      0x997A: 0x51DB,\n      0x997B: 0x51E0,\n      0x997C: 0x8655,\n      0x997D: 0x51E9,\n      0x997E: 0x51ED,\n      0x9980: 0x51F0,\n      0x9981: 0x51F5,\n      0x9982: 0x51FE,\n      0x9983: 0x5204,\n      0x9984: 0x520B,\n      0x9985: 0x5214,\n      0x9986: 0x520E,\n      0x9987: 0x5227,\n      0x9988: 0x522A,\n      0x9989: 0x522E,\n      0x998A: 0x5233,\n      0x998B: 0x5239,\n      0x998C: 0x524F,\n      0x998D: 0x5244,\n      0x998E: 0x524B,\n      0x998F: 0x524C,\n      0x9990: 0x525E,\n      0x9991: 0x5254,\n      0x9992: 0x526A,\n      0x9993: 0x5274,\n      0x9994: 0x5269,\n      0x9995: 0x5273,\n      0x9996: 0x527F,\n      0x9997: 0x527D,\n      0x9998: 0x528D,\n      0x9999: 0x5294,\n      0x999A: 0x5292,\n      0x999B: 0x5271,\n      0x999C: 0x5288,\n      0x999D: 0x5291,\n      0x999E: 0x8FA8,\n      0x999F: 0x8FA7,\n      0x99A0: 0x52AC,\n      0x99A1: 0x52AD,\n      0x99A2: 0x52BC,\n      0x99A3: 0x52B5,\n      0x99A4: 0x52C1,\n      0x99A5: 0x52CD,\n      0x99A6: 0x52D7,\n      0x99A7: 0x52DE,\n      0x99A8: 0x52E3,\n      0x99A9: 0x52E6,\n      0x99AA: 0x98ED,\n      0x99AB: 0x52E0,\n      0x99AC: 0x52F3,\n      0x99AD: 0x52F5,\n      0x99AE: 0x52F8,\n      0x99AF: 0x52F9,\n      0x99B0: 0x5306,\n      0x99B1: 0x5308,\n      0x99B2: 0x7538,\n      0x99B3: 0x530D,\n      0x99B4: 0x5310,\n      0x99B5: 0x530F,\n      0x99B6: 0x5315,\n      0x99B7: 0x531A,\n      0x99B8: 0x5323,\n      0x99B9: 0x532F,\n      0x99BA: 0x5331,\n      0x99BB: 0x5333,\n      0x99BC: 0x5338,\n      0x99BD: 0x5340,\n      0x99BE: 0x5346,\n      0x99BF: 0x5345,\n      0x99C0: 0x4E17,\n      0x99C1: 0x5349,\n      0x99C2: 0x534D,\n      0x99C3: 0x51D6,\n      0x99C4: 0x535E,\n      0x99C5: 0x5369,\n      0x99C6: 0x536E,\n      0x99C7: 0x5918,\n      0x99C8: 0x537B,\n      0x99C9: 0x5377,\n      0x99CA: 0x5382,\n      0x99CB: 0x5396,\n      0x99CC: 0x53A0,\n      0x99CD: 0x53A6,\n      0x99CE: 0x53A5,\n      0x99CF: 0x53AE,\n      0x99D0: 0x53B0,\n      0x99D1: 0x53B6,\n      0x99D2: 0x53C3,\n      0x99D3: 0x7C12,\n      0x99D4: 0x96D9,\n      0x99D5: 0x53DF,\n      0x99D6: 0x66FC,\n      0x99D7: 0x71EE,\n      0x99D8: 0x53EE,\n      0x99D9: 0x53E8,\n      0x99DA: 0x53ED,\n      0x99DB: 0x53FA,\n      0x99DC: 0x5401,\n      0x99DD: 0x543D,\n      0x99DE: 0x5440,\n      0x99DF: 0x542C,\n      0x99E0: 0x542D,\n      0x99E1: 0x543C,\n      0x99E2: 0x542E,\n      0x99E3: 0x5436,\n      0x99E4: 0x5429,\n      0x99E5: 0x541D,\n      0x99E6: 0x544E,\n      0x99E7: 0x548F,\n      0x99E8: 0x5475,\n      0x99E9: 0x548E,\n      0x99EA: 0x545F,\n      0x99EB: 0x5471,\n      0x99EC: 0x5477,\n      0x99ED: 0x5470,\n      0x99EE: 0x5492,\n      0x99EF: 0x547B,\n      0x99F0: 0x5480,\n      0x99F1: 0x5476,\n      0x99F2: 0x5484,\n      0x99F3: 0x5490,\n      0x99F4: 0x5486,\n      0x99F5: 0x54C7,\n      0x99F6: 0x54A2,\n      0x99F7: 0x54B8,\n      0x99F8: 0x54A5,\n      0x99F9: 0x54AC,\n      0x99FA: 0x54C4,\n      0x99FB: 0x54C8,\n      0x99FC: 0x54A8,\n      0x9A40: 0x54AB,\n      0x9A41: 0x54C2,\n      0x9A42: 0x54A4,\n      0x9A43: 0x54BE,\n      0x9A44: 0x54BC,\n      0x9A45: 0x54D8,\n      0x9A46: 0x54E5,\n      0x9A47: 0x54E6,\n      0x9A48: 0x550F,\n      0x9A49: 0x5514,\n      0x9A4A: 0x54FD,\n      0x9A4B: 0x54EE,\n      0x9A4C: 0x54ED,\n      0x9A4D: 0x54FA,\n      0x9A4E: 0x54E2,\n      0x9A4F: 0x5539,\n      0x9A50: 0x5540,\n      0x9A51: 0x5563,\n      0x9A52: 0x554C,\n      0x9A53: 0x552E,\n      0x9A54: 0x555C,\n      0x9A55: 0x5545,\n      0x9A56: 0x5556,\n      0x9A57: 0x5557,\n      0x9A58: 0x5538,\n      0x9A59: 0x5533,\n      0x9A5A: 0x555D,\n      0x9A5B: 0x5599,\n      0x9A5C: 0x5580,\n      0x9A5D: 0x54AF,\n      0x9A5E: 0x558A,\n      0x9A5F: 0x559F,\n      0x9A60: 0x557B,\n      0x9A61: 0x557E,\n      0x9A62: 0x5598,\n      0x9A63: 0x559E,\n      0x9A64: 0x55AE,\n      0x9A65: 0x557C,\n      0x9A66: 0x5583,\n      0x9A67: 0x55A9,\n      0x9A68: 0x5587,\n      0x9A69: 0x55A8,\n      0x9A6A: 0x55DA,\n      0x9A6B: 0x55C5,\n      0x9A6C: 0x55DF,\n      0x9A6D: 0x55C4,\n      0x9A6E: 0x55DC,\n      0x9A6F: 0x55E4,\n      0x9A70: 0x55D4,\n      0x9A71: 0x5614,\n      0x9A72: 0x55F7,\n      0x9A73: 0x5616,\n      0x9A74: 0x55FE,\n      0x9A75: 0x55FD,\n      0x9A76: 0x561B,\n      0x9A77: 0x55F9,\n      0x9A78: 0x564E,\n      0x9A79: 0x5650,\n      0x9A7A: 0x71DF,\n      0x9A7B: 0x5634,\n      0x9A7C: 0x5636,\n      0x9A7D: 0x5632,\n      0x9A7E: 0x5638,\n      0x9A80: 0x566B,\n      0x9A81: 0x5664,\n      0x9A82: 0x562F,\n      0x9A83: 0x566C,\n      0x9A84: 0x566A,\n      0x9A85: 0x5686,\n      0x9A86: 0x5680,\n      0x9A87: 0x568A,\n      0x9A88: 0x56A0,\n      0x9A89: 0x5694,\n      0x9A8A: 0x568F,\n      0x9A8B: 0x56A5,\n      0x9A8C: 0x56AE,\n      0x9A8D: 0x56B6,\n      0x9A8E: 0x56B4,\n      0x9A8F: 0x56C2,\n      0x9A90: 0x56BC,\n      0x9A91: 0x56C1,\n      0x9A92: 0x56C3,\n      0x9A93: 0x56C0,\n      0x9A94: 0x56C8,\n      0x9A95: 0x56CE,\n      0x9A96: 0x56D1,\n      0x9A97: 0x56D3,\n      0x9A98: 0x56D7,\n      0x9A99: 0x56EE,\n      0x9A9A: 0x56F9,\n      0x9A9B: 0x5700,\n      0x9A9C: 0x56FF,\n      0x9A9D: 0x5704,\n      0x9A9E: 0x5709,\n      0x9A9F: 0x5708,\n      0x9AA0: 0x570B,\n      0x9AA1: 0x570D,\n      0x9AA2: 0x5713,\n      0x9AA3: 0x5718,\n      0x9AA4: 0x5716,\n      0x9AA5: 0x55C7,\n      0x9AA6: 0x571C,\n      0x9AA7: 0x5726,\n      0x9AA8: 0x5737,\n      0x9AA9: 0x5738,\n      0x9AAA: 0x574E,\n      0x9AAB: 0x573B,\n      0x9AAC: 0x5740,\n      0x9AAD: 0x574F,\n      0x9AAE: 0x5769,\n      0x9AAF: 0x57C0,\n      0x9AB0: 0x5788,\n      0x9AB1: 0x5761,\n      0x9AB2: 0x577F,\n      0x9AB3: 0x5789,\n      0x9AB4: 0x5793,\n      0x9AB5: 0x57A0,\n      0x9AB6: 0x57B3,\n      0x9AB7: 0x57A4,\n      0x9AB8: 0x57AA,\n      0x9AB9: 0x57B0,\n      0x9ABA: 0x57C3,\n      0x9ABB: 0x57C6,\n      0x9ABC: 0x57D4,\n      0x9ABD: 0x57D2,\n      0x9ABE: 0x57D3,\n      0x9ABF: 0x580A,\n      0x9AC0: 0x57D6,\n      0x9AC1: 0x57E3,\n      0x9AC2: 0x580B,\n      0x9AC3: 0x5819,\n      0x9AC4: 0x581D,\n      0x9AC5: 0x5872,\n      0x9AC6: 0x5821,\n      0x9AC7: 0x5862,\n      0x9AC8: 0x584B,\n      0x9AC9: 0x5870,\n      0x9ACA: 0x6BC0,\n      0x9ACB: 0x5852,\n      0x9ACC: 0x583D,\n      0x9ACD: 0x5879,\n      0x9ACE: 0x5885,\n      0x9ACF: 0x58B9,\n      0x9AD0: 0x589F,\n      0x9AD1: 0x58AB,\n      0x9AD2: 0x58BA,\n      0x9AD3: 0x58DE,\n      0x9AD4: 0x58BB,\n      0x9AD5: 0x58B8,\n      0x9AD6: 0x58AE,\n      0x9AD7: 0x58C5,\n      0x9AD8: 0x58D3,\n      0x9AD9: 0x58D1,\n      0x9ADA: 0x58D7,\n      0x9ADB: 0x58D9,\n      0x9ADC: 0x58D8,\n      0x9ADD: 0x58E5,\n      0x9ADE: 0x58DC,\n      0x9ADF: 0x58E4,\n      0x9AE0: 0x58DF,\n      0x9AE1: 0x58EF,\n      0x9AE2: 0x58FA,\n      0x9AE3: 0x58F9,\n      0x9AE4: 0x58FB,\n      0x9AE5: 0x58FC,\n      0x9AE6: 0x58FD,\n      0x9AE7: 0x5902,\n      0x9AE8: 0x590A,\n      0x9AE9: 0x5910,\n      0x9AEA: 0x591B,\n      0x9AEB: 0x68A6,\n      0x9AEC: 0x5925,\n      0x9AED: 0x592C,\n      0x9AEE: 0x592D,\n      0x9AEF: 0x5932,\n      0x9AF0: 0x5938,\n      0x9AF1: 0x593E,\n      0x9AF2: 0x7AD2,\n      0x9AF3: 0x5955,\n      0x9AF4: 0x5950,\n      0x9AF5: 0x594E,\n      0x9AF6: 0x595A,\n      0x9AF7: 0x5958,\n      0x9AF8: 0x5962,\n      0x9AF9: 0x5960,\n      0x9AFA: 0x5967,\n      0x9AFB: 0x596C,\n      0x9AFC: 0x5969,\n      0x9B40: 0x5978,\n      0x9B41: 0x5981,\n      0x9B42: 0x599D,\n      0x9B43: 0x4F5E,\n      0x9B44: 0x4FAB,\n      0x9B45: 0x59A3,\n      0x9B46: 0x59B2,\n      0x9B47: 0x59C6,\n      0x9B48: 0x59E8,\n      0x9B49: 0x59DC,\n      0x9B4A: 0x598D,\n      0x9B4B: 0x59D9,\n      0x9B4C: 0x59DA,\n      0x9B4D: 0x5A25,\n      0x9B4E: 0x5A1F,\n      0x9B4F: 0x5A11,\n      0x9B50: 0x5A1C,\n      0x9B51: 0x5A09,\n      0x9B52: 0x5A1A,\n      0x9B53: 0x5A40,\n      0x9B54: 0x5A6C,\n      0x9B55: 0x5A49,\n      0x9B56: 0x5A35,\n      0x9B57: 0x5A36,\n      0x9B58: 0x5A62,\n      0x9B59: 0x5A6A,\n      0x9B5A: 0x5A9A,\n      0x9B5B: 0x5ABC,\n      0x9B5C: 0x5ABE,\n      0x9B5D: 0x5ACB,\n      0x9B5E: 0x5AC2,\n      0x9B5F: 0x5ABD,\n      0x9B60: 0x5AE3,\n      0x9B61: 0x5AD7,\n      0x9B62: 0x5AE6,\n      0x9B63: 0x5AE9,\n      0x9B64: 0x5AD6,\n      0x9B65: 0x5AFA,\n      0x9B66: 0x5AFB,\n      0x9B67: 0x5B0C,\n      0x9B68: 0x5B0B,\n      0x9B69: 0x5B16,\n      0x9B6A: 0x5B32,\n      0x9B6B: 0x5AD0,\n      0x9B6C: 0x5B2A,\n      0x9B6D: 0x5B36,\n      0x9B6E: 0x5B3E,\n      0x9B6F: 0x5B43,\n      0x9B70: 0x5B45,\n      0x9B71: 0x5B40,\n      0x9B72: 0x5B51,\n      0x9B73: 0x5B55,\n      0x9B74: 0x5B5A,\n      0x9B75: 0x5B5B,\n      0x9B76: 0x5B65,\n      0x9B77: 0x5B69,\n      0x9B78: 0x5B70,\n      0x9B79: 0x5B73,\n      0x9B7A: 0x5B75,\n      0x9B7B: 0x5B78,\n      0x9B7C: 0x6588,\n      0x9B7D: 0x5B7A,\n      0x9B7E: 0x5B80,\n      0x9B80: 0x5B83,\n      0x9B81: 0x5BA6,\n      0x9B82: 0x5BB8,\n      0x9B83: 0x5BC3,\n      0x9B84: 0x5BC7,\n      0x9B85: 0x5BC9,\n      0x9B86: 0x5BD4,\n      0x9B87: 0x5BD0,\n      0x9B88: 0x5BE4,\n      0x9B89: 0x5BE6,\n      0x9B8A: 0x5BE2,\n      0x9B8B: 0x5BDE,\n      0x9B8C: 0x5BE5,\n      0x9B8D: 0x5BEB,\n      0x9B8E: 0x5BF0,\n      0x9B8F: 0x5BF6,\n      0x9B90: 0x5BF3,\n      0x9B91: 0x5C05,\n      0x9B92: 0x5C07,\n      0x9B93: 0x5C08,\n      0x9B94: 0x5C0D,\n      0x9B95: 0x5C13,\n      0x9B96: 0x5C20,\n      0x9B97: 0x5C22,\n      0x9B98: 0x5C28,\n      0x9B99: 0x5C38,\n      0x9B9A: 0x5C39,\n      0x9B9B: 0x5C41,\n      0x9B9C: 0x5C46,\n      0x9B9D: 0x5C4E,\n      0x9B9E: 0x5C53,\n      0x9B9F: 0x5C50,\n      0x9BA0: 0x5C4F,\n      0x9BA1: 0x5B71,\n      0x9BA2: 0x5C6C,\n      0x9BA3: 0x5C6E,\n      0x9BA4: 0x4E62,\n      0x9BA5: 0x5C76,\n      0x9BA6: 0x5C79,\n      0x9BA7: 0x5C8C,\n      0x9BA8: 0x5C91,\n      0x9BA9: 0x5C94,\n      0x9BAA: 0x599B,\n      0x9BAB: 0x5CAB,\n      0x9BAC: 0x5CBB,\n      0x9BAD: 0x5CB6,\n      0x9BAE: 0x5CBC,\n      0x9BAF: 0x5CB7,\n      0x9BB0: 0x5CC5,\n      0x9BB1: 0x5CBE,\n      0x9BB2: 0x5CC7,\n      0x9BB3: 0x5CD9,\n      0x9BB4: 0x5CE9,\n      0x9BB5: 0x5CFD,\n      0x9BB6: 0x5CFA,\n      0x9BB7: 0x5CED,\n      0x9BB8: 0x5D8C,\n      0x9BB9: 0x5CEA,\n      0x9BBA: 0x5D0B,\n      0x9BBB: 0x5D15,\n      0x9BBC: 0x5D17,\n      0x9BBD: 0x5D5C,\n      0x9BBE: 0x5D1F,\n      0x9BBF: 0x5D1B,\n      0x9BC0: 0x5D11,\n      0x9BC1: 0x5D14,\n      0x9BC2: 0x5D22,\n      0x9BC3: 0x5D1A,\n      0x9BC4: 0x5D19,\n      0x9BC5: 0x5D18,\n      0x9BC6: 0x5D4C,\n      0x9BC7: 0x5D52,\n      0x9BC8: 0x5D4E,\n      0x9BC9: 0x5D4B,\n      0x9BCA: 0x5D6C,\n      0x9BCB: 0x5D73,\n      0x9BCC: 0x5D76,\n      0x9BCD: 0x5D87,\n      0x9BCE: 0x5D84,\n      0x9BCF: 0x5D82,\n      0x9BD0: 0x5DA2,\n      0x9BD1: 0x5D9D,\n      0x9BD2: 0x5DAC,\n      0x9BD3: 0x5DAE,\n      0x9BD4: 0x5DBD,\n      0x9BD5: 0x5D90,\n      0x9BD6: 0x5DB7,\n      0x9BD7: 0x5DBC,\n      0x9BD8: 0x5DC9,\n      0x9BD9: 0x5DCD,\n      0x9BDA: 0x5DD3,\n      0x9BDB: 0x5DD2,\n      0x9BDC: 0x5DD6,\n      0x9BDD: 0x5DDB,\n      0x9BDE: 0x5DEB,\n      0x9BDF: 0x5DF2,\n      0x9BE0: 0x5DF5,\n      0x9BE1: 0x5E0B,\n      0x9BE2: 0x5E1A,\n      0x9BE3: 0x5E19,\n      0x9BE4: 0x5E11,\n      0x9BE5: 0x5E1B,\n      0x9BE6: 0x5E36,\n      0x9BE7: 0x5E37,\n      0x9BE8: 0x5E44,\n      0x9BE9: 0x5E43,\n      0x9BEA: 0x5E40,\n      0x9BEB: 0x5E4E,\n      0x9BEC: 0x5E57,\n      0x9BED: 0x5E54,\n      0x9BEE: 0x5E5F,\n      0x9BEF: 0x5E62,\n      0x9BF0: 0x5E64,\n      0x9BF1: 0x5E47,\n      0x9BF2: 0x5E75,\n      0x9BF3: 0x5E76,\n      0x9BF4: 0x5E7A,\n      0x9BF5: 0x9EBC,\n      0x9BF6: 0x5E7F,\n      0x9BF7: 0x5EA0,\n      0x9BF8: 0x5EC1,\n      0x9BF9: 0x5EC2,\n      0x9BFA: 0x5EC8,\n      0x9BFB: 0x5ED0,\n      0x9BFC: 0x5ECF,\n      0x9C40: 0x5ED6,\n      0x9C41: 0x5EE3,\n      0x9C42: 0x5EDD,\n      0x9C43: 0x5EDA,\n      0x9C44: 0x5EDB,\n      0x9C45: 0x5EE2,\n      0x9C46: 0x5EE1,\n      0x9C47: 0x5EE8,\n      0x9C48: 0x5EE9,\n      0x9C49: 0x5EEC,\n      0x9C4A: 0x5EF1,\n      0x9C4B: 0x5EF3,\n      0x9C4C: 0x5EF0,\n      0x9C4D: 0x5EF4,\n      0x9C4E: 0x5EF8,\n      0x9C4F: 0x5EFE,\n      0x9C50: 0x5F03,\n      0x9C51: 0x5F09,\n      0x9C52: 0x5F5D,\n      0x9C53: 0x5F5C,\n      0x9C54: 0x5F0B,\n      0x9C55: 0x5F11,\n      0x9C56: 0x5F16,\n      0x9C57: 0x5F29,\n      0x9C58: 0x5F2D,\n      0x9C59: 0x5F38,\n      0x9C5A: 0x5F41,\n      0x9C5B: 0x5F48,\n      0x9C5C: 0x5F4C,\n      0x9C5D: 0x5F4E,\n      0x9C5E: 0x5F2F,\n      0x9C5F: 0x5F51,\n      0x9C60: 0x5F56,\n      0x9C61: 0x5F57,\n      0x9C62: 0x5F59,\n      0x9C63: 0x5F61,\n      0x9C64: 0x5F6D,\n      0x9C65: 0x5F73,\n      0x9C66: 0x5F77,\n      0x9C67: 0x5F83,\n      0x9C68: 0x5F82,\n      0x9C69: 0x5F7F,\n      0x9C6A: 0x5F8A,\n      0x9C6B: 0x5F88,\n      0x9C6C: 0x5F91,\n      0x9C6D: 0x5F87,\n      0x9C6E: 0x5F9E,\n      0x9C6F: 0x5F99,\n      0x9C70: 0x5F98,\n      0x9C71: 0x5FA0,\n      0x9C72: 0x5FA8,\n      0x9C73: 0x5FAD,\n      0x9C74: 0x5FBC,\n      0x9C75: 0x5FD6,\n      0x9C76: 0x5FFB,\n      0x9C77: 0x5FE4,\n      0x9C78: 0x5FF8,\n      0x9C79: 0x5FF1,\n      0x9C7A: 0x5FDD,\n      0x9C7B: 0x60B3,\n      0x9C7C: 0x5FFF,\n      0x9C7D: 0x6021,\n      0x9C7E: 0x6060,\n      0x9C80: 0x6019,\n      0x9C81: 0x6010,\n      0x9C82: 0x6029,\n      0x9C83: 0x600E,\n      0x9C84: 0x6031,\n      0x9C85: 0x601B,\n      0x9C86: 0x6015,\n      0x9C87: 0x602B,\n      0x9C88: 0x6026,\n      0x9C89: 0x600F,\n      0x9C8A: 0x603A,\n      0x9C8B: 0x605A,\n      0x9C8C: 0x6041,\n      0x9C8D: 0x606A,\n      0x9C8E: 0x6077,\n      0x9C8F: 0x605F,\n      0x9C90: 0x604A,\n      0x9C91: 0x6046,\n      0x9C92: 0x604D,\n      0x9C93: 0x6063,\n      0x9C94: 0x6043,\n      0x9C95: 0x6064,\n      0x9C96: 0x6042,\n      0x9C97: 0x606C,\n      0x9C98: 0x606B,\n      0x9C99: 0x6059,\n      0x9C9A: 0x6081,\n      0x9C9B: 0x608D,\n      0x9C9C: 0x60E7,\n      0x9C9D: 0x6083,\n      0x9C9E: 0x609A,\n      0x9C9F: 0x6084,\n      0x9CA0: 0x609B,\n      0x9CA1: 0x6096,\n      0x9CA2: 0x6097,\n      0x9CA3: 0x6092,\n      0x9CA4: 0x60A7,\n      0x9CA5: 0x608B,\n      0x9CA6: 0x60E1,\n      0x9CA7: 0x60B8,\n      0x9CA8: 0x60E0,\n      0x9CA9: 0x60D3,\n      0x9CAA: 0x60B4,\n      0x9CAB: 0x5FF0,\n      0x9CAC: 0x60BD,\n      0x9CAD: 0x60C6,\n      0x9CAE: 0x60B5,\n      0x9CAF: 0x60D8,\n      0x9CB0: 0x614D,\n      0x9CB1: 0x6115,\n      0x9CB2: 0x6106,\n      0x9CB3: 0x60F6,\n      0x9CB4: 0x60F7,\n      0x9CB5: 0x6100,\n      0x9CB6: 0x60F4,\n      0x9CB7: 0x60FA,\n      0x9CB8: 0x6103,\n      0x9CB9: 0x6121,\n      0x9CBA: 0x60FB,\n      0x9CBB: 0x60F1,\n      0x9CBC: 0x610D,\n      0x9CBD: 0x610E,\n      0x9CBE: 0x6147,\n      0x9CBF: 0x613E,\n      0x9CC0: 0x6128,\n      0x9CC1: 0x6127,\n      0x9CC2: 0x614A,\n      0x9CC3: 0x613F,\n      0x9CC4: 0x613C,\n      0x9CC5: 0x612C,\n      0x9CC6: 0x6134,\n      0x9CC7: 0x613D,\n      0x9CC8: 0x6142,\n      0x9CC9: 0x6144,\n      0x9CCA: 0x6173,\n      0x9CCB: 0x6177,\n      0x9CCC: 0x6158,\n      0x9CCD: 0x6159,\n      0x9CCE: 0x615A,\n      0x9CCF: 0x616B,\n      0x9CD0: 0x6174,\n      0x9CD1: 0x616F,\n      0x9CD2: 0x6165,\n      0x9CD3: 0x6171,\n      0x9CD4: 0x615F,\n      0x9CD5: 0x615D,\n      0x9CD6: 0x6153,\n      0x9CD7: 0x6175,\n      0x9CD8: 0x6199,\n      0x9CD9: 0x6196,\n      0x9CDA: 0x6187,\n      0x9CDB: 0x61AC,\n      0x9CDC: 0x6194,\n      0x9CDD: 0x619A,\n      0x9CDE: 0x618A,\n      0x9CDF: 0x6191,\n      0x9CE0: 0x61AB,\n      0x9CE1: 0x61AE,\n      0x9CE2: 0x61CC,\n      0x9CE3: 0x61CA,\n      0x9CE4: 0x61C9,\n      0x9CE5: 0x61F7,\n      0x9CE6: 0x61C8,\n      0x9CE7: 0x61C3,\n      0x9CE8: 0x61C6,\n      0x9CE9: 0x61BA,\n      0x9CEA: 0x61CB,\n      0x9CEB: 0x7F79,\n      0x9CEC: 0x61CD,\n      0x9CED: 0x61E6,\n      0x9CEE: 0x61E3,\n      0x9CEF: 0x61F6,\n      0x9CF0: 0x61FA,\n      0x9CF1: 0x61F4,\n      0x9CF2: 0x61FF,\n      0x9CF3: 0x61FD,\n      0x9CF4: 0x61FC,\n      0x9CF5: 0x61FE,\n      0x9CF6: 0x6200,\n      0x9CF7: 0x6208,\n      0x9CF8: 0x6209,\n      0x9CF9: 0x620D,\n      0x9CFA: 0x620C,\n      0x9CFB: 0x6214,\n      0x9CFC: 0x621B,\n      0x9D40: 0x621E,\n      0x9D41: 0x6221,\n      0x9D42: 0x622A,\n      0x9D43: 0x622E,\n      0x9D44: 0x6230,\n      0x9D45: 0x6232,\n      0x9D46: 0x6233,\n      0x9D47: 0x6241,\n      0x9D48: 0x624E,\n      0x9D49: 0x625E,\n      0x9D4A: 0x6263,\n      0x9D4B: 0x625B,\n      0x9D4C: 0x6260,\n      0x9D4D: 0x6268,\n      0x9D4E: 0x627C,\n      0x9D4F: 0x6282,\n      0x9D50: 0x6289,\n      0x9D51: 0x627E,\n      0x9D52: 0x6292,\n      0x9D53: 0x6293,\n      0x9D54: 0x6296,\n      0x9D55: 0x62D4,\n      0x9D56: 0x6283,\n      0x9D57: 0x6294,\n      0x9D58: 0x62D7,\n      0x9D59: 0x62D1,\n      0x9D5A: 0x62BB,\n      0x9D5B: 0x62CF,\n      0x9D5C: 0x62FF,\n      0x9D5D: 0x62C6,\n      0x9D5E: 0x64D4,\n      0x9D5F: 0x62C8,\n      0x9D60: 0x62DC,\n      0x9D61: 0x62CC,\n      0x9D62: 0x62CA,\n      0x9D63: 0x62C2,\n      0x9D64: 0x62C7,\n      0x9D65: 0x629B,\n      0x9D66: 0x62C9,\n      0x9D67: 0x630C,\n      0x9D68: 0x62EE,\n      0x9D69: 0x62F1,\n      0x9D6A: 0x6327,\n      0x9D6B: 0x6302,\n      0x9D6C: 0x6308,\n      0x9D6D: 0x62EF,\n      0x9D6E: 0x62F5,\n      0x9D6F: 0x6350,\n      0x9D70: 0x633E,\n      0x9D71: 0x634D,\n      0x9D72: 0x641C,\n      0x9D73: 0x634F,\n      0x9D74: 0x6396,\n      0x9D75: 0x638E,\n      0x9D76: 0x6380,\n      0x9D77: 0x63AB,\n      0x9D78: 0x6376,\n      0x9D79: 0x63A3,\n      0x9D7A: 0x638F,\n      0x9D7B: 0x6389,\n      0x9D7C: 0x639F,\n      0x9D7D: 0x63B5,\n      0x9D7E: 0x636B,\n      0x9D80: 0x6369,\n      0x9D81: 0x63BE,\n      0x9D82: 0x63E9,\n      0x9D83: 0x63C0,\n      0x9D84: 0x63C6,\n      0x9D85: 0x63E3,\n      0x9D86: 0x63C9,\n      0x9D87: 0x63D2,\n      0x9D88: 0x63F6,\n      0x9D89: 0x63C4,\n      0x9D8A: 0x6416,\n      0x9D8B: 0x6434,\n      0x9D8C: 0x6406,\n      0x9D8D: 0x6413,\n      0x9D8E: 0x6426,\n      0x9D8F: 0x6436,\n      0x9D90: 0x651D,\n      0x9D91: 0x6417,\n      0x9D92: 0x6428,\n      0x9D93: 0x640F,\n      0x9D94: 0x6467,\n      0x9D95: 0x646F,\n      0x9D96: 0x6476,\n      0x9D97: 0x644E,\n      0x9D98: 0x652A,\n      0x9D99: 0x6495,\n      0x9D9A: 0x6493,\n      0x9D9B: 0x64A5,\n      0x9D9C: 0x64A9,\n      0x9D9D: 0x6488,\n      0x9D9E: 0x64BC,\n      0x9D9F: 0x64DA,\n      0x9DA0: 0x64D2,\n      0x9DA1: 0x64C5,\n      0x9DA2: 0x64C7,\n      0x9DA3: 0x64BB,\n      0x9DA4: 0x64D8,\n      0x9DA5: 0x64C2,\n      0x9DA6: 0x64F1,\n      0x9DA7: 0x64E7,\n      0x9DA8: 0x8209,\n      0x9DA9: 0x64E0,\n      0x9DAA: 0x64E1,\n      0x9DAB: 0x62AC,\n      0x9DAC: 0x64E3,\n      0x9DAD: 0x64EF,\n      0x9DAE: 0x652C,\n      0x9DAF: 0x64F6,\n      0x9DB0: 0x64F4,\n      0x9DB1: 0x64F2,\n      0x9DB2: 0x64FA,\n      0x9DB3: 0x6500,\n      0x9DB4: 0x64FD,\n      0x9DB5: 0x6518,\n      0x9DB6: 0x651C,\n      0x9DB7: 0x6505,\n      0x9DB8: 0x6524,\n      0x9DB9: 0x6523,\n      0x9DBA: 0x652B,\n      0x9DBB: 0x6534,\n      0x9DBC: 0x6535,\n      0x9DBD: 0x6537,\n      0x9DBE: 0x6536,\n      0x9DBF: 0x6538,\n      0x9DC0: 0x754B,\n      0x9DC1: 0x6548,\n      0x9DC2: 0x6556,\n      0x9DC3: 0x6555,\n      0x9DC4: 0x654D,\n      0x9DC5: 0x6558,\n      0x9DC6: 0x655E,\n      0x9DC7: 0x655D,\n      0x9DC8: 0x6572,\n      0x9DC9: 0x6578,\n      0x9DCA: 0x6582,\n      0x9DCB: 0x6583,\n      0x9DCC: 0x8B8A,\n      0x9DCD: 0x659B,\n      0x9DCE: 0x659F,\n      0x9DCF: 0x65AB,\n      0x9DD0: 0x65B7,\n      0x9DD1: 0x65C3,\n      0x9DD2: 0x65C6,\n      0x9DD3: 0x65C1,\n      0x9DD4: 0x65C4,\n      0x9DD5: 0x65CC,\n      0x9DD6: 0x65D2,\n      0x9DD7: 0x65DB,\n      0x9DD8: 0x65D9,\n      0x9DD9: 0x65E0,\n      0x9DDA: 0x65E1,\n      0x9DDB: 0x65F1,\n      0x9DDC: 0x6772,\n      0x9DDD: 0x660A,\n      0x9DDE: 0x6603,\n      0x9DDF: 0x65FB,\n      0x9DE0: 0x6773,\n      0x9DE1: 0x6635,\n      0x9DE2: 0x6636,\n      0x9DE3: 0x6634,\n      0x9DE4: 0x661C,\n      0x9DE5: 0x664F,\n      0x9DE6: 0x6644,\n      0x9DE7: 0x6649,\n      0x9DE8: 0x6641,\n      0x9DE9: 0x665E,\n      0x9DEA: 0x665D,\n      0x9DEB: 0x6664,\n      0x9DEC: 0x6667,\n      0x9DED: 0x6668,\n      0x9DEE: 0x665F,\n      0x9DEF: 0x6662,\n      0x9DF0: 0x6670,\n      0x9DF1: 0x6683,\n      0x9DF2: 0x6688,\n      0x9DF3: 0x668E,\n      0x9DF4: 0x6689,\n      0x9DF5: 0x6684,\n      0x9DF6: 0x6698,\n      0x9DF7: 0x669D,\n      0x9DF8: 0x66C1,\n      0x9DF9: 0x66B9,\n      0x9DFA: 0x66C9,\n      0x9DFB: 0x66BE,\n      0x9DFC: 0x66BC,\n      0x9E40: 0x66C4,\n      0x9E41: 0x66B8,\n      0x9E42: 0x66D6,\n      0x9E43: 0x66DA,\n      0x9E44: 0x66E0,\n      0x9E45: 0x663F,\n      0x9E46: 0x66E6,\n      0x9E47: 0x66E9,\n      0x9E48: 0x66F0,\n      0x9E49: 0x66F5,\n      0x9E4A: 0x66F7,\n      0x9E4B: 0x670F,\n      0x9E4C: 0x6716,\n      0x9E4D: 0x671E,\n      0x9E4E: 0x6726,\n      0x9E4F: 0x6727,\n      0x9E50: 0x9738,\n      0x9E51: 0x672E,\n      0x9E52: 0x673F,\n      0x9E53: 0x6736,\n      0x9E54: 0x6741,\n      0x9E55: 0x6738,\n      0x9E56: 0x6737,\n      0x9E57: 0x6746,\n      0x9E58: 0x675E,\n      0x9E59: 0x6760,\n      0x9E5A: 0x6759,\n      0x9E5B: 0x6763,\n      0x9E5C: 0x6764,\n      0x9E5D: 0x6789,\n      0x9E5E: 0x6770,\n      0x9E5F: 0x67A9,\n      0x9E60: 0x677C,\n      0x9E61: 0x676A,\n      0x9E62: 0x678C,\n      0x9E63: 0x678B,\n      0x9E64: 0x67A6,\n      0x9E65: 0x67A1,\n      0x9E66: 0x6785,\n      0x9E67: 0x67B7,\n      0x9E68: 0x67EF,\n      0x9E69: 0x67B4,\n      0x9E6A: 0x67EC,\n      0x9E6B: 0x67B3,\n      0x9E6C: 0x67E9,\n      0x9E6D: 0x67B8,\n      0x9E6E: 0x67E4,\n      0x9E6F: 0x67DE,\n      0x9E70: 0x67DD,\n      0x9E71: 0x67E2,\n      0x9E72: 0x67EE,\n      0x9E73: 0x67B9,\n      0x9E74: 0x67CE,\n      0x9E75: 0x67C6,\n      0x9E76: 0x67E7,\n      0x9E77: 0x6A9C,\n      0x9E78: 0x681E,\n      0x9E79: 0x6846,\n      0x9E7A: 0x6829,\n      0x9E7B: 0x6840,\n      0x9E7C: 0x684D,\n      0x9E7D: 0x6832,\n      0x9E7E: 0x684E,\n      0x9E80: 0x68B3,\n      0x9E81: 0x682B,\n      0x9E82: 0x6859,\n      0x9E83: 0x6863,\n      0x9E84: 0x6877,\n      0x9E85: 0x687F,\n      0x9E86: 0x689F,\n      0x9E87: 0x688F,\n      0x9E88: 0x68AD,\n      0x9E89: 0x6894,\n      0x9E8A: 0x689D,\n      0x9E8B: 0x689B,\n      0x9E8C: 0x6883,\n      0x9E8D: 0x6AAE,\n      0x9E8E: 0x68B9,\n      0x9E8F: 0x6874,\n      0x9E90: 0x68B5,\n      0x9E91: 0x68A0,\n      0x9E92: 0x68BA,\n      0x9E93: 0x690F,\n      0x9E94: 0x688D,\n      0x9E95: 0x687E,\n      0x9E96: 0x6901,\n      0x9E97: 0x68CA,\n      0x9E98: 0x6908,\n      0x9E99: 0x68D8,\n      0x9E9A: 0x6922,\n      0x9E9B: 0x6926,\n      0x9E9C: 0x68E1,\n      0x9E9D: 0x690C,\n      0x9E9E: 0x68CD,\n      0x9E9F: 0x68D4,\n      0x9EA0: 0x68E7,\n      0x9EA1: 0x68D5,\n      0x9EA2: 0x6936,\n      0x9EA3: 0x6912,\n      0x9EA4: 0x6904,\n      0x9EA5: 0x68D7,\n      0x9EA6: 0x68E3,\n      0x9EA7: 0x6925,\n      0x9EA8: 0x68F9,\n      0x9EA9: 0x68E0,\n      0x9EAA: 0x68EF,\n      0x9EAB: 0x6928,\n      0x9EAC: 0x692A,\n      0x9EAD: 0x691A,\n      0x9EAE: 0x6923,\n      0x9EAF: 0x6921,\n      0x9EB0: 0x68C6,\n      0x9EB1: 0x6979,\n      0x9EB2: 0x6977,\n      0x9EB3: 0x695C,\n      0x9EB4: 0x6978,\n      0x9EB5: 0x696B,\n      0x9EB6: 0x6954,\n      0x9EB7: 0x697E,\n      0x9EB8: 0x696E,\n      0x9EB9: 0x6939,\n      0x9EBA: 0x6974,\n      0x9EBB: 0x693D,\n      0x9EBC: 0x6959,\n      0x9EBD: 0x6930,\n      0x9EBE: 0x6961,\n      0x9EBF: 0x695E,\n      0x9EC0: 0x695D,\n      0x9EC1: 0x6981,\n      0x9EC2: 0x696A,\n      0x9EC3: 0x69B2,\n      0x9EC4: 0x69AE,\n      0x9EC5: 0x69D0,\n      0x9EC6: 0x69BF,\n      0x9EC7: 0x69C1,\n      0x9EC8: 0x69D3,\n      0x9EC9: 0x69BE,\n      0x9ECA: 0x69CE,\n      0x9ECB: 0x5BE8,\n      0x9ECC: 0x69CA,\n      0x9ECD: 0x69DD,\n      0x9ECE: 0x69BB,\n      0x9ECF: 0x69C3,\n      0x9ED0: 0x69A7,\n      0x9ED1: 0x6A2E,\n      0x9ED2: 0x6991,\n      0x9ED3: 0x69A0,\n      0x9ED4: 0x699C,\n      0x9ED5: 0x6995,\n      0x9ED6: 0x69B4,\n      0x9ED7: 0x69DE,\n      0x9ED8: 0x69E8,\n      0x9ED9: 0x6A02,\n      0x9EDA: 0x6A1B,\n      0x9EDB: 0x69FF,\n      0x9EDC: 0x6B0A,\n      0x9EDD: 0x69F9,\n      0x9EDE: 0x69F2,\n      0x9EDF: 0x69E7,\n      0x9EE0: 0x6A05,\n      0x9EE1: 0x69B1,\n      0x9EE2: 0x6A1E,\n      0x9EE3: 0x69ED,\n      0x9EE4: 0x6A14,\n      0x9EE5: 0x69EB,\n      0x9EE6: 0x6A0A,\n      0x9EE7: 0x6A12,\n      0x9EE8: 0x6AC1,\n      0x9EE9: 0x6A23,\n      0x9EEA: 0x6A13,\n      0x9EEB: 0x6A44,\n      0x9EEC: 0x6A0C,\n      0x9EED: 0x6A72,\n      0x9EEE: 0x6A36,\n      0x9EEF: 0x6A78,\n      0x9EF0: 0x6A47,\n      0x9EF1: 0x6A62,\n      0x9EF2: 0x6A59,\n      0x9EF3: 0x6A66,\n      0x9EF4: 0x6A48,\n      0x9EF5: 0x6A38,\n      0x9EF6: 0x6A22,\n      0x9EF7: 0x6A90,\n      0x9EF8: 0x6A8D,\n      0x9EF9: 0x6AA0,\n      0x9EFA: 0x6A84,\n      0x9EFB: 0x6AA2,\n      0x9EFC: 0x6AA3,\n      0x9F40: 0x6A97,\n      0x9F41: 0x8617,\n      0x9F42: 0x6ABB,\n      0x9F43: 0x6AC3,\n      0x9F44: 0x6AC2,\n      0x9F45: 0x6AB8,\n      0x9F46: 0x6AB3,\n      0x9F47: 0x6AAC,\n      0x9F48: 0x6ADE,\n      0x9F49: 0x6AD1,\n      0x9F4A: 0x6ADF,\n      0x9F4B: 0x6AAA,\n      0x9F4C: 0x6ADA,\n      0x9F4D: 0x6AEA,\n      0x9F4E: 0x6AFB,\n      0x9F4F: 0x6B05,\n      0x9F50: 0x8616,\n      0x9F51: 0x6AFA,\n      0x9F52: 0x6B12,\n      0x9F53: 0x6B16,\n      0x9F54: 0x9B31,\n      0x9F55: 0x6B1F,\n      0x9F56: 0x6B38,\n      0x9F57: 0x6B37,\n      0x9F58: 0x76DC,\n      0x9F59: 0x6B39,\n      0x9F5A: 0x98EE,\n      0x9F5B: 0x6B47,\n      0x9F5C: 0x6B43,\n      0x9F5D: 0x6B49,\n      0x9F5E: 0x6B50,\n      0x9F5F: 0x6B59,\n      0x9F60: 0x6B54,\n      0x9F61: 0x6B5B,\n      0x9F62: 0x6B5F,\n      0x9F63: 0x6B61,\n      0x9F64: 0x6B78,\n      0x9F65: 0x6B79,\n      0x9F66: 0x6B7F,\n      0x9F67: 0x6B80,\n      0x9F68: 0x6B84,\n      0x9F69: 0x6B83,\n      0x9F6A: 0x6B8D,\n      0x9F6B: 0x6B98,\n      0x9F6C: 0x6B95,\n      0x9F6D: 0x6B9E,\n      0x9F6E: 0x6BA4,\n      0x9F6F: 0x6BAA,\n      0x9F70: 0x6BAB,\n      0x9F71: 0x6BAF,\n      0x9F72: 0x6BB2,\n      0x9F73: 0x6BB1,\n      0x9F74: 0x6BB3,\n      0x9F75: 0x6BB7,\n      0x9F76: 0x6BBC,\n      0x9F77: 0x6BC6,\n      0x9F78: 0x6BCB,\n      0x9F79: 0x6BD3,\n      0x9F7A: 0x6BDF,\n      0x9F7B: 0x6BEC,\n      0x9F7C: 0x6BEB,\n      0x9F7D: 0x6BF3,\n      0x9F7E: 0x6BEF,\n      0x9F80: 0x9EBE,\n      0x9F81: 0x6C08,\n      0x9F82: 0x6C13,\n      0x9F83: 0x6C14,\n      0x9F84: 0x6C1B,\n      0x9F85: 0x6C24,\n      0x9F86: 0x6C23,\n      0x9F87: 0x6C5E,\n      0x9F88: 0x6C55,\n      0x9F89: 0x6C62,\n      0x9F8A: 0x6C6A,\n      0x9F8B: 0x6C82,\n      0x9F8C: 0x6C8D,\n      0x9F8D: 0x6C9A,\n      0x9F8E: 0x6C81,\n      0x9F8F: 0x6C9B,\n      0x9F90: 0x6C7E,\n      0x9F91: 0x6C68,\n      0x9F92: 0x6C73,\n      0x9F93: 0x6C92,\n      0x9F94: 0x6C90,\n      0x9F95: 0x6CC4,\n      0x9F96: 0x6CF1,\n      0x9F97: 0x6CD3,\n      0x9F98: 0x6CBD,\n      0x9F99: 0x6CD7,\n      0x9F9A: 0x6CC5,\n      0x9F9B: 0x6CDD,\n      0x9F9C: 0x6CAE,\n      0x9F9D: 0x6CB1,\n      0x9F9E: 0x6CBE,\n      0x9F9F: 0x6CBA,\n      0x9FA0: 0x6CDB,\n      0x9FA1: 0x6CEF,\n      0x9FA2: 0x6CD9,\n      0x9FA3: 0x6CEA,\n      0x9FA4: 0x6D1F,\n      0x9FA5: 0x884D,\n      0x9FA6: 0x6D36,\n      0x9FA7: 0x6D2B,\n      0x9FA8: 0x6D3D,\n      0x9FA9: 0x6D38,\n      0x9FAA: 0x6D19,\n      0x9FAB: 0x6D35,\n      0x9FAC: 0x6D33,\n      0x9FAD: 0x6D12,\n      0x9FAE: 0x6D0C,\n      0x9FAF: 0x6D63,\n      0x9FB0: 0x6D93,\n      0x9FB1: 0x6D64,\n      0x9FB2: 0x6D5A,\n      0x9FB3: 0x6D79,\n      0x9FB4: 0x6D59,\n      0x9FB5: 0x6D8E,\n      0x9FB6: 0x6D95,\n      0x9FB7: 0x6FE4,\n      0x9FB8: 0x6D85,\n      0x9FB9: 0x6DF9,\n      0x9FBA: 0x6E15,\n      0x9FBB: 0x6E0A,\n      0x9FBC: 0x6DB5,\n      0x9FBD: 0x6DC7,\n      0x9FBE: 0x6DE6,\n      0x9FBF: 0x6DB8,\n      0x9FC0: 0x6DC6,\n      0x9FC1: 0x6DEC,\n      0x9FC2: 0x6DDE,\n      0x9FC3: 0x6DCC,\n      0x9FC4: 0x6DE8,\n      0x9FC5: 0x6DD2,\n      0x9FC6: 0x6DC5,\n      0x9FC7: 0x6DFA,\n      0x9FC8: 0x6DD9,\n      0x9FC9: 0x6DE4,\n      0x9FCA: 0x6DD5,\n      0x9FCB: 0x6DEA,\n      0x9FCC: 0x6DEE,\n      0x9FCD: 0x6E2D,\n      0x9FCE: 0x6E6E,\n      0x9FCF: 0x6E2E,\n      0x9FD0: 0x6E19,\n      0x9FD1: 0x6E72,\n      0x9FD2: 0x6E5F,\n      0x9FD3: 0x6E3E,\n      0x9FD4: 0x6E23,\n      0x9FD5: 0x6E6B,\n      0x9FD6: 0x6E2B,\n      0x9FD7: 0x6E76,\n      0x9FD8: 0x6E4D,\n      0x9FD9: 0x6E1F,\n      0x9FDA: 0x6E43,\n      0x9FDB: 0x6E3A,\n      0x9FDC: 0x6E4E,\n      0x9FDD: 0x6E24,\n      0x9FDE: 0x6EFF,\n      0x9FDF: 0x6E1D,\n      0x9FE0: 0x6E38,\n      0x9FE1: 0x6E82,\n      0x9FE2: 0x6EAA,\n      0x9FE3: 0x6E98,\n      0x9FE4: 0x6EC9,\n      0x9FE5: 0x6EB7,\n      0x9FE6: 0x6ED3,\n      0x9FE7: 0x6EBD,\n      0x9FE8: 0x6EAF,\n      0x9FE9: 0x6EC4,\n      0x9FEA: 0x6EB2,\n      0x9FEB: 0x6ED4,\n      0x9FEC: 0x6ED5,\n      0x9FED: 0x6E8F,\n      0x9FEE: 0x6EA5,\n      0x9FEF: 0x6EC2,\n      0x9FF0: 0x6E9F,\n      0x9FF1: 0x6F41,\n      0x9FF2: 0x6F11,\n      0x9FF3: 0x704C,\n      0x9FF4: 0x6EEC,\n      0x9FF5: 0x6EF8,\n      0x9FF6: 0x6EFE,\n      0x9FF7: 0x6F3F,\n      0x9FF8: 0x6EF2,\n      0x9FF9: 0x6F31,\n      0x9FFA: 0x6EEF,\n      0x9FFB: 0x6F32,\n      0x9FFC: 0x6ECC,\n      0xA1: 0xFF61,\n      0xA2: 0xFF62,\n      0xA3: 0xFF63,\n      0xA4: 0xFF64,\n      0xA5: 0xFF65,\n      0xA6: 0xFF66,\n      0xA7: 0xFF67,\n      0xA8: 0xFF68,\n      0xA9: 0xFF69,\n      0xAA: 0xFF6A,\n      0xAB: 0xFF6B,\n      0xAC: 0xFF6C,\n      0xAD: 0xFF6D,\n      0xAE: 0xFF6E,\n      0xAF: 0xFF6F,\n      0xB0: 0xFF70,\n      0xB1: 0xFF71,\n      0xB2: 0xFF72,\n      0xB3: 0xFF73,\n      0xB4: 0xFF74,\n      0xB5: 0xFF75,\n      0xB6: 0xFF76,\n      0xB7: 0xFF77,\n      0xB8: 0xFF78,\n      0xB9: 0xFF79,\n      0xBA: 0xFF7A,\n      0xBB: 0xFF7B,\n      0xBC: 0xFF7C,\n      0xBD: 0xFF7D,\n      0xBE: 0xFF7E,\n      0xBF: 0xFF7F,\n      0xC0: 0xFF80,\n      0xC1: 0xFF81,\n      0xC2: 0xFF82,\n      0xC3: 0xFF83,\n      0xC4: 0xFF84,\n      0xC5: 0xFF85,\n      0xC6: 0xFF86,\n      0xC7: 0xFF87,\n      0xC8: 0xFF88,\n      0xC9: 0xFF89,\n      0xCA: 0xFF8A,\n      0xCB: 0xFF8B,\n      0xCC: 0xFF8C,\n      0xCD: 0xFF8D,\n      0xCE: 0xFF8E,\n      0xCF: 0xFF8F,\n      0xD0: 0xFF90,\n      0xD1: 0xFF91,\n      0xD2: 0xFF92,\n      0xD3: 0xFF93,\n      0xD4: 0xFF94,\n      0xD5: 0xFF95,\n      0xD6: 0xFF96,\n      0xD7: 0xFF97,\n      0xD8: 0xFF98,\n      0xD9: 0xFF99,\n      0xDA: 0xFF9A,\n      0xDB: 0xFF9B,\n      0xDC: 0xFF9C,\n      0xDD: 0xFF9D,\n      0xDE: 0xFF9E,\n      0xDF: 0xFF9F,\n      0xE040: 0x6F3E,\n      0xE041: 0x6F13,\n      0xE042: 0x6EF7,\n      0xE043: 0x6F86,\n      0xE044: 0x6F7A,\n      0xE045: 0x6F78,\n      0xE046: 0x6F81,\n      0xE047: 0x6F80,\n      0xE048: 0x6F6F,\n      0xE049: 0x6F5B,\n      0xE04A: 0x6FF3,\n      0xE04B: 0x6F6D,\n      0xE04C: 0x6F82,\n      0xE04D: 0x6F7C,\n      0xE04E: 0x6F58,\n      0xE04F: 0x6F8E,\n      0xE050: 0x6F91,\n      0xE051: 0x6FC2,\n      0xE052: 0x6F66,\n      0xE053: 0x6FB3,\n      0xE054: 0x6FA3,\n      0xE055: 0x6FA1,\n      0xE056: 0x6FA4,\n      0xE057: 0x6FB9,\n      0xE058: 0x6FC6,\n      0xE059: 0x6FAA,\n      0xE05A: 0x6FDF,\n      0xE05B: 0x6FD5,\n      0xE05C: 0x6FEC,\n      0xE05D: 0x6FD4,\n      0xE05E: 0x6FD8,\n      0xE05F: 0x6FF1,\n      0xE060: 0x6FEE,\n      0xE061: 0x6FDB,\n      0xE062: 0x7009,\n      0xE063: 0x700B,\n      0xE064: 0x6FFA,\n      0xE065: 0x7011,\n      0xE066: 0x7001,\n      0xE067: 0x700F,\n      0xE068: 0x6FFE,\n      0xE069: 0x701B,\n      0xE06A: 0x701A,\n      0xE06B: 0x6F74,\n      0xE06C: 0x701D,\n      0xE06D: 0x7018,\n      0xE06E: 0x701F,\n      0xE06F: 0x7030,\n      0xE070: 0x703E,\n      0xE071: 0x7032,\n      0xE072: 0x7051,\n      0xE073: 0x7063,\n      0xE074: 0x7099,\n      0xE075: 0x7092,\n      0xE076: 0x70AF,\n      0xE077: 0x70F1,\n      0xE078: 0x70AC,\n      0xE079: 0x70B8,\n      0xE07A: 0x70B3,\n      0xE07B: 0x70AE,\n      0xE07C: 0x70DF,\n      0xE07D: 0x70CB,\n      0xE07E: 0x70DD,\n      0xE080: 0x70D9,\n      0xE081: 0x7109,\n      0xE082: 0x70FD,\n      0xE083: 0x711C,\n      0xE084: 0x7119,\n      0xE085: 0x7165,\n      0xE086: 0x7155,\n      0xE087: 0x7188,\n      0xE088: 0x7166,\n      0xE089: 0x7162,\n      0xE08A: 0x714C,\n      0xE08B: 0x7156,\n      0xE08C: 0x716C,\n      0xE08D: 0x718F,\n      0xE08E: 0x71FB,\n      0xE08F: 0x7184,\n      0xE090: 0x7195,\n      0xE091: 0x71A8,\n      0xE092: 0x71AC,\n      0xE093: 0x71D7,\n      0xE094: 0x71B9,\n      0xE095: 0x71BE,\n      0xE096: 0x71D2,\n      0xE097: 0x71C9,\n      0xE098: 0x71D4,\n      0xE099: 0x71CE,\n      0xE09A: 0x71E0,\n      0xE09B: 0x71EC,\n      0xE09C: 0x71E7,\n      0xE09D: 0x71F5,\n      0xE09E: 0x71FC,\n      0xE09F: 0x71F9,\n      0xE0A0: 0x71FF,\n      0xE0A1: 0x720D,\n      0xE0A2: 0x7210,\n      0xE0A3: 0x721B,\n      0xE0A4: 0x7228,\n      0xE0A5: 0x722D,\n      0xE0A6: 0x722C,\n      0xE0A7: 0x7230,\n      0xE0A8: 0x7232,\n      0xE0A9: 0x723B,\n      0xE0AA: 0x723C,\n      0xE0AB: 0x723F,\n      0xE0AC: 0x7240,\n      0xE0AD: 0x7246,\n      0xE0AE: 0x724B,\n      0xE0AF: 0x7258,\n      0xE0B0: 0x7274,\n      0xE0B1: 0x727E,\n      0xE0B2: 0x7282,\n      0xE0B3: 0x7281,\n      0xE0B4: 0x7287,\n      0xE0B5: 0x7292,\n      0xE0B6: 0x7296,\n      0xE0B7: 0x72A2,\n      0xE0B8: 0x72A7,\n      0xE0B9: 0x72B9,\n      0xE0BA: 0x72B2,\n      0xE0BB: 0x72C3,\n      0xE0BC: 0x72C6,\n      0xE0BD: 0x72C4,\n      0xE0BE: 0x72CE,\n      0xE0BF: 0x72D2,\n      0xE0C0: 0x72E2,\n      0xE0C1: 0x72E0,\n      0xE0C2: 0x72E1,\n      0xE0C3: 0x72F9,\n      0xE0C4: 0x72F7,\n      0xE0C5: 0x500F,\n      0xE0C6: 0x7317,\n      0xE0C7: 0x730A,\n      0xE0C8: 0x731C,\n      0xE0C9: 0x7316,\n      0xE0CA: 0x731D,\n      0xE0CB: 0x7334,\n      0xE0CC: 0x732F,\n      0xE0CD: 0x7329,\n      0xE0CE: 0x7325,\n      0xE0CF: 0x733E,\n      0xE0D0: 0x734E,\n      0xE0D1: 0x734F,\n      0xE0D2: 0x9ED8,\n      0xE0D3: 0x7357,\n      0xE0D4: 0x736A,\n      0xE0D5: 0x7368,\n      0xE0D6: 0x7370,\n      0xE0D7: 0x7378,\n      0xE0D8: 0x7375,\n      0xE0D9: 0x737B,\n      0xE0DA: 0x737A,\n      0xE0DB: 0x73C8,\n      0xE0DC: 0x73B3,\n      0xE0DD: 0x73CE,\n      0xE0DE: 0x73BB,\n      0xE0DF: 0x73C0,\n      0xE0E0: 0x73E5,\n      0xE0E1: 0x73EE,\n      0xE0E2: 0x73DE,\n      0xE0E3: 0x74A2,\n      0xE0E4: 0x7405,\n      0xE0E5: 0x746F,\n      0xE0E6: 0x7425,\n      0xE0E7: 0x73F8,\n      0xE0E8: 0x7432,\n      0xE0E9: 0x743A,\n      0xE0EA: 0x7455,\n      0xE0EB: 0x743F,\n      0xE0EC: 0x745F,\n      0xE0ED: 0x7459,\n      0xE0EE: 0x7441,\n      0xE0EF: 0x745C,\n      0xE0F0: 0x7469,\n      0xE0F1: 0x7470,\n      0xE0F2: 0x7463,\n      0xE0F3: 0x746A,\n      0xE0F4: 0x7476,\n      0xE0F5: 0x747E,\n      0xE0F6: 0x748B,\n      0xE0F7: 0x749E,\n      0xE0F8: 0x74A7,\n      0xE0F9: 0x74CA,\n      0xE0FA: 0x74CF,\n      0xE0FB: 0x74D4,\n      0xE0FC: 0x73F1,\n      0xE140: 0x74E0,\n      0xE141: 0x74E3,\n      0xE142: 0x74E7,\n      0xE143: 0x74E9,\n      0xE144: 0x74EE,\n      0xE145: 0x74F2,\n      0xE146: 0x74F0,\n      0xE147: 0x74F1,\n      0xE148: 0x74F8,\n      0xE149: 0x74F7,\n      0xE14A: 0x7504,\n      0xE14B: 0x7503,\n      0xE14C: 0x7505,\n      0xE14D: 0x750C,\n      0xE14E: 0x750E,\n      0xE14F: 0x750D,\n      0xE150: 0x7515,\n      0xE151: 0x7513,\n      0xE152: 0x751E,\n      0xE153: 0x7526,\n      0xE154: 0x752C,\n      0xE155: 0x753C,\n      0xE156: 0x7544,\n      0xE157: 0x754D,\n      0xE158: 0x754A,\n      0xE159: 0x7549,\n      0xE15A: 0x755B,\n      0xE15B: 0x7546,\n      0xE15C: 0x755A,\n      0xE15D: 0x7569,\n      0xE15E: 0x7564,\n      0xE15F: 0x7567,\n      0xE160: 0x756B,\n      0xE161: 0x756D,\n      0xE162: 0x7578,\n      0xE163: 0x7576,\n      0xE164: 0x7586,\n      0xE165: 0x7587,\n      0xE166: 0x7574,\n      0xE167: 0x758A,\n      0xE168: 0x7589,\n      0xE169: 0x7582,\n      0xE16A: 0x7594,\n      0xE16B: 0x759A,\n      0xE16C: 0x759D,\n      0xE16D: 0x75A5,\n      0xE16E: 0x75A3,\n      0xE16F: 0x75C2,\n      0xE170: 0x75B3,\n      0xE171: 0x75C3,\n      0xE172: 0x75B5,\n      0xE173: 0x75BD,\n      0xE174: 0x75B8,\n      0xE175: 0x75BC,\n      0xE176: 0x75B1,\n      0xE177: 0x75CD,\n      0xE178: 0x75CA,\n      0xE179: 0x75D2,\n      0xE17A: 0x75D9,\n      0xE17B: 0x75E3,\n      0xE17C: 0x75DE,\n      0xE17D: 0x75FE,\n      0xE17E: 0x75FF,\n      0xE180: 0x75FC,\n      0xE181: 0x7601,\n      0xE182: 0x75F0,\n      0xE183: 0x75FA,\n      0xE184: 0x75F2,\n      0xE185: 0x75F3,\n      0xE186: 0x760B,\n      0xE187: 0x760D,\n      0xE188: 0x7609,\n      0xE189: 0x761F,\n      0xE18A: 0x7627,\n      0xE18B: 0x7620,\n      0xE18C: 0x7621,\n      0xE18D: 0x7622,\n      0xE18E: 0x7624,\n      0xE18F: 0x7634,\n      0xE190: 0x7630,\n      0xE191: 0x763B,\n      0xE192: 0x7647,\n      0xE193: 0x7648,\n      0xE194: 0x7646,\n      0xE195: 0x765C,\n      0xE196: 0x7658,\n      0xE197: 0x7661,\n      0xE198: 0x7662,\n      0xE199: 0x7668,\n      0xE19A: 0x7669,\n      0xE19B: 0x766A,\n      0xE19C: 0x7667,\n      0xE19D: 0x766C,\n      0xE19E: 0x7670,\n      0xE19F: 0x7672,\n      0xE1A0: 0x7676,\n      0xE1A1: 0x7678,\n      0xE1A2: 0x767C,\n      0xE1A3: 0x7680,\n      0xE1A4: 0x7683,\n      0xE1A5: 0x7688,\n      0xE1A6: 0x768B,\n      0xE1A7: 0x768E,\n      0xE1A8: 0x7696,\n      0xE1A9: 0x7693,\n      0xE1AA: 0x7699,\n      0xE1AB: 0x769A,\n      0xE1AC: 0x76B0,\n      0xE1AD: 0x76B4,\n      0xE1AE: 0x76B8,\n      0xE1AF: 0x76B9,\n      0xE1B0: 0x76BA,\n      0xE1B1: 0x76C2,\n      0xE1B2: 0x76CD,\n      0xE1B3: 0x76D6,\n      0xE1B4: 0x76D2,\n      0xE1B5: 0x76DE,\n      0xE1B6: 0x76E1,\n      0xE1B7: 0x76E5,\n      0xE1B8: 0x76E7,\n      0xE1B9: 0x76EA,\n      0xE1BA: 0x862F,\n      0xE1BB: 0x76FB,\n      0xE1BC: 0x7708,\n      0xE1BD: 0x7707,\n      0xE1BE: 0x7704,\n      0xE1BF: 0x7729,\n      0xE1C0: 0x7724,\n      0xE1C1: 0x771E,\n      0xE1C2: 0x7725,\n      0xE1C3: 0x7726,\n      0xE1C4: 0x771B,\n      0xE1C5: 0x7737,\n      0xE1C6: 0x7738,\n      0xE1C7: 0x7747,\n      0xE1C8: 0x775A,\n      0xE1C9: 0x7768,\n      0xE1CA: 0x776B,\n      0xE1CB: 0x775B,\n      0xE1CC: 0x7765,\n      0xE1CD: 0x777F,\n      0xE1CE: 0x777E,\n      0xE1CF: 0x7779,\n      0xE1D0: 0x778E,\n      0xE1D1: 0x778B,\n      0xE1D2: 0x7791,\n      0xE1D3: 0x77A0,\n      0xE1D4: 0x779E,\n      0xE1D5: 0x77B0,\n      0xE1D6: 0x77B6,\n      0xE1D7: 0x77B9,\n      0xE1D8: 0x77BF,\n      0xE1D9: 0x77BC,\n      0xE1DA: 0x77BD,\n      0xE1DB: 0x77BB,\n      0xE1DC: 0x77C7,\n      0xE1DD: 0x77CD,\n      0xE1DE: 0x77D7,\n      0xE1DF: 0x77DA,\n      0xE1E0: 0x77DC,\n      0xE1E1: 0x77E3,\n      0xE1E2: 0x77EE,\n      0xE1E3: 0x77FC,\n      0xE1E4: 0x780C,\n      0xE1E5: 0x7812,\n      0xE1E6: 0x7926,\n      0xE1E7: 0x7820,\n      0xE1E8: 0x792A,\n      0xE1E9: 0x7845,\n      0xE1EA: 0x788E,\n      0xE1EB: 0x7874,\n      0xE1EC: 0x7886,\n      0xE1ED: 0x787C,\n      0xE1EE: 0x789A,\n      0xE1EF: 0x788C,\n      0xE1F0: 0x78A3,\n      0xE1F1: 0x78B5,\n      0xE1F2: 0x78AA,\n      0xE1F3: 0x78AF,\n      0xE1F4: 0x78D1,\n      0xE1F5: 0x78C6,\n      0xE1F6: 0x78CB,\n      0xE1F7: 0x78D4,\n      0xE1F8: 0x78BE,\n      0xE1F9: 0x78BC,\n      0xE1FA: 0x78C5,\n      0xE1FB: 0x78CA,\n      0xE1FC: 0x78EC,\n      0xE240: 0x78E7,\n      0xE241: 0x78DA,\n      0xE242: 0x78FD,\n      0xE243: 0x78F4,\n      0xE244: 0x7907,\n      0xE245: 0x7912,\n      0xE246: 0x7911,\n      0xE247: 0x7919,\n      0xE248: 0x792C,\n      0xE249: 0x792B,\n      0xE24A: 0x7940,\n      0xE24B: 0x7960,\n      0xE24C: 0x7957,\n      0xE24D: 0x795F,\n      0xE24E: 0x795A,\n      0xE24F: 0x7955,\n      0xE250: 0x7953,\n      0xE251: 0x797A,\n      0xE252: 0x797F,\n      0xE253: 0x798A,\n      0xE254: 0x799D,\n      0xE255: 0x79A7,\n      0xE256: 0x9F4B,\n      0xE257: 0x79AA,\n      0xE258: 0x79AE,\n      0xE259: 0x79B3,\n      0xE25A: 0x79B9,\n      0xE25B: 0x79BA,\n      0xE25C: 0x79C9,\n      0xE25D: 0x79D5,\n      0xE25E: 0x79E7,\n      0xE25F: 0x79EC,\n      0xE260: 0x79E1,\n      0xE261: 0x79E3,\n      0xE262: 0x7A08,\n      0xE263: 0x7A0D,\n      0xE264: 0x7A18,\n      0xE265: 0x7A19,\n      0xE266: 0x7A20,\n      0xE267: 0x7A1F,\n      0xE268: 0x7980,\n      0xE269: 0x7A31,\n      0xE26A: 0x7A3B,\n      0xE26B: 0x7A3E,\n      0xE26C: 0x7A37,\n      0xE26D: 0x7A43,\n      0xE26E: 0x7A57,\n      0xE26F: 0x7A49,\n      0xE270: 0x7A61,\n      0xE271: 0x7A62,\n      0xE272: 0x7A69,\n      0xE273: 0x9F9D,\n      0xE274: 0x7A70,\n      0xE275: 0x7A79,\n      0xE276: 0x7A7D,\n      0xE277: 0x7A88,\n      0xE278: 0x7A97,\n      0xE279: 0x7A95,\n      0xE27A: 0x7A98,\n      0xE27B: 0x7A96,\n      0xE27C: 0x7AA9,\n      0xE27D: 0x7AC8,\n      0xE27E: 0x7AB0,\n      0xE280: 0x7AB6,\n      0xE281: 0x7AC5,\n      0xE282: 0x7AC4,\n      0xE283: 0x7ABF,\n      0xE284: 0x9083,\n      0xE285: 0x7AC7,\n      0xE286: 0x7ACA,\n      0xE287: 0x7ACD,\n      0xE288: 0x7ACF,\n      0xE289: 0x7AD5,\n      0xE28A: 0x7AD3,\n      0xE28B: 0x7AD9,\n      0xE28C: 0x7ADA,\n      0xE28D: 0x7ADD,\n      0xE28E: 0x7AE1,\n      0xE28F: 0x7AE2,\n      0xE290: 0x7AE6,\n      0xE291: 0x7AED,\n      0xE292: 0x7AF0,\n      0xE293: 0x7B02,\n      0xE294: 0x7B0F,\n      0xE295: 0x7B0A,\n      0xE296: 0x7B06,\n      0xE297: 0x7B33,\n      0xE298: 0x7B18,\n      0xE299: 0x7B19,\n      0xE29A: 0x7B1E,\n      0xE29B: 0x7B35,\n      0xE29C: 0x7B28,\n      0xE29D: 0x7B36,\n      0xE29E: 0x7B50,\n      0xE29F: 0x7B7A,\n      0xE2A0: 0x7B04,\n      0xE2A1: 0x7B4D,\n      0xE2A2: 0x7B0B,\n      0xE2A3: 0x7B4C,\n      0xE2A4: 0x7B45,\n      0xE2A5: 0x7B75,\n      0xE2A6: 0x7B65,\n      0xE2A7: 0x7B74,\n      0xE2A8: 0x7B67,\n      0xE2A9: 0x7B70,\n      0xE2AA: 0x7B71,\n      0xE2AB: 0x7B6C,\n      0xE2AC: 0x7B6E,\n      0xE2AD: 0x7B9D,\n      0xE2AE: 0x7B98,\n      0xE2AF: 0x7B9F,\n      0xE2B0: 0x7B8D,\n      0xE2B1: 0x7B9C,\n      0xE2B2: 0x7B9A,\n      0xE2B3: 0x7B8B,\n      0xE2B4: 0x7B92,\n      0xE2B5: 0x7B8F,\n      0xE2B6: 0x7B5D,\n      0xE2B7: 0x7B99,\n      0xE2B8: 0x7BCB,\n      0xE2B9: 0x7BC1,\n      0xE2BA: 0x7BCC,\n      0xE2BB: 0x7BCF,\n      0xE2BC: 0x7BB4,\n      0xE2BD: 0x7BC6,\n      0xE2BE: 0x7BDD,\n      0xE2BF: 0x7BE9,\n      0xE2C0: 0x7C11,\n      0xE2C1: 0x7C14,\n      0xE2C2: 0x7BE6,\n      0xE2C3: 0x7BE5,\n      0xE2C4: 0x7C60,\n      0xE2C5: 0x7C00,\n      0xE2C6: 0x7C07,\n      0xE2C7: 0x7C13,\n      0xE2C8: 0x7BF3,\n      0xE2C9: 0x7BF7,\n      0xE2CA: 0x7C17,\n      0xE2CB: 0x7C0D,\n      0xE2CC: 0x7BF6,\n      0xE2CD: 0x7C23,\n      0xE2CE: 0x7C27,\n      0xE2CF: 0x7C2A,\n      0xE2D0: 0x7C1F,\n      0xE2D1: 0x7C37,\n      0xE2D2: 0x7C2B,\n      0xE2D3: 0x7C3D,\n      0xE2D4: 0x7C4C,\n      0xE2D5: 0x7C43,\n      0xE2D6: 0x7C54,\n      0xE2D7: 0x7C4F,\n      0xE2D8: 0x7C40,\n      0xE2D9: 0x7C50,\n      0xE2DA: 0x7C58,\n      0xE2DB: 0x7C5F,\n      0xE2DC: 0x7C64,\n      0xE2DD: 0x7C56,\n      0xE2DE: 0x7C65,\n      0xE2DF: 0x7C6C,\n      0xE2E0: 0x7C75,\n      0xE2E1: 0x7C83,\n      0xE2E2: 0x7C90,\n      0xE2E3: 0x7CA4,\n      0xE2E4: 0x7CAD,\n      0xE2E5: 0x7CA2,\n      0xE2E6: 0x7CAB,\n      0xE2E7: 0x7CA1,\n      0xE2E8: 0x7CA8,\n      0xE2E9: 0x7CB3,\n      0xE2EA: 0x7CB2,\n      0xE2EB: 0x7CB1,\n      0xE2EC: 0x7CAE,\n      0xE2ED: 0x7CB9,\n      0xE2EE: 0x7CBD,\n      0xE2EF: 0x7CC0,\n      0xE2F0: 0x7CC5,\n      0xE2F1: 0x7CC2,\n      0xE2F2: 0x7CD8,\n      0xE2F3: 0x7CD2,\n      0xE2F4: 0x7CDC,\n      0xE2F5: 0x7CE2,\n      0xE2F6: 0x9B3B,\n      0xE2F7: 0x7CEF,\n      0xE2F8: 0x7CF2,\n      0xE2F9: 0x7CF4,\n      0xE2FA: 0x7CF6,\n      0xE2FB: 0x7CFA,\n      0xE2FC: 0x7D06,\n      0xE340: 0x7D02,\n      0xE341: 0x7D1C,\n      0xE342: 0x7D15,\n      0xE343: 0x7D0A,\n      0xE344: 0x7D45,\n      0xE345: 0x7D4B,\n      0xE346: 0x7D2E,\n      0xE347: 0x7D32,\n      0xE348: 0x7D3F,\n      0xE349: 0x7D35,\n      0xE34A: 0x7D46,\n      0xE34B: 0x7D73,\n      0xE34C: 0x7D56,\n      0xE34D: 0x7D4E,\n      0xE34E: 0x7D72,\n      0xE34F: 0x7D68,\n      0xE350: 0x7D6E,\n      0xE351: 0x7D4F,\n      0xE352: 0x7D63,\n      0xE353: 0x7D93,\n      0xE354: 0x7D89,\n      0xE355: 0x7D5B,\n      0xE356: 0x7D8F,\n      0xE357: 0x7D7D,\n      0xE358: 0x7D9B,\n      0xE359: 0x7DBA,\n      0xE35A: 0x7DAE,\n      0xE35B: 0x7DA3,\n      0xE35C: 0x7DB5,\n      0xE35D: 0x7DC7,\n      0xE35E: 0x7DBD,\n      0xE35F: 0x7DAB,\n      0xE360: 0x7E3D,\n      0xE361: 0x7DA2,\n      0xE362: 0x7DAF,\n      0xE363: 0x7DDC,\n      0xE364: 0x7DB8,\n      0xE365: 0x7D9F,\n      0xE366: 0x7DB0,\n      0xE367: 0x7DD8,\n      0xE368: 0x7DDD,\n      0xE369: 0x7DE4,\n      0xE36A: 0x7DDE,\n      0xE36B: 0x7DFB,\n      0xE36C: 0x7DF2,\n      0xE36D: 0x7DE1,\n      0xE36E: 0x7E05,\n      0xE36F: 0x7E0A,\n      0xE370: 0x7E23,\n      0xE371: 0x7E21,\n      0xE372: 0x7E12,\n      0xE373: 0x7E31,\n      0xE374: 0x7E1F,\n      0xE375: 0x7E09,\n      0xE376: 0x7E0B,\n      0xE377: 0x7E22,\n      0xE378: 0x7E46,\n      0xE379: 0x7E66,\n      0xE37A: 0x7E3B,\n      0xE37B: 0x7E35,\n      0xE37C: 0x7E39,\n      0xE37D: 0x7E43,\n      0xE37E: 0x7E37,\n      0xE380: 0x7E32,\n      0xE381: 0x7E3A,\n      0xE382: 0x7E67,\n      0xE383: 0x7E5D,\n      0xE384: 0x7E56,\n      0xE385: 0x7E5E,\n      0xE386: 0x7E59,\n      0xE387: 0x7E5A,\n      0xE388: 0x7E79,\n      0xE389: 0x7E6A,\n      0xE38A: 0x7E69,\n      0xE38B: 0x7E7C,\n      0xE38C: 0x7E7B,\n      0xE38D: 0x7E83,\n      0xE38E: 0x7DD5,\n      0xE38F: 0x7E7D,\n      0xE390: 0x8FAE,\n      0xE391: 0x7E7F,\n      0xE392: 0x7E88,\n      0xE393: 0x7E89,\n      0xE394: 0x7E8C,\n      0xE395: 0x7E92,\n      0xE396: 0x7E90,\n      0xE397: 0x7E93,\n      0xE398: 0x7E94,\n      0xE399: 0x7E96,\n      0xE39A: 0x7E8E,\n      0xE39B: 0x7E9B,\n      0xE39C: 0x7E9C,\n      0xE39D: 0x7F38,\n      0xE39E: 0x7F3A,\n      0xE39F: 0x7F45,\n      0xE3A0: 0x7F4C,\n      0xE3A1: 0x7F4D,\n      0xE3A2: 0x7F4E,\n      0xE3A3: 0x7F50,\n      0xE3A4: 0x7F51,\n      0xE3A5: 0x7F55,\n      0xE3A6: 0x7F54,\n      0xE3A7: 0x7F58,\n      0xE3A8: 0x7F5F,\n      0xE3A9: 0x7F60,\n      0xE3AA: 0x7F68,\n      0xE3AB: 0x7F69,\n      0xE3AC: 0x7F67,\n      0xE3AD: 0x7F78,\n      0xE3AE: 0x7F82,\n      0xE3AF: 0x7F86,\n      0xE3B0: 0x7F83,\n      0xE3B1: 0x7F88,\n      0xE3B2: 0x7F87,\n      0xE3B3: 0x7F8C,\n      0xE3B4: 0x7F94,\n      0xE3B5: 0x7F9E,\n      0xE3B6: 0x7F9D,\n      0xE3B7: 0x7F9A,\n      0xE3B8: 0x7FA3,\n      0xE3B9: 0x7FAF,\n      0xE3BA: 0x7FB2,\n      0xE3BB: 0x7FB9,\n      0xE3BC: 0x7FAE,\n      0xE3BD: 0x7FB6,\n      0xE3BE: 0x7FB8,\n      0xE3BF: 0x8B71,\n      0xE3C0: 0x7FC5,\n      0xE3C1: 0x7FC6,\n      0xE3C2: 0x7FCA,\n      0xE3C3: 0x7FD5,\n      0xE3C4: 0x7FD4,\n      0xE3C5: 0x7FE1,\n      0xE3C6: 0x7FE6,\n      0xE3C7: 0x7FE9,\n      0xE3C8: 0x7FF3,\n      0xE3C9: 0x7FF9,\n      0xE3CA: 0x98DC,\n      0xE3CB: 0x8006,\n      0xE3CC: 0x8004,\n      0xE3CD: 0x800B,\n      0xE3CE: 0x8012,\n      0xE3CF: 0x8018,\n      0xE3D0: 0x8019,\n      0xE3D1: 0x801C,\n      0xE3D2: 0x8021,\n      0xE3D3: 0x8028,\n      0xE3D4: 0x803F,\n      0xE3D5: 0x803B,\n      0xE3D6: 0x804A,\n      0xE3D7: 0x8046,\n      0xE3D8: 0x8052,\n      0xE3D9: 0x8058,\n      0xE3DA: 0x805A,\n      0xE3DB: 0x805F,\n      0xE3DC: 0x8062,\n      0xE3DD: 0x8068,\n      0xE3DE: 0x8073,\n      0xE3DF: 0x8072,\n      0xE3E0: 0x8070,\n      0xE3E1: 0x8076,\n      0xE3E2: 0x8079,\n      0xE3E3: 0x807D,\n      0xE3E4: 0x807F,\n      0xE3E5: 0x8084,\n      0xE3E6: 0x8086,\n      0xE3E7: 0x8085,\n      0xE3E8: 0x809B,\n      0xE3E9: 0x8093,\n      0xE3EA: 0x809A,\n      0xE3EB: 0x80AD,\n      0xE3EC: 0x5190,\n      0xE3ED: 0x80AC,\n      0xE3EE: 0x80DB,\n      0xE3EF: 0x80E5,\n      0xE3F0: 0x80D9,\n      0xE3F1: 0x80DD,\n      0xE3F2: 0x80C4,\n      0xE3F3: 0x80DA,\n      0xE3F4: 0x80D6,\n      0xE3F5: 0x8109,\n      0xE3F6: 0x80EF,\n      0xE3F7: 0x80F1,\n      0xE3F8: 0x811B,\n      0xE3F9: 0x8129,\n      0xE3FA: 0x8123,\n      0xE3FB: 0x812F,\n      0xE3FC: 0x814B,\n      0xE440: 0x968B,\n      0xE441: 0x8146,\n      0xE442: 0x813E,\n      0xE443: 0x8153,\n      0xE444: 0x8151,\n      0xE445: 0x80FC,\n      0xE446: 0x8171,\n      0xE447: 0x816E,\n      0xE448: 0x8165,\n      0xE449: 0x8166,\n      0xE44A: 0x8174,\n      0xE44B: 0x8183,\n      0xE44C: 0x8188,\n      0xE44D: 0x818A,\n      0xE44E: 0x8180,\n      0xE44F: 0x8182,\n      0xE450: 0x81A0,\n      0xE451: 0x8195,\n      0xE452: 0x81A4,\n      0xE453: 0x81A3,\n      0xE454: 0x815F,\n      0xE455: 0x8193,\n      0xE456: 0x81A9,\n      0xE457: 0x81B0,\n      0xE458: 0x81B5,\n      0xE459: 0x81BE,\n      0xE45A: 0x81B8,\n      0xE45B: 0x81BD,\n      0xE45C: 0x81C0,\n      0xE45D: 0x81C2,\n      0xE45E: 0x81BA,\n      0xE45F: 0x81C9,\n      0xE460: 0x81CD,\n      0xE461: 0x81D1,\n      0xE462: 0x81D9,\n      0xE463: 0x81D8,\n      0xE464: 0x81C8,\n      0xE465: 0x81DA,\n      0xE466: 0x81DF,\n      0xE467: 0x81E0,\n      0xE468: 0x81E7,\n      0xE469: 0x81FA,\n      0xE46A: 0x81FB,\n      0xE46B: 0x81FE,\n      0xE46C: 0x8201,\n      0xE46D: 0x8202,\n      0xE46E: 0x8205,\n      0xE46F: 0x8207,\n      0xE470: 0x820A,\n      0xE471: 0x820D,\n      0xE472: 0x8210,\n      0xE473: 0x8216,\n      0xE474: 0x8229,\n      0xE475: 0x822B,\n      0xE476: 0x8238,\n      0xE477: 0x8233,\n      0xE478: 0x8240,\n      0xE479: 0x8259,\n      0xE47A: 0x8258,\n      0xE47B: 0x825D,\n      0xE47C: 0x825A,\n      0xE47D: 0x825F,\n      0xE47E: 0x8264,\n      0xE480: 0x8262,\n      0xE481: 0x8268,\n      0xE482: 0x826A,\n      0xE483: 0x826B,\n      0xE484: 0x822E,\n      0xE485: 0x8271,\n      0xE486: 0x8277,\n      0xE487: 0x8278,\n      0xE488: 0x827E,\n      0xE489: 0x828D,\n      0xE48A: 0x8292,\n      0xE48B: 0x82AB,\n      0xE48C: 0x829F,\n      0xE48D: 0x82BB,\n      0xE48E: 0x82AC,\n      0xE48F: 0x82E1,\n      0xE490: 0x82E3,\n      0xE491: 0x82DF,\n      0xE492: 0x82D2,\n      0xE493: 0x82F4,\n      0xE494: 0x82F3,\n      0xE495: 0x82FA,\n      0xE496: 0x8393,\n      0xE497: 0x8303,\n      0xE498: 0x82FB,\n      0xE499: 0x82F9,\n      0xE49A: 0x82DE,\n      0xE49B: 0x8306,\n      0xE49C: 0x82DC,\n      0xE49D: 0x8309,\n      0xE49E: 0x82D9,\n      0xE49F: 0x8335,\n      0xE4A0: 0x8334,\n      0xE4A1: 0x8316,\n      0xE4A2: 0x8332,\n      0xE4A3: 0x8331,\n      0xE4A4: 0x8340,\n      0xE4A5: 0x8339,\n      0xE4A6: 0x8350,\n      0xE4A7: 0x8345,\n      0xE4A8: 0x832F,\n      0xE4A9: 0x832B,\n      0xE4AA: 0x8317,\n      0xE4AB: 0x8318,\n      0xE4AC: 0x8385,\n      0xE4AD: 0x839A,\n      0xE4AE: 0x83AA,\n      0xE4AF: 0x839F,\n      0xE4B0: 0x83A2,\n      0xE4B1: 0x8396,\n      0xE4B2: 0x8323,\n      0xE4B3: 0x838E,\n      0xE4B4: 0x8387,\n      0xE4B5: 0x838A,\n      0xE4B6: 0x837C,\n      0xE4B7: 0x83B5,\n      0xE4B8: 0x8373,\n      0xE4B9: 0x8375,\n      0xE4BA: 0x83A0,\n      0xE4BB: 0x8389,\n      0xE4BC: 0x83A8,\n      0xE4BD: 0x83F4,\n      0xE4BE: 0x8413,\n      0xE4BF: 0x83EB,\n      0xE4C0: 0x83CE,\n      0xE4C1: 0x83FD,\n      0xE4C2: 0x8403,\n      0xE4C3: 0x83D8,\n      0xE4C4: 0x840B,\n      0xE4C5: 0x83C1,\n      0xE4C6: 0x83F7,\n      0xE4C7: 0x8407,\n      0xE4C8: 0x83E0,\n      0xE4C9: 0x83F2,\n      0xE4CA: 0x840D,\n      0xE4CB: 0x8422,\n      0xE4CC: 0x8420,\n      0xE4CD: 0x83BD,\n      0xE4CE: 0x8438,\n      0xE4CF: 0x8506,\n      0xE4D0: 0x83FB,\n      0xE4D1: 0x846D,\n      0xE4D2: 0x842A,\n      0xE4D3: 0x843C,\n      0xE4D4: 0x855A,\n      0xE4D5: 0x8484,\n      0xE4D6: 0x8477,\n      0xE4D7: 0x846B,\n      0xE4D8: 0x84AD,\n      0xE4D9: 0x846E,\n      0xE4DA: 0x8482,\n      0xE4DB: 0x8469,\n      0xE4DC: 0x8446,\n      0xE4DD: 0x842C,\n      0xE4DE: 0x846F,\n      0xE4DF: 0x8479,\n      0xE4E0: 0x8435,\n      0xE4E1: 0x84CA,\n      0xE4E2: 0x8462,\n      0xE4E3: 0x84B9,\n      0xE4E4: 0x84BF,\n      0xE4E5: 0x849F,\n      0xE4E6: 0x84D9,\n      0xE4E7: 0x84CD,\n      0xE4E8: 0x84BB,\n      0xE4E9: 0x84DA,\n      0xE4EA: 0x84D0,\n      0xE4EB: 0x84C1,\n      0xE4EC: 0x84C6,\n      0xE4ED: 0x84D6,\n      0xE4EE: 0x84A1,\n      0xE4EF: 0x8521,\n      0xE4F0: 0x84FF,\n      0xE4F1: 0x84F4,\n      0xE4F2: 0x8517,\n      0xE4F3: 0x8518,\n      0xE4F4: 0x852C,\n      0xE4F5: 0x851F,\n      0xE4F6: 0x8515,\n      0xE4F7: 0x8514,\n      0xE4F8: 0x84FC,\n      0xE4F9: 0x8540,\n      0xE4FA: 0x8563,\n      0xE4FB: 0x8558,\n      0xE4FC: 0x8548,\n      0xE540: 0x8541,\n      0xE541: 0x8602,\n      0xE542: 0x854B,\n      0xE543: 0x8555,\n      0xE544: 0x8580,\n      0xE545: 0x85A4,\n      0xE546: 0x8588,\n      0xE547: 0x8591,\n      0xE548: 0x858A,\n      0xE549: 0x85A8,\n      0xE54A: 0x856D,\n      0xE54B: 0x8594,\n      0xE54C: 0x859B,\n      0xE54D: 0x85EA,\n      0xE54E: 0x8587,\n      0xE54F: 0x859C,\n      0xE550: 0x8577,\n      0xE551: 0x857E,\n      0xE552: 0x8590,\n      0xE553: 0x85C9,\n      0xE554: 0x85BA,\n      0xE555: 0x85CF,\n      0xE556: 0x85B9,\n      0xE557: 0x85D0,\n      0xE558: 0x85D5,\n      0xE559: 0x85DD,\n      0xE55A: 0x85E5,\n      0xE55B: 0x85DC,\n      0xE55C: 0x85F9,\n      0xE55D: 0x860A,\n      0xE55E: 0x8613,\n      0xE55F: 0x860B,\n      0xE560: 0x85FE,\n      0xE561: 0x85FA,\n      0xE562: 0x8606,\n      0xE563: 0x8622,\n      0xE564: 0x861A,\n      0xE565: 0x8630,\n      0xE566: 0x863F,\n      0xE567: 0x864D,\n      0xE568: 0x4E55,\n      0xE569: 0x8654,\n      0xE56A: 0x865F,\n      0xE56B: 0x8667,\n      0xE56C: 0x8671,\n      0xE56D: 0x8693,\n      0xE56E: 0x86A3,\n      0xE56F: 0x86A9,\n      0xE570: 0x86AA,\n      0xE571: 0x868B,\n      0xE572: 0x868C,\n      0xE573: 0x86B6,\n      0xE574: 0x86AF,\n      0xE575: 0x86C4,\n      0xE576: 0x86C6,\n      0xE577: 0x86B0,\n      0xE578: 0x86C9,\n      0xE579: 0x8823,\n      0xE57A: 0x86AB,\n      0xE57B: 0x86D4,\n      0xE57C: 0x86DE,\n      0xE57D: 0x86E9,\n      0xE57E: 0x86EC,\n      0xE580: 0x86DF,\n      0xE581: 0x86DB,\n      0xE582: 0x86EF,\n      0xE583: 0x8712,\n      0xE584: 0x8706,\n      0xE585: 0x8708,\n      0xE586: 0x8700,\n      0xE587: 0x8703,\n      0xE588: 0x86FB,\n      0xE589: 0x8711,\n      0xE58A: 0x8709,\n      0xE58B: 0x870D,\n      0xE58C: 0x86F9,\n      0xE58D: 0x870A,\n      0xE58E: 0x8734,\n      0xE58F: 0x873F,\n      0xE590: 0x8737,\n      0xE591: 0x873B,\n      0xE592: 0x8725,\n      0xE593: 0x8729,\n      0xE594: 0x871A,\n      0xE595: 0x8760,\n      0xE596: 0x875F,\n      0xE597: 0x8778,\n      0xE598: 0x874C,\n      0xE599: 0x874E,\n      0xE59A: 0x8774,\n      0xE59B: 0x8757,\n      0xE59C: 0x8768,\n      0xE59D: 0x876E,\n      0xE59E: 0x8759,\n      0xE59F: 0x8753,\n      0xE5A0: 0x8763,\n      0xE5A1: 0x876A,\n      0xE5A2: 0x8805,\n      0xE5A3: 0x87A2,\n      0xE5A4: 0x879F,\n      0xE5A5: 0x8782,\n      0xE5A6: 0x87AF,\n      0xE5A7: 0x87CB,\n      0xE5A8: 0x87BD,\n      0xE5A9: 0x87C0,\n      0xE5AA: 0x87D0,\n      0xE5AB: 0x96D6,\n      0xE5AC: 0x87AB,\n      0xE5AD: 0x87C4,\n      0xE5AE: 0x87B3,\n      0xE5AF: 0x87C7,\n      0xE5B0: 0x87C6,\n      0xE5B1: 0x87BB,\n      0xE5B2: 0x87EF,\n      0xE5B3: 0x87F2,\n      0xE5B4: 0x87E0,\n      0xE5B5: 0x880F,\n      0xE5B6: 0x880D,\n      0xE5B7: 0x87FE,\n      0xE5B8: 0x87F6,\n      0xE5B9: 0x87F7,\n      0xE5BA: 0x880E,\n      0xE5BB: 0x87D2,\n      0xE5BC: 0x8811,\n      0xE5BD: 0x8816,\n      0xE5BE: 0x8815,\n      0xE5BF: 0x8822,\n      0xE5C0: 0x8821,\n      0xE5C1: 0x8831,\n      0xE5C2: 0x8836,\n      0xE5C3: 0x8839,\n      0xE5C4: 0x8827,\n      0xE5C5: 0x883B,\n      0xE5C6: 0x8844,\n      0xE5C7: 0x8842,\n      0xE5C8: 0x8852,\n      0xE5C9: 0x8859,\n      0xE5CA: 0x885E,\n      0xE5CB: 0x8862,\n      0xE5CC: 0x886B,\n      0xE5CD: 0x8881,\n      0xE5CE: 0x887E,\n      0xE5CF: 0x889E,\n      0xE5D0: 0x8875,\n      0xE5D1: 0x887D,\n      0xE5D2: 0x88B5,\n      0xE5D3: 0x8872,\n      0xE5D4: 0x8882,\n      0xE5D5: 0x8897,\n      0xE5D6: 0x8892,\n      0xE5D7: 0x88AE,\n      0xE5D8: 0x8899,\n      0xE5D9: 0x88A2,\n      0xE5DA: 0x888D,\n      0xE5DB: 0x88A4,\n      0xE5DC: 0x88B0,\n      0xE5DD: 0x88BF,\n      0xE5DE: 0x88B1,\n      0xE5DF: 0x88C3,\n      0xE5E0: 0x88C4,\n      0xE5E1: 0x88D4,\n      0xE5E2: 0x88D8,\n      0xE5E3: 0x88D9,\n      0xE5E4: 0x88DD,\n      0xE5E5: 0x88F9,\n      0xE5E6: 0x8902,\n      0xE5E7: 0x88FC,\n      0xE5E8: 0x88F4,\n      0xE5E9: 0x88E8,\n      0xE5EA: 0x88F2,\n      0xE5EB: 0x8904,\n      0xE5EC: 0x890C,\n      0xE5ED: 0x890A,\n      0xE5EE: 0x8913,\n      0xE5EF: 0x8943,\n      0xE5F0: 0x891E,\n      0xE5F1: 0x8925,\n      0xE5F2: 0x892A,\n      0xE5F3: 0x892B,\n      0xE5F4: 0x8941,\n      0xE5F5: 0x8944,\n      0xE5F6: 0x893B,\n      0xE5F7: 0x8936,\n      0xE5F8: 0x8938,\n      0xE5F9: 0x894C,\n      0xE5FA: 0x891D,\n      0xE5FB: 0x8960,\n      0xE5FC: 0x895E,\n      0xE640: 0x8966,\n      0xE641: 0x8964,\n      0xE642: 0x896D,\n      0xE643: 0x896A,\n      0xE644: 0x896F,\n      0xE645: 0x8974,\n      0xE646: 0x8977,\n      0xE647: 0x897E,\n      0xE648: 0x8983,\n      0xE649: 0x8988,\n      0xE64A: 0x898A,\n      0xE64B: 0x8993,\n      0xE64C: 0x8998,\n      0xE64D: 0x89A1,\n      0xE64E: 0x89A9,\n      0xE64F: 0x89A6,\n      0xE650: 0x89AC,\n      0xE651: 0x89AF,\n      0xE652: 0x89B2,\n      0xE653: 0x89BA,\n      0xE654: 0x89BD,\n      0xE655: 0x89BF,\n      0xE656: 0x89C0,\n      0xE657: 0x89DA,\n      0xE658: 0x89DC,\n      0xE659: 0x89DD,\n      0xE65A: 0x89E7,\n      0xE65B: 0x89F4,\n      0xE65C: 0x89F8,\n      0xE65D: 0x8A03,\n      0xE65E: 0x8A16,\n      0xE65F: 0x8A10,\n      0xE660: 0x8A0C,\n      0xE661: 0x8A1B,\n      0xE662: 0x8A1D,\n      0xE663: 0x8A25,\n      0xE664: 0x8A36,\n      0xE665: 0x8A41,\n      0xE666: 0x8A5B,\n      0xE667: 0x8A52,\n      0xE668: 0x8A46,\n      0xE669: 0x8A48,\n      0xE66A: 0x8A7C,\n      0xE66B: 0x8A6D,\n      0xE66C: 0x8A6C,\n      0xE66D: 0x8A62,\n      0xE66E: 0x8A85,\n      0xE66F: 0x8A82,\n      0xE670: 0x8A84,\n      0xE671: 0x8AA8,\n      0xE672: 0x8AA1,\n      0xE673: 0x8A91,\n      0xE674: 0x8AA5,\n      0xE675: 0x8AA6,\n      0xE676: 0x8A9A,\n      0xE677: 0x8AA3,\n      0xE678: 0x8AC4,\n      0xE679: 0x8ACD,\n      0xE67A: 0x8AC2,\n      0xE67B: 0x8ADA,\n      0xE67C: 0x8AEB,\n      0xE67D: 0x8AF3,\n      0xE67E: 0x8AE7,\n      0xE680: 0x8AE4,\n      0xE681: 0x8AF1,\n      0xE682: 0x8B14,\n      0xE683: 0x8AE0,\n      0xE684: 0x8AE2,\n      0xE685: 0x8AF7,\n      0xE686: 0x8ADE,\n      0xE687: 0x8ADB,\n      0xE688: 0x8B0C,\n      0xE689: 0x8B07,\n      0xE68A: 0x8B1A,\n      0xE68B: 0x8AE1,\n      0xE68C: 0x8B16,\n      0xE68D: 0x8B10,\n      0xE68E: 0x8B17,\n      0xE68F: 0x8B20,\n      0xE690: 0x8B33,\n      0xE691: 0x97AB,\n      0xE692: 0x8B26,\n      0xE693: 0x8B2B,\n      0xE694: 0x8B3E,\n      0xE695: 0x8B28,\n      0xE696: 0x8B41,\n      0xE697: 0x8B4C,\n      0xE698: 0x8B4F,\n      0xE699: 0x8B4E,\n      0xE69A: 0x8B49,\n      0xE69B: 0x8B56,\n      0xE69C: 0x8B5B,\n      0xE69D: 0x8B5A,\n      0xE69E: 0x8B6B,\n      0xE69F: 0x8B5F,\n      0xE6A0: 0x8B6C,\n      0xE6A1: 0x8B6F,\n      0xE6A2: 0x8B74,\n      0xE6A3: 0x8B7D,\n      0xE6A4: 0x8B80,\n      0xE6A5: 0x8B8C,\n      0xE6A6: 0x8B8E,\n      0xE6A7: 0x8B92,\n      0xE6A8: 0x8B93,\n      0xE6A9: 0x8B96,\n      0xE6AA: 0x8B99,\n      0xE6AB: 0x8B9A,\n      0xE6AC: 0x8C3A,\n      0xE6AD: 0x8C41,\n      0xE6AE: 0x8C3F,\n      0xE6AF: 0x8C48,\n      0xE6B0: 0x8C4C,\n      0xE6B1: 0x8C4E,\n      0xE6B2: 0x8C50,\n      0xE6B3: 0x8C55,\n      0xE6B4: 0x8C62,\n      0xE6B5: 0x8C6C,\n      0xE6B6: 0x8C78,\n      0xE6B7: 0x8C7A,\n      0xE6B8: 0x8C82,\n      0xE6B9: 0x8C89,\n      0xE6BA: 0x8C85,\n      0xE6BB: 0x8C8A,\n      0xE6BC: 0x8C8D,\n      0xE6BD: 0x8C8E,\n      0xE6BE: 0x8C94,\n      0xE6BF: 0x8C7C,\n      0xE6C0: 0x8C98,\n      0xE6C1: 0x621D,\n      0xE6C2: 0x8CAD,\n      0xE6C3: 0x8CAA,\n      0xE6C4: 0x8CBD,\n      0xE6C5: 0x8CB2,\n      0xE6C6: 0x8CB3,\n      0xE6C7: 0x8CAE,\n      0xE6C8: 0x8CB6,\n      0xE6C9: 0x8CC8,\n      0xE6CA: 0x8CC1,\n      0xE6CB: 0x8CE4,\n      0xE6CC: 0x8CE3,\n      0xE6CD: 0x8CDA,\n      0xE6CE: 0x8CFD,\n      0xE6CF: 0x8CFA,\n      0xE6D0: 0x8CFB,\n      0xE6D1: 0x8D04,\n      0xE6D2: 0x8D05,\n      0xE6D3: 0x8D0A,\n      0xE6D4: 0x8D07,\n      0xE6D5: 0x8D0F,\n      0xE6D6: 0x8D0D,\n      0xE6D7: 0x8D10,\n      0xE6D8: 0x9F4E,\n      0xE6D9: 0x8D13,\n      0xE6DA: 0x8CCD,\n      0xE6DB: 0x8D14,\n      0xE6DC: 0x8D16,\n      0xE6DD: 0x8D67,\n      0xE6DE: 0x8D6D,\n      0xE6DF: 0x8D71,\n      0xE6E0: 0x8D73,\n      0xE6E1: 0x8D81,\n      0xE6E2: 0x8D99,\n      0xE6E3: 0x8DC2,\n      0xE6E4: 0x8DBE,\n      0xE6E5: 0x8DBA,\n      0xE6E6: 0x8DCF,\n      0xE6E7: 0x8DDA,\n      0xE6E8: 0x8DD6,\n      0xE6E9: 0x8DCC,\n      0xE6EA: 0x8DDB,\n      0xE6EB: 0x8DCB,\n      0xE6EC: 0x8DEA,\n      0xE6ED: 0x8DEB,\n      0xE6EE: 0x8DDF,\n      0xE6EF: 0x8DE3,\n      0xE6F0: 0x8DFC,\n      0xE6F1: 0x8E08,\n      0xE6F2: 0x8E09,\n      0xE6F3: 0x8DFF,\n      0xE6F4: 0x8E1D,\n      0xE6F5: 0x8E1E,\n      0xE6F6: 0x8E10,\n      0xE6F7: 0x8E1F,\n      0xE6F8: 0x8E42,\n      0xE6F9: 0x8E35,\n      0xE6FA: 0x8E30,\n      0xE6FB: 0x8E34,\n      0xE6FC: 0x8E4A,\n      0xE740: 0x8E47,\n      0xE741: 0x8E49,\n      0xE742: 0x8E4C,\n      0xE743: 0x8E50,\n      0xE744: 0x8E48,\n      0xE745: 0x8E59,\n      0xE746: 0x8E64,\n      0xE747: 0x8E60,\n      0xE748: 0x8E2A,\n      0xE749: 0x8E63,\n      0xE74A: 0x8E55,\n      0xE74B: 0x8E76,\n      0xE74C: 0x8E72,\n      0xE74D: 0x8E7C,\n      0xE74E: 0x8E81,\n      0xE74F: 0x8E87,\n      0xE750: 0x8E85,\n      0xE751: 0x8E84,\n      0xE752: 0x8E8B,\n      0xE753: 0x8E8A,\n      0xE754: 0x8E93,\n      0xE755: 0x8E91,\n      0xE756: 0x8E94,\n      0xE757: 0x8E99,\n      0xE758: 0x8EAA,\n      0xE759: 0x8EA1,\n      0xE75A: 0x8EAC,\n      0xE75B: 0x8EB0,\n      0xE75C: 0x8EC6,\n      0xE75D: 0x8EB1,\n      0xE75E: 0x8EBE,\n      0xE75F: 0x8EC5,\n      0xE760: 0x8EC8,\n      0xE761: 0x8ECB,\n      0xE762: 0x8EDB,\n      0xE763: 0x8EE3,\n      0xE764: 0x8EFC,\n      0xE765: 0x8EFB,\n      0xE766: 0x8EEB,\n      0xE767: 0x8EFE,\n      0xE768: 0x8F0A,\n      0xE769: 0x8F05,\n      0xE76A: 0x8F15,\n      0xE76B: 0x8F12,\n      0xE76C: 0x8F19,\n      0xE76D: 0x8F13,\n      0xE76E: 0x8F1C,\n      0xE76F: 0x8F1F,\n      0xE770: 0x8F1B,\n      0xE771: 0x8F0C,\n      0xE772: 0x8F26,\n      0xE773: 0x8F33,\n      0xE774: 0x8F3B,\n      0xE775: 0x8F39,\n      0xE776: 0x8F45,\n      0xE777: 0x8F42,\n      0xE778: 0x8F3E,\n      0xE779: 0x8F4C,\n      0xE77A: 0x8F49,\n      0xE77B: 0x8F46,\n      0xE77C: 0x8F4E,\n      0xE77D: 0x8F57,\n      0xE77E: 0x8F5C,\n      0xE780: 0x8F62,\n      0xE781: 0x8F63,\n      0xE782: 0x8F64,\n      0xE783: 0x8F9C,\n      0xE784: 0x8F9F,\n      0xE785: 0x8FA3,\n      0xE786: 0x8FAD,\n      0xE787: 0x8FAF,\n      0xE788: 0x8FB7,\n      0xE789: 0x8FDA,\n      0xE78A: 0x8FE5,\n      0xE78B: 0x8FE2,\n      0xE78C: 0x8FEA,\n      0xE78D: 0x8FEF,\n      0xE78E: 0x9087,\n      0xE78F: 0x8FF4,\n      0xE790: 0x9005,\n      0xE791: 0x8FF9,\n      0xE792: 0x8FFA,\n      0xE793: 0x9011,\n      0xE794: 0x9015,\n      0xE795: 0x9021,\n      0xE796: 0x900D,\n      0xE797: 0x901E,\n      0xE798: 0x9016,\n      0xE799: 0x900B,\n      0xE79A: 0x9027,\n      0xE79B: 0x9036,\n      0xE79C: 0x9035,\n      0xE79D: 0x9039,\n      0xE79E: 0x8FF8,\n      0xE79F: 0x904F,\n      0xE7A0: 0x9050,\n      0xE7A1: 0x9051,\n      0xE7A2: 0x9052,\n      0xE7A3: 0x900E,\n      0xE7A4: 0x9049,\n      0xE7A5: 0x903E,\n      0xE7A6: 0x9056,\n      0xE7A7: 0x9058,\n      0xE7A8: 0x905E,\n      0xE7A9: 0x9068,\n      0xE7AA: 0x906F,\n      0xE7AB: 0x9076,\n      0xE7AC: 0x96A8,\n      0xE7AD: 0x9072,\n      0xE7AE: 0x9082,\n      0xE7AF: 0x907D,\n      0xE7B0: 0x9081,\n      0xE7B1: 0x9080,\n      0xE7B2: 0x908A,\n      0xE7B3: 0x9089,\n      0xE7B4: 0x908F,\n      0xE7B5: 0x90A8,\n      0xE7B6: 0x90AF,\n      0xE7B7: 0x90B1,\n      0xE7B8: 0x90B5,\n      0xE7B9: 0x90E2,\n      0xE7BA: 0x90E4,\n      0xE7BB: 0x6248,\n      0xE7BC: 0x90DB,\n      0xE7BD: 0x9102,\n      0xE7BE: 0x9112,\n      0xE7BF: 0x9119,\n      0xE7C0: 0x9132,\n      0xE7C1: 0x9130,\n      0xE7C2: 0x914A,\n      0xE7C3: 0x9156,\n      0xE7C4: 0x9158,\n      0xE7C5: 0x9163,\n      0xE7C6: 0x9165,\n      0xE7C7: 0x9169,\n      0xE7C8: 0x9173,\n      0xE7C9: 0x9172,\n      0xE7CA: 0x918B,\n      0xE7CB: 0x9189,\n      0xE7CC: 0x9182,\n      0xE7CD: 0x91A2,\n      0xE7CE: 0x91AB,\n      0xE7CF: 0x91AF,\n      0xE7D0: 0x91AA,\n      0xE7D1: 0x91B5,\n      0xE7D2: 0x91B4,\n      0xE7D3: 0x91BA,\n      0xE7D4: 0x91C0,\n      0xE7D5: 0x91C1,\n      0xE7D6: 0x91C9,\n      0xE7D7: 0x91CB,\n      0xE7D8: 0x91D0,\n      0xE7D9: 0x91D6,\n      0xE7DA: 0x91DF,\n      0xE7DB: 0x91E1,\n      0xE7DC: 0x91DB,\n      0xE7DD: 0x91FC,\n      0xE7DE: 0x91F5,\n      0xE7DF: 0x91F6,\n      0xE7E0: 0x921E,\n      0xE7E1: 0x91FF,\n      0xE7E2: 0x9214,\n      0xE7E3: 0x922C,\n      0xE7E4: 0x9215,\n      0xE7E5: 0x9211,\n      0xE7E6: 0x925E,\n      0xE7E7: 0x9257,\n      0xE7E8: 0x9245,\n      0xE7E9: 0x9249,\n      0xE7EA: 0x9264,\n      0xE7EB: 0x9248,\n      0xE7EC: 0x9295,\n      0xE7ED: 0x923F,\n      0xE7EE: 0x924B,\n      0xE7EF: 0x9250,\n      0xE7F0: 0x929C,\n      0xE7F1: 0x9296,\n      0xE7F2: 0x9293,\n      0xE7F3: 0x929B,\n      0xE7F4: 0x925A,\n      0xE7F5: 0x92CF,\n      0xE7F6: 0x92B9,\n      0xE7F7: 0x92B7,\n      0xE7F8: 0x92E9,\n      0xE7F9: 0x930F,\n      0xE7FA: 0x92FA,\n      0xE7FB: 0x9344,\n      0xE7FC: 0x932E,\n      0xE840: 0x9319,\n      0xE841: 0x9322,\n      0xE842: 0x931A,\n      0xE843: 0x9323,\n      0xE844: 0x933A,\n      0xE845: 0x9335,\n      0xE846: 0x933B,\n      0xE847: 0x935C,\n      0xE848: 0x9360,\n      0xE849: 0x937C,\n      0xE84A: 0x936E,\n      0xE84B: 0x9356,\n      0xE84C: 0x93B0,\n      0xE84D: 0x93AC,\n      0xE84E: 0x93AD,\n      0xE84F: 0x9394,\n      0xE850: 0x93B9,\n      0xE851: 0x93D6,\n      0xE852: 0x93D7,\n      0xE853: 0x93E8,\n      0xE854: 0x93E5,\n      0xE855: 0x93D8,\n      0xE856: 0x93C3,\n      0xE857: 0x93DD,\n      0xE858: 0x93D0,\n      0xE859: 0x93C8,\n      0xE85A: 0x93E4,\n      0xE85B: 0x941A,\n      0xE85C: 0x9414,\n      0xE85D: 0x9413,\n      0xE85E: 0x9403,\n      0xE85F: 0x9407,\n      0xE860: 0x9410,\n      0xE861: 0x9436,\n      0xE862: 0x942B,\n      0xE863: 0x9435,\n      0xE864: 0x9421,\n      0xE865: 0x943A,\n      0xE866: 0x9441,\n      0xE867: 0x9452,\n      0xE868: 0x9444,\n      0xE869: 0x945B,\n      0xE86A: 0x9460,\n      0xE86B: 0x9462,\n      0xE86C: 0x945E,\n      0xE86D: 0x946A,\n      0xE86E: 0x9229,\n      0xE86F: 0x9470,\n      0xE870: 0x9475,\n      0xE871: 0x9477,\n      0xE872: 0x947D,\n      0xE873: 0x945A,\n      0xE874: 0x947C,\n      0xE875: 0x947E,\n      0xE876: 0x9481,\n      0xE877: 0x947F,\n      0xE878: 0x9582,\n      0xE879: 0x9587,\n      0xE87A: 0x958A,\n      0xE87B: 0x9594,\n      0xE87C: 0x9596,\n      0xE87D: 0x9598,\n      0xE87E: 0x9599,\n      0xE880: 0x95A0,\n      0xE881: 0x95A8,\n      0xE882: 0x95A7,\n      0xE883: 0x95AD,\n      0xE884: 0x95BC,\n      0xE885: 0x95BB,\n      0xE886: 0x95B9,\n      0xE887: 0x95BE,\n      0xE888: 0x95CA,\n      0xE889: 0x6FF6,\n      0xE88A: 0x95C3,\n      0xE88B: 0x95CD,\n      0xE88C: 0x95CC,\n      0xE88D: 0x95D5,\n      0xE88E: 0x95D4,\n      0xE88F: 0x95D6,\n      0xE890: 0x95DC,\n      0xE891: 0x95E1,\n      0xE892: 0x95E5,\n      0xE893: 0x95E2,\n      0xE894: 0x9621,\n      0xE895: 0x9628,\n      0xE896: 0x962E,\n      0xE897: 0x962F,\n      0xE898: 0x9642,\n      0xE899: 0x964C,\n      0xE89A: 0x964F,\n      0xE89B: 0x964B,\n      0xE89C: 0x9677,\n      0xE89D: 0x965C,\n      0xE89E: 0x965E,\n      0xE89F: 0x965D,\n      0xE8A0: 0x965F,\n      0xE8A1: 0x9666,\n      0xE8A2: 0x9672,\n      0xE8A3: 0x966C,\n      0xE8A4: 0x968D,\n      0xE8A5: 0x9698,\n      0xE8A6: 0x9695,\n      0xE8A7: 0x9697,\n      0xE8A8: 0x96AA,\n      0xE8A9: 0x96A7,\n      0xE8AA: 0x96B1,\n      0xE8AB: 0x96B2,\n      0xE8AC: 0x96B0,\n      0xE8AD: 0x96B4,\n      0xE8AE: 0x96B6,\n      0xE8AF: 0x96B8,\n      0xE8B0: 0x96B9,\n      0xE8B1: 0x96CE,\n      0xE8B2: 0x96CB,\n      0xE8B3: 0x96C9,\n      0xE8B4: 0x96CD,\n      0xE8B5: 0x894D,\n      0xE8B6: 0x96DC,\n      0xE8B7: 0x970D,\n      0xE8B8: 0x96D5,\n      0xE8B9: 0x96F9,\n      0xE8BA: 0x9704,\n      0xE8BB: 0x9706,\n      0xE8BC: 0x9708,\n      0xE8BD: 0x9713,\n      0xE8BE: 0x970E,\n      0xE8BF: 0x9711,\n      0xE8C0: 0x970F,\n      0xE8C1: 0x9716,\n      0xE8C2: 0x9719,\n      0xE8C3: 0x9724,\n      0xE8C4: 0x972A,\n      0xE8C5: 0x9730,\n      0xE8C6: 0x9739,\n      0xE8C7: 0x973D,\n      0xE8C8: 0x973E,\n      0xE8C9: 0x9744,\n      0xE8CA: 0x9746,\n      0xE8CB: 0x9748,\n      0xE8CC: 0x9742,\n      0xE8CD: 0x9749,\n      0xE8CE: 0x975C,\n      0xE8CF: 0x9760,\n      0xE8D0: 0x9764,\n      0xE8D1: 0x9766,\n      0xE8D2: 0x9768,\n      0xE8D3: 0x52D2,\n      0xE8D4: 0x976B,\n      0xE8D5: 0x9771,\n      0xE8D6: 0x9779,\n      0xE8D7: 0x9785,\n      0xE8D8: 0x977C,\n      0xE8D9: 0x9781,\n      0xE8DA: 0x977A,\n      0xE8DB: 0x9786,\n      0xE8DC: 0x978B,\n      0xE8DD: 0x978F,\n      0xE8DE: 0x9790,\n      0xE8DF: 0x979C,\n      0xE8E0: 0x97A8,\n      0xE8E1: 0x97A6,\n      0xE8E2: 0x97A3,\n      0xE8E3: 0x97B3,\n      0xE8E4: 0x97B4,\n      0xE8E5: 0x97C3,\n      0xE8E6: 0x97C6,\n      0xE8E7: 0x97C8,\n      0xE8E8: 0x97CB,\n      0xE8E9: 0x97DC,\n      0xE8EA: 0x97ED,\n      0xE8EB: 0x9F4F,\n      0xE8EC: 0x97F2,\n      0xE8ED: 0x7ADF,\n      0xE8EE: 0x97F6,\n      0xE8EF: 0x97F5,\n      0xE8F0: 0x980F,\n      0xE8F1: 0x980C,\n      0xE8F2: 0x9838,\n      0xE8F3: 0x9824,\n      0xE8F4: 0x9821,\n      0xE8F5: 0x9837,\n      0xE8F6: 0x983D,\n      0xE8F7: 0x9846,\n      0xE8F8: 0x984F,\n      0xE8F9: 0x984B,\n      0xE8FA: 0x986B,\n      0xE8FB: 0x986F,\n      0xE8FC: 0x9870,\n      0xE940: 0x9871,\n      0xE941: 0x9874,\n      0xE942: 0x9873,\n      0xE943: 0x98AA,\n      0xE944: 0x98AF,\n      0xE945: 0x98B1,\n      0xE946: 0x98B6,\n      0xE947: 0x98C4,\n      0xE948: 0x98C3,\n      0xE949: 0x98C6,\n      0xE94A: 0x98E9,\n      0xE94B: 0x98EB,\n      0xE94C: 0x9903,\n      0xE94D: 0x9909,\n      0xE94E: 0x9912,\n      0xE94F: 0x9914,\n      0xE950: 0x9918,\n      0xE951: 0x9921,\n      0xE952: 0x991D,\n      0xE953: 0x991E,\n      0xE954: 0x9924,\n      0xE955: 0x9920,\n      0xE956: 0x992C,\n      0xE957: 0x992E,\n      0xE958: 0x993D,\n      0xE959: 0x993E,\n      0xE95A: 0x9942,\n      0xE95B: 0x9949,\n      0xE95C: 0x9945,\n      0xE95D: 0x9950,\n      0xE95E: 0x994B,\n      0xE95F: 0x9951,\n      0xE960: 0x9952,\n      0xE961: 0x994C,\n      0xE962: 0x9955,\n      0xE963: 0x9997,\n      0xE964: 0x9998,\n      0xE965: 0x99A5,\n      0xE966: 0x99AD,\n      0xE967: 0x99AE,\n      0xE968: 0x99BC,\n      0xE969: 0x99DF,\n      0xE96A: 0x99DB,\n      0xE96B: 0x99DD,\n      0xE96C: 0x99D8,\n      0xE96D: 0x99D1,\n      0xE96E: 0x99ED,\n      0xE96F: 0x99EE,\n      0xE970: 0x99F1,\n      0xE971: 0x99F2,\n      0xE972: 0x99FB,\n      0xE973: 0x99F8,\n      0xE974: 0x9A01,\n      0xE975: 0x9A0F,\n      0xE976: 0x9A05,\n      0xE977: 0x99E2,\n      0xE978: 0x9A19,\n      0xE979: 0x9A2B,\n      0xE97A: 0x9A37,\n      0xE97B: 0x9A45,\n      0xE97C: 0x9A42,\n      0xE97D: 0x9A40,\n      0xE97E: 0x9A43,\n      0xE980: 0x9A3E,\n      0xE981: 0x9A55,\n      0xE982: 0x9A4D,\n      0xE983: 0x9A5B,\n      0xE984: 0x9A57,\n      0xE985: 0x9A5F,\n      0xE986: 0x9A62,\n      0xE987: 0x9A65,\n      0xE988: 0x9A64,\n      0xE989: 0x9A69,\n      0xE98A: 0x9A6B,\n      0xE98B: 0x9A6A,\n      0xE98C: 0x9AAD,\n      0xE98D: 0x9AB0,\n      0xE98E: 0x9ABC,\n      0xE98F: 0x9AC0,\n      0xE990: 0x9ACF,\n      0xE991: 0x9AD1,\n      0xE992: 0x9AD3,\n      0xE993: 0x9AD4,\n      0xE994: 0x9ADE,\n      0xE995: 0x9ADF,\n      0xE996: 0x9AE2,\n      0xE997: 0x9AE3,\n      0xE998: 0x9AE6,\n      0xE999: 0x9AEF,\n      0xE99A: 0x9AEB,\n      0xE99B: 0x9AEE,\n      0xE99C: 0x9AF4,\n      0xE99D: 0x9AF1,\n      0xE99E: 0x9AF7,\n      0xE99F: 0x9AFB,\n      0xE9A0: 0x9B06,\n      0xE9A1: 0x9B18,\n      0xE9A2: 0x9B1A,\n      0xE9A3: 0x9B1F,\n      0xE9A4: 0x9B22,\n      0xE9A5: 0x9B23,\n      0xE9A6: 0x9B25,\n      0xE9A7: 0x9B27,\n      0xE9A8: 0x9B28,\n      0xE9A9: 0x9B29,\n      0xE9AA: 0x9B2A,\n      0xE9AB: 0x9B2E,\n      0xE9AC: 0x9B2F,\n      0xE9AD: 0x9B32,\n      0xE9AE: 0x9B44,\n      0xE9AF: 0x9B43,\n      0xE9B0: 0x9B4F,\n      0xE9B1: 0x9B4D,\n      0xE9B2: 0x9B4E,\n      0xE9B3: 0x9B51,\n      0xE9B4: 0x9B58,\n      0xE9B5: 0x9B74,\n      0xE9B6: 0x9B93,\n      0xE9B7: 0x9B83,\n      0xE9B8: 0x9B91,\n      0xE9B9: 0x9B96,\n      0xE9BA: 0x9B97,\n      0xE9BB: 0x9B9F,\n      0xE9BC: 0x9BA0,\n      0xE9BD: 0x9BA8,\n      0xE9BE: 0x9BB4,\n      0xE9BF: 0x9BC0,\n      0xE9C0: 0x9BCA,\n      0xE9C1: 0x9BB9,\n      0xE9C2: 0x9BC6,\n      0xE9C3: 0x9BCF,\n      0xE9C4: 0x9BD1,\n      0xE9C5: 0x9BD2,\n      0xE9C6: 0x9BE3,\n      0xE9C7: 0x9BE2,\n      0xE9C8: 0x9BE4,\n      0xE9C9: 0x9BD4,\n      0xE9CA: 0x9BE1,\n      0xE9CB: 0x9C3A,\n      0xE9CC: 0x9BF2,\n      0xE9CD: 0x9BF1,\n      0xE9CE: 0x9BF0,\n      0xE9CF: 0x9C15,\n      0xE9D0: 0x9C14,\n      0xE9D1: 0x9C09,\n      0xE9D2: 0x9C13,\n      0xE9D3: 0x9C0C,\n      0xE9D4: 0x9C06,\n      0xE9D5: 0x9C08,\n      0xE9D6: 0x9C12,\n      0xE9D7: 0x9C0A,\n      0xE9D8: 0x9C04,\n      0xE9D9: 0x9C2E,\n      0xE9DA: 0x9C1B,\n      0xE9DB: 0x9C25,\n      0xE9DC: 0x9C24,\n      0xE9DD: 0x9C21,\n      0xE9DE: 0x9C30,\n      0xE9DF: 0x9C47,\n      0xE9E0: 0x9C32,\n      0xE9E1: 0x9C46,\n      0xE9E2: 0x9C3E,\n      0xE9E3: 0x9C5A,\n      0xE9E4: 0x9C60,\n      0xE9E5: 0x9C67,\n      0xE9E6: 0x9C76,\n      0xE9E7: 0x9C78,\n      0xE9E8: 0x9CE7,\n      0xE9E9: 0x9CEC,\n      0xE9EA: 0x9CF0,\n      0xE9EB: 0x9D09,\n      0xE9EC: 0x9D08,\n      0xE9ED: 0x9CEB,\n      0xE9EE: 0x9D03,\n      0xE9EF: 0x9D06,\n      0xE9F0: 0x9D2A,\n      0xE9F1: 0x9D26,\n      0xE9F2: 0x9DAF,\n      0xE9F3: 0x9D23,\n      0xE9F4: 0x9D1F,\n      0xE9F5: 0x9D44,\n      0xE9F6: 0x9D15,\n      0xE9F7: 0x9D12,\n      0xE9F8: 0x9D41,\n      0xE9F9: 0x9D3F,\n      0xE9FA: 0x9D3E,\n      0xE9FB: 0x9D46,\n      0xE9FC: 0x9D48,\n      0xEA40: 0x9D5D,\n      0xEA41: 0x9D5E,\n      0xEA42: 0x9D64,\n      0xEA43: 0x9D51,\n      0xEA44: 0x9D50,\n      0xEA45: 0x9D59,\n      0xEA46: 0x9D72,\n      0xEA47: 0x9D89,\n      0xEA48: 0x9D87,\n      0xEA49: 0x9DAB,\n      0xEA4A: 0x9D6F,\n      0xEA4B: 0x9D7A,\n      0xEA4C: 0x9D9A,\n      0xEA4D: 0x9DA4,\n      0xEA4E: 0x9DA9,\n      0xEA4F: 0x9DB2,\n      0xEA50: 0x9DC4,\n      0xEA51: 0x9DC1,\n      0xEA52: 0x9DBB,\n      0xEA53: 0x9DB8,\n      0xEA54: 0x9DBA,\n      0xEA55: 0x9DC6,\n      0xEA56: 0x9DCF,\n      0xEA57: 0x9DC2,\n      0xEA58: 0x9DD9,\n      0xEA59: 0x9DD3,\n      0xEA5A: 0x9DF8,\n      0xEA5B: 0x9DE6,\n      0xEA5C: 0x9DED,\n      0xEA5D: 0x9DEF,\n      0xEA5E: 0x9DFD,\n      0xEA5F: 0x9E1A,\n      0xEA60: 0x9E1B,\n      0xEA61: 0x9E1E,\n      0xEA62: 0x9E75,\n      0xEA63: 0x9E79,\n      0xEA64: 0x9E7D,\n      0xEA65: 0x9E81,\n      0xEA66: 0x9E88,\n      0xEA67: 0x9E8B,\n      0xEA68: 0x9E8C,\n      0xEA69: 0x9E92,\n      0xEA6A: 0x9E95,\n      0xEA6B: 0x9E91,\n      0xEA6C: 0x9E9D,\n      0xEA6D: 0x9EA5,\n      0xEA6E: 0x9EA9,\n      0xEA6F: 0x9EB8,\n      0xEA70: 0x9EAA,\n      0xEA71: 0x9EAD,\n      0xEA72: 0x9761,\n      0xEA73: 0x9ECC,\n      0xEA74: 0x9ECE,\n      0xEA75: 0x9ECF,\n      0xEA76: 0x9ED0,\n      0xEA77: 0x9ED4,\n      0xEA78: 0x9EDC,\n      0xEA79: 0x9EDE,\n      0xEA7A: 0x9EDD,\n      0xEA7B: 0x9EE0,\n      0xEA7C: 0x9EE5,\n      0xEA7D: 0x9EE8,\n      0xEA7E: 0x9EEF,\n      0xEA80: 0x9EF4,\n      0xEA81: 0x9EF6,\n      0xEA82: 0x9EF7,\n      0xEA83: 0x9EF9,\n      0xEA84: 0x9EFB,\n      0xEA85: 0x9EFC,\n      0xEA86: 0x9EFD,\n      0xEA87: 0x9F07,\n      0xEA88: 0x9F08,\n      0xEA89: 0x76B7,\n      0xEA8A: 0x9F15,\n      0xEA8B: 0x9F21,\n      0xEA8C: 0x9F2C,\n      0xEA8D: 0x9F3E,\n      0xEA8E: 0x9F4A,\n      0xEA8F: 0x9F52,\n      0xEA90: 0x9F54,\n      0xEA91: 0x9F63,\n      0xEA92: 0x9F5F,\n      0xEA93: 0x9F60,\n      0xEA94: 0x9F61,\n      0xEA95: 0x9F66,\n      0xEA96: 0x9F67,\n      0xEA97: 0x9F6C,\n      0xEA98: 0x9F6A,\n      0xEA99: 0x9F77,\n      0xEA9A: 0x9F72,\n      0xEA9B: 0x9F76,\n      0xEA9C: 0x9F95,\n      0xEA9D: 0x9F9C,\n      0xEA9E: 0x9FA0,\n      0xEA9F: 0x582F,\n      0xEAA0: 0x69C7,\n      0xEAA1: 0x9059,\n      0xEAA2: 0x7464,\n      0xEAA3: 0x51DC,\n      0xEAA4: 0x7199\n    };\n\n    /***/\n  }), ( /* 9 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var GenericGF_1 = __webpack_require__(1);\n    var GenericGFPoly_1 = __webpack_require__(2);\n    function runEuclideanAlgorithm(field, a, b, R) {\n      var _a;\n      // Assume a's degree is >= b's\n      if (a.degree() < b.degree()) {\n        _a = [b, a], a = _a[0], b = _a[1];\n      }\n      var rLast = a;\n      var r = b;\n      var tLast = field.zero;\n      var t = field.one;\n      // Run Euclidean algorithm until r's degree is less than R/2\n      while (r.degree() >= R / 2) {\n        var rLastLast = rLast;\n        var tLastLast = tLast;\n        rLast = r;\n        tLast = t;\n        // Divide rLastLast by rLast, with quotient in q and remainder in r\n        if (rLast.isZero()) {\n          // Euclidean algorithm already terminated?\n          return null;\n        }\n        r = rLastLast;\n        var q = field.zero;\n        var denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n        var dltInverse = field.inverse(denominatorLeadingTerm);\n        while (r.degree() >= rLast.degree() && !r.isZero()) {\n          var degreeDiff = r.degree() - rLast.degree();\n          var scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n          q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n          r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n        }\n        t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n        if (r.degree() >= rLast.degree()) {\n          return null;\n        }\n      }\n      var sigmaTildeAtZero = t.getCoefficient(0);\n      if (sigmaTildeAtZero === 0) {\n        return null;\n      }\n      var inverse = field.inverse(sigmaTildeAtZero);\n      return [t.multiply(inverse), r.multiply(inverse)];\n    }\n    function findErrorLocations(field, errorLocator) {\n      // This is a direct application of Chien's search\n      var numErrors = errorLocator.degree();\n      if (numErrors === 1) {\n        return [errorLocator.getCoefficient(1)];\n      }\n      var result = new Array(numErrors);\n      var errorCount = 0;\n      for (var i = 1; i < field.size && errorCount < numErrors; i++) {\n        if (errorLocator.evaluateAt(i) === 0) {\n          result[errorCount] = field.inverse(i);\n          errorCount++;\n        }\n      }\n      if (errorCount !== numErrors) {\n        return null;\n      }\n      return result;\n    }\n    function findErrorMagnitudes(field, errorEvaluator, errorLocations) {\n      // This is directly applying Forney's Formula\n      var s = errorLocations.length;\n      var result = new Array(s);\n      for (var i = 0; i < s; i++) {\n        var xiInverse = field.inverse(errorLocations[i]);\n        var denominator = 1;\n        for (var j = 0; j < s; j++) {\n          if (i !== j) {\n            denominator = field.multiply(denominator, GenericGF_1.addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n          }\n        }\n        result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n        if (field.generatorBase !== 0) {\n          result[i] = field.multiply(result[i], xiInverse);\n        }\n      }\n      return result;\n    }\n    function decode(bytes, twoS) {\n      var outputBytes = new Uint8ClampedArray(bytes.length);\n      outputBytes.set(bytes);\n      var field = new GenericGF_1.default(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n      var poly = new GenericGFPoly_1.default(field, outputBytes);\n      var syndromeCoefficients = new Uint8ClampedArray(twoS);\n      var error = false;\n      for (var s = 0; s < twoS; s++) {\n        var evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n        syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n        if (evaluation !== 0) {\n          error = true;\n        }\n      }\n      if (!error) {\n        return outputBytes;\n      }\n      var syndrome = new GenericGFPoly_1.default(field, syndromeCoefficients);\n      var sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n      if (sigmaOmega === null) {\n        return null;\n      }\n      var errorLocations = findErrorLocations(field, sigmaOmega[0]);\n      if (errorLocations == null) {\n        return null;\n      }\n      var errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n      for (var i = 0; i < errorLocations.length; i++) {\n        var position = outputBytes.length - 1 - field.log(errorLocations[i]);\n        if (position < 0) {\n          return null;\n        }\n        outputBytes[position] = GenericGF_1.addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n      }\n      return outputBytes;\n    }\n    exports.decode = decode;\n\n    /***/\n  }), ( /* 10 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.VERSIONS = [{\n      infoBits: null,\n      versionNumber: 1,\n      alignmentPatternCenters: [],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 7,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 19\n        }]\n      }, {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 16\n        }]\n      }, {\n        ecCodewordsPerBlock: 13,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 13\n        }]\n      }, {\n        ecCodewordsPerBlock: 17,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 9\n        }]\n      }]\n    }, {\n      infoBits: null,\n      versionNumber: 2,\n      alignmentPatternCenters: [6, 18],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 34\n        }]\n      }, {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 28\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 22\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: null,\n      versionNumber: 3,\n      alignmentPatternCenters: [6, 22],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 15,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 55\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 44\n        }]\n      }, {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 17\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: null,\n      versionNumber: 4,\n      alignmentPatternCenters: [6, 26],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 80\n        }]\n      }, {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 32\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 24\n        }]\n      }, {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 9\n        }]\n      }]\n    }, {\n      infoBits: null,\n      versionNumber: 5,\n      alignmentPatternCenters: [6, 30],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 108\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 43\n        }]\n      }, {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 16\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 11\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 12\n        }]\n      }]\n    }, {\n      infoBits: null,\n      versionNumber: 6,\n      alignmentPatternCenters: [6, 34],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 68\n        }]\n      }, {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 27\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 19\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 15\n        }]\n      }]\n    }, {\n      infoBits: 0x07C94,\n      versionNumber: 7,\n      alignmentPatternCenters: [6, 22, 38],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 78\n        }]\n      }, {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 31\n        }]\n      }, {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 14\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 15\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 13\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 14\n        }]\n      }]\n    }, {\n      infoBits: 0x085BC,\n      versionNumber: 8,\n      alignmentPatternCenters: [6, 24, 42],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 97\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 38\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 39\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 18\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 19\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 14\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 15\n        }]\n      }]\n    }, {\n      infoBits: 0x09A99,\n      versionNumber: 9,\n      alignmentPatternCenters: [6, 26, 46],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 36\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 37\n        }]\n      }, {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 17\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 12\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: 0x0A4D3,\n      versionNumber: 10,\n      alignmentPatternCenters: [6, 28, 50],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 68\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 69\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 43\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 44\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 19\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 20\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x0BBF6,\n      versionNumber: 11,\n      alignmentPatternCenters: [6, 30, 54],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 81\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 50\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 51\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 22\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 23\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 12\n        }, {\n          numBlocks: 8,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: 0x0C762,\n      versionNumber: 12,\n      alignmentPatternCenters: [6, 32, 58],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 92\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 93\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 36\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 37\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 20\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 21\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 7,\n          dataCodewordsPerBlock: 14\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 15\n        }]\n      }]\n    }, {\n      infoBits: 0x0D847,\n      versionNumber: 13,\n      alignmentPatternCenters: [6, 34, 62],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 107\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 37\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 38\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 20\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 21\n        }]\n      }, {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 12,\n          dataCodewordsPerBlock: 11\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 12\n        }]\n      }]\n    }, {\n      infoBits: 0x0E60D,\n      versionNumber: 14,\n      alignmentPatternCenters: [6, 26, 46, 66],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 115\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 40\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 41\n        }]\n      }, {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 17\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 12\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: 0x0F928,\n      versionNumber: 15,\n      alignmentPatternCenters: [6, 26, 48, 70],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 87\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 88\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 41\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 42\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 12\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: 0x10B78,\n      versionNumber: 16,\n      alignmentPatternCenters: [6, 26, 50, 74],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 98\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 99\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 7,\n          dataCodewordsPerBlock: 45\n        }, {\n          numBlocks: 3,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 15,\n          dataCodewordsPerBlock: 19\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 20\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 13,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1145D,\n      versionNumber: 17,\n      alignmentPatternCenters: [6, 30, 54, 78],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 107\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 108\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 10,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 22\n        }, {\n          numBlocks: 15,\n          dataCodewordsPerBlock: 23\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 14\n        }, {\n          numBlocks: 17,\n          dataCodewordsPerBlock: 15\n        }]\n      }]\n    }, {\n      infoBits: 0x12A17,\n      versionNumber: 18,\n      alignmentPatternCenters: [6, 30, 56, 82],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 120\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 121\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 9,\n          dataCodewordsPerBlock: 43\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 44\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 22\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 23\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 14\n        }, {\n          numBlocks: 19,\n          dataCodewordsPerBlock: 15\n        }]\n      }]\n    }, {\n      infoBits: 0x13532,\n      versionNumber: 19,\n      alignmentPatternCenters: [6, 30, 58, 86],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 113\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 114\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 44\n        }, {\n          numBlocks: 11,\n          dataCodewordsPerBlock: 45\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 21\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 22\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 9,\n          dataCodewordsPerBlock: 13\n        }, {\n          numBlocks: 16,\n          dataCodewordsPerBlock: 14\n        }]\n      }]\n    }, {\n      infoBits: 0x149A6,\n      versionNumber: 20,\n      alignmentPatternCenters: [6, 34, 62, 90],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 107\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 108\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 41\n        }, {\n          numBlocks: 13,\n          dataCodewordsPerBlock: 42\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 15,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 15,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x15683,\n      versionNumber: 21,\n      alignmentPatternCenters: [6, 28, 50, 72, 94],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 116\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 117\n        }]\n      }, {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 42\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 22\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 23\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 17\n        }]\n      }]\n    }, {\n      infoBits: 0x168C9,\n      versionNumber: 22,\n      alignmentPatternCenters: [6, 26, 50, 74, 98],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 111\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 112\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 7,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 16,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{\n          numBlocks: 34,\n          dataCodewordsPerBlock: 13\n        }]\n      }]\n    }, {\n      infoBits: 0x177EC,\n      versionNumber: 23,\n      alignmentPatternCenters: [6, 30, 54, 74, 102],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 121\n        }, {\n          numBlocks: 5,\n          dataCodewordsPerBlock: 122\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 16,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x18EC4,\n      versionNumber: 24,\n      alignmentPatternCenters: [6, 28, 54, 80, 106],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 117\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 118\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 45\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 16,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 30,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 17\n        }]\n      }]\n    }, {\n      infoBits: 0x191E1,\n      versionNumber: 25,\n      alignmentPatternCenters: [6, 32, 58, 84, 110],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 106\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 107\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 13,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 7,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 22,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 22,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 13,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1AFAB,\n      versionNumber: 26,\n      alignmentPatternCenters: [6, 30, 58, 86, 114],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 10,\n          dataCodewordsPerBlock: 114\n        }, {\n          numBlocks: 2,\n          dataCodewordsPerBlock: 115\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 28,\n          dataCodewordsPerBlock: 22\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 23\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 33,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 17\n        }]\n      }]\n    }, {\n      infoBits: 0x1B08E,\n      versionNumber: 27,\n      alignmentPatternCenters: [6, 34, 62, 90, 118],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 122\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 123\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 22,\n          dataCodewordsPerBlock: 45\n        }, {\n          numBlocks: 3,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 8,\n          dataCodewordsPerBlock: 23\n        }, {\n          numBlocks: 26,\n          dataCodewordsPerBlock: 24\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 12,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 28,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1CC1A,\n      versionNumber: 28,\n      alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 117\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 118\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 3,\n          dataCodewordsPerBlock: 45\n        }, {\n          numBlocks: 23,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 31,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 31,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1D33F,\n      versionNumber: 29,\n      alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 7,\n          dataCodewordsPerBlock: 116\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 117\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 21,\n          dataCodewordsPerBlock: 45\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 46\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 1,\n          dataCodewordsPerBlock: 23\n        }, {\n          numBlocks: 37,\n          dataCodewordsPerBlock: 24\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 26,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1ED75,\n      versionNumber: 30,\n      alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 5,\n          dataCodewordsPerBlock: 115\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 15,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 25,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 23,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 25,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x1F250,\n      versionNumber: 31,\n      alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 13,\n          dataCodewordsPerBlock: 115\n        }, {\n          numBlocks: 3,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 29,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 42,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 23,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 28,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x209D5,\n      versionNumber: 32,\n      alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 115\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 10,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 23,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 10,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 35,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 35,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x216F0,\n      versionNumber: 33,\n      alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 115\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 14,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 21,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 29,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 19,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 11,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 46,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x228BA,\n      versionNumber: 34,\n      alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 13,\n          dataCodewordsPerBlock: 115\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 116\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 14,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 23,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 44,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 59,\n          dataCodewordsPerBlock: 16\n        }, {\n          numBlocks: 1,\n          dataCodewordsPerBlock: 17\n        }]\n      }]\n    }, {\n      infoBits: 0x2379F,\n      versionNumber: 35,\n      alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 12,\n          dataCodewordsPerBlock: 121\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 122\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 12,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 26,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 39,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 22,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 41,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x24B0B,\n      versionNumber: 36,\n      alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 121\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 122\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 6,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 34,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 46,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 2,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 64,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x2542E,\n      versionNumber: 37,\n      alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 17,\n          dataCodewordsPerBlock: 122\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 123\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 29,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 49,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 10,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 24,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 46,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x26A64,\n      versionNumber: 38,\n      alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 4,\n          dataCodewordsPerBlock: 122\n        }, {\n          numBlocks: 18,\n          dataCodewordsPerBlock: 123\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 13,\n          dataCodewordsPerBlock: 46\n        }, {\n          numBlocks: 32,\n          dataCodewordsPerBlock: 47\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 48,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 14,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 42,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 32,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x27541,\n      versionNumber: 39,\n      alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 20,\n          dataCodewordsPerBlock: 117\n        }, {\n          numBlocks: 4,\n          dataCodewordsPerBlock: 118\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 40,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 7,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 43,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 22,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 10,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 67,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }, {\n      infoBits: 0x28C69,\n      versionNumber: 40,\n      alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\n      errorCorrectionLevels: [{\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 19,\n          dataCodewordsPerBlock: 118\n        }, {\n          numBlocks: 6,\n          dataCodewordsPerBlock: 119\n        }]\n      }, {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{\n          numBlocks: 18,\n          dataCodewordsPerBlock: 47\n        }, {\n          numBlocks: 31,\n          dataCodewordsPerBlock: 48\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 34,\n          dataCodewordsPerBlock: 24\n        }, {\n          numBlocks: 34,\n          dataCodewordsPerBlock: 25\n        }]\n      }, {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{\n          numBlocks: 20,\n          dataCodewordsPerBlock: 15\n        }, {\n          numBlocks: 61,\n          dataCodewordsPerBlock: 16\n        }]\n      }]\n    }];\n\n    /***/\n  }), ( /* 11 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var BitMatrix_1 = __webpack_require__(0);\n    function squareToQuadrilateral(p1, p2, p3, p4) {\n      var dx3 = p1.x - p2.x + p3.x - p4.x;\n      var dy3 = p1.y - p2.y + p3.y - p4.y;\n      if (dx3 === 0 && dy3 === 0) {\n        // Affine\n        return {\n          a11: p2.x - p1.x,\n          a12: p2.y - p1.y,\n          a13: 0,\n          a21: p3.x - p2.x,\n          a22: p3.y - p2.y,\n          a23: 0,\n          a31: p1.x,\n          a32: p1.y,\n          a33: 1\n        };\n      } else {\n        var dx1 = p2.x - p3.x;\n        var dx2 = p4.x - p3.x;\n        var dy1 = p2.y - p3.y;\n        var dy2 = p4.y - p3.y;\n        var denominator = dx1 * dy2 - dx2 * dy1;\n        var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n        var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n        return {\n          a11: p2.x - p1.x + a13 * p2.x,\n          a12: p2.y - p1.y + a13 * p2.y,\n          a13: a13,\n          a21: p4.x - p1.x + a23 * p4.x,\n          a22: p4.y - p1.y + a23 * p4.y,\n          a23: a23,\n          a31: p1.x,\n          a32: p1.y,\n          a33: 1\n        };\n      }\n    }\n    function quadrilateralToSquare(p1, p2, p3, p4) {\n      // Here, the adjoint serves as the inverse:\n      var sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n      return {\n        a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n        a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n        a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n        a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n        a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n        a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n        a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n        a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n        a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21\n      };\n    }\n    function times(a, b) {\n      return {\n        a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n        a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n        a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n        a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n        a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n        a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n        a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n        a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n        a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33\n      };\n    }\n    function extract(image, location) {\n      var qToS = quadrilateralToSquare({\n        x: 3.5,\n        y: 3.5\n      }, {\n        x: location.dimension - 3.5,\n        y: 3.5\n      }, {\n        x: location.dimension - 6.5,\n        y: location.dimension - 6.5\n      }, {\n        x: 3.5,\n        y: location.dimension - 3.5\n      });\n      var sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n      var transform = times(sToQ, qToS);\n      var matrix = BitMatrix_1.BitMatrix.createEmpty(location.dimension, location.dimension);\n      var mappingFunction = function (x, y) {\n        var denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n        return {\n          x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n          y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator\n        };\n      };\n      for (var y = 0; y < location.dimension; y++) {\n        for (var x = 0; x < location.dimension; x++) {\n          var xValue = x + 0.5;\n          var yValue = y + 0.5;\n          var sourcePixel = mappingFunction(xValue, yValue);\n          matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n        }\n      }\n      return {\n        matrix: matrix,\n        mappingFunction: mappingFunction\n      };\n    }\n    exports.extract = extract;\n\n    /***/\n  }), ( /* 12 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    var MAX_FINDERPATTERNS_TO_SEARCH = 4;\n    var MIN_QUAD_RATIO = 0.5;\n    var MAX_QUAD_RATIO = 1.5;\n    var distance = function (a, b) {\n      return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n    };\n    function sum(values) {\n      return values.reduce(function (a, b) {\n        return a + b;\n      });\n    }\n    // Takes three finder patterns and organizes them into topLeft, topRight, etc\n    function reorderFinderPatterns(pattern1, pattern2, pattern3) {\n      var _a, _b, _c, _d;\n      // Find distances between pattern centers\n      var oneTwoDistance = distance(pattern1, pattern2);\n      var twoThreeDistance = distance(pattern2, pattern3);\n      var oneThreeDistance = distance(pattern1, pattern3);\n      var bottomLeft;\n      var topLeft;\n      var topRight;\n      // Assume one closest to other two is B; A and C will just be guesses at first\n      if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n        _a = [pattern2, pattern1, pattern3], bottomLeft = _a[0], topLeft = _a[1], topRight = _a[2];\n      } else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n        _b = [pattern1, pattern2, pattern3], bottomLeft = _b[0], topLeft = _b[1], topRight = _b[2];\n      } else {\n        _c = [pattern1, pattern3, pattern2], bottomLeft = _c[0], topLeft = _c[1], topRight = _c[2];\n      }\n      // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n      // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n      // we've got it flipped around and should swap topRight and bottomLeft.\n      if ((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y) - (topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x) < 0) {\n        _d = [topRight, bottomLeft], bottomLeft = _d[0], topRight = _d[1];\n      }\n      return {\n        bottomLeft: bottomLeft,\n        topLeft: topLeft,\n        topRight: topRight\n      };\n    }\n    // Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\n    function computeDimension(topLeft, topRight, bottomLeft, matrix) {\n      var moduleSize = (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 +\n      // Divide by 7 since the ratio is 1:1:3:1:1\n      sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 + sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 + sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) / 4;\n      if (moduleSize < 1) {\n        throw new Error(\"Invalid module size\");\n      }\n      var topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n      var sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n      var dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n      switch (dimension % 4) {\n        case 0:\n          dimension++;\n          break;\n        case 2:\n          dimension--;\n          break;\n      }\n      return {\n        dimension: dimension,\n        moduleSize: moduleSize\n      };\n    }\n    // Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n    // Returns an array of elements, representing the pixel size of the black white run.\n    // Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n    function countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\n      var switchPoints = [{\n        x: Math.floor(origin.x),\n        y: Math.floor(origin.y)\n      }];\n      var steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n      var fromX;\n      var fromY;\n      var toX;\n      var toY;\n      if (steep) {\n        fromX = Math.floor(origin.y);\n        fromY = Math.floor(origin.x);\n        toX = Math.floor(end.y);\n        toY = Math.floor(end.x);\n      } else {\n        fromX = Math.floor(origin.x);\n        fromY = Math.floor(origin.y);\n        toX = Math.floor(end.x);\n        toY = Math.floor(end.y);\n      }\n      var dx = Math.abs(toX - fromX);\n      var dy = Math.abs(toY - fromY);\n      var error = Math.floor(-dx / 2);\n      var xStep = fromX < toX ? 1 : -1;\n      var yStep = fromY < toY ? 1 : -1;\n      var currentPixel = true;\n      // Loop up until x == toX, but not beyond\n      for (var x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n        // Does current pixel mean we have moved white to black or vice versa?\n        // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n        // color, advance to next state or end if we are in state 2 already\n        var realX = steep ? y : x;\n        var realY = steep ? x : y;\n        if (matrix.get(realX, realY) !== currentPixel) {\n          currentPixel = !currentPixel;\n          switchPoints.push({\n            x: realX,\n            y: realY\n          });\n          if (switchPoints.length === length + 1) {\n            break;\n          }\n        }\n        error += dy;\n        if (error > 0) {\n          if (y === toY) {\n            break;\n          }\n          y += yStep;\n          error -= dx;\n        }\n      }\n      var distances = [];\n      for (var i = 0; i < length; i++) {\n        if (switchPoints[i] && switchPoints[i + 1]) {\n          distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n        } else {\n          distances.push(0);\n        }\n      }\n      return distances;\n    }\n    // Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n    // along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n    // of the black white run. Takes a length which represents the number of switches from black to white to look for.\n    function countBlackWhiteRun(origin, end, matrix, length) {\n      var _a;\n      var rise = end.y - origin.y;\n      var run = end.x - origin.x;\n      var towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n      var awayFromEnd = countBlackWhiteRunTowardsPoint(origin, {\n        x: origin.x - run,\n        y: origin.y - rise\n      }, matrix, Math.ceil(length / 2));\n      var middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n      return (_a = awayFromEnd.concat(middleValue)).concat.apply(_a, towardsEnd);\n    }\n    // Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n    // that is the amount the run diverges from the expected ratio\n    function scoreBlackWhiteRun(sequence, ratios) {\n      var averageSize = sum(sequence) / sum(ratios);\n      var error = 0;\n      ratios.forEach(function (ratio, i) {\n        error += Math.pow(sequence[i] - ratio * averageSize, 2);\n      });\n      return {\n        averageSize: averageSize,\n        error: error\n      };\n    }\n    // Takes an X,Y point and an array of sizes and scores the point against those ratios.\n    // For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n    // against that.\n    function scorePattern(point, ratios, matrix) {\n      try {\n        var horizontalRun = countBlackWhiteRun(point, {\n          x: -1,\n          y: point.y\n        }, matrix, ratios.length);\n        var verticalRun = countBlackWhiteRun(point, {\n          x: point.x,\n          y: -1\n        }, matrix, ratios.length);\n        var topLeftPoint = {\n          x: Math.max(0, point.x - point.y) - 1,\n          y: Math.max(0, point.y - point.x) - 1\n        };\n        var topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n        var bottomLeftPoint = {\n          x: Math.min(matrix.width, point.x + point.y) + 1,\n          y: Math.min(matrix.height, point.y + point.x) + 1\n        };\n        var bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n        var horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n        var vertError = scoreBlackWhiteRun(verticalRun, ratios);\n        var diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n        var diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n        var ratioError = Math.sqrt(horzError.error * horzError.error + vertError.error * vertError.error + diagDownError.error * diagDownError.error + diagUpError.error * diagUpError.error);\n        var avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n        var sizeError = (Math.pow(horzError.averageSize - avgSize, 2) + Math.pow(vertError.averageSize - avgSize, 2) + Math.pow(diagDownError.averageSize - avgSize, 2) + Math.pow(diagUpError.averageSize - avgSize, 2)) / avgSize;\n        return ratioError + sizeError;\n      } catch (_a) {\n        return Infinity;\n      }\n    }\n    function recenterLocation(matrix, p) {\n      var leftX = Math.round(p.x);\n      while (matrix.get(leftX, Math.round(p.y))) {\n        leftX--;\n      }\n      var rightX = Math.round(p.x);\n      while (matrix.get(rightX, Math.round(p.y))) {\n        rightX++;\n      }\n      var x = (leftX + rightX) / 2;\n      var topY = Math.round(p.y);\n      while (matrix.get(Math.round(x), topY)) {\n        topY--;\n      }\n      var bottomY = Math.round(p.y);\n      while (matrix.get(Math.round(x), bottomY)) {\n        bottomY++;\n      }\n      var y = (topY + bottomY) / 2;\n      return {\n        x: x,\n        y: y\n      };\n    }\n    function locate(matrix) {\n      var finderPatternQuads = [];\n      var activeFinderPatternQuads = [];\n      var alignmentPatternQuads = [];\n      var activeAlignmentPatternQuads = [];\n      var _loop_1 = function (y) {\n        var length_1 = 0;\n        var lastBit = false;\n        var scans = [0, 0, 0, 0, 0];\n        var _loop_2 = function (x) {\n          var v = matrix.get(x, y);\n          if (v === lastBit) {\n            length_1++;\n          } else {\n            scans = [scans[1], scans[2], scans[3], scans[4], length_1];\n            length_1 = 1;\n            lastBit = v;\n            // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n            var averageFinderPatternBlocksize = sum(scans) / 7;\n            var validFinderPattern = Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize && Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize && Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize && Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize && Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize && !v; // And make sure the current pixel is white since finder patterns are bordered in white\n            // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n            var averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n            var validAlignmentPattern = Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize && Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize && Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize && v; // Is the current pixel black since alignment patterns are bordered in black\n            if (validFinderPattern) {\n              // Compute the start and end x values of the large center black square\n              var endX_1 = x - scans[3] - scans[4];\n              var startX_1 = endX_1 - scans[2];\n              var line = {\n                startX: startX_1,\n                endX: endX_1,\n                y: y\n              };\n              // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n              // that line as the starting point.\n              var matchingQuads = activeFinderPatternQuads.filter(function (q) {\n                return startX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX || endX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX || startX_1 <= q.bottom.startX && endX_1 >= q.bottom.endX && scans[2] / (q.bottom.endX - q.bottom.startX) < MAX_QUAD_RATIO && scans[2] / (q.bottom.endX - q.bottom.startX) > MIN_QUAD_RATIO;\n              });\n              if (matchingQuads.length > 0) {\n                matchingQuads[0].bottom = line;\n              } else {\n                activeFinderPatternQuads.push({\n                  top: line,\n                  bottom: line\n                });\n              }\n            }\n            if (validAlignmentPattern) {\n              // Compute the start and end x values of the center black square\n              var endX_2 = x - scans[4];\n              var startX_2 = endX_2 - scans[3];\n              var line = {\n                startX: startX_2,\n                y: y,\n                endX: endX_2\n              };\n              // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n              // that line as the starting point.\n              var matchingQuads = activeAlignmentPatternQuads.filter(function (q) {\n                return startX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX || endX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX || startX_2 <= q.bottom.startX && endX_2 >= q.bottom.endX && scans[2] / (q.bottom.endX - q.bottom.startX) < MAX_QUAD_RATIO && scans[2] / (q.bottom.endX - q.bottom.startX) > MIN_QUAD_RATIO;\n              });\n              if (matchingQuads.length > 0) {\n                matchingQuads[0].bottom = line;\n              } else {\n                activeAlignmentPatternQuads.push({\n                  top: line,\n                  bottom: line\n                });\n              }\n            }\n          }\n        };\n        for (var x = -1; x <= matrix.width; x++) {\n          _loop_2(x);\n        }\n        finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) {\n          return q.bottom.y !== y && q.bottom.y - q.top.y >= 2;\n        }));\n        activeFinderPatternQuads = activeFinderPatternQuads.filter(function (q) {\n          return q.bottom.y === y;\n        });\n        alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads.filter(function (q) {\n          return q.bottom.y !== y;\n        }));\n        activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(function (q) {\n          return q.bottom.y === y;\n        });\n      };\n      for (var y = 0; y <= matrix.height; y++) {\n        _loop_1(y);\n      }\n      finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) {\n        return q.bottom.y - q.top.y >= 2;\n      }));\n      alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads);\n      var finderPatternGroups = finderPatternQuads.filter(function (q) {\n        return q.bottom.y - q.top.y >= 2;\n      }) // All quads must be at least 2px tall since the center square is larger than a block\n      .map(function (q) {\n        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n        var y = (q.top.y + q.bottom.y + 1) / 2;\n        if (!matrix.get(Math.round(x), Math.round(y))) {\n          return;\n        }\n        var lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\n        var size = sum(lengths) / lengths.length;\n        var score = scorePattern({\n          x: Math.round(x),\n          y: Math.round(y)\n        }, [1, 1, 3, 1, 1], matrix);\n        return {\n          score: score,\n          x: x,\n          y: y,\n          size: size\n        };\n      }).filter(function (q) {\n        return !!q;\n      }) // Filter out any rejected quads from above\n      .sort(function (a, b) {\n        return a.score - b.score;\n      })\n      // Now take the top finder pattern options and try to find 2 other options with a similar size.\n      .map(function (point, i, finderPatterns) {\n        if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\n          return null;\n        }\n        var otherPoints = finderPatterns.filter(function (p, ii) {\n          return i !== ii;\n        }).map(function (p) {\n          return {\n            x: p.x,\n            y: p.y,\n            score: p.score + Math.pow(p.size - point.size, 2) / point.size,\n            size: p.size\n          };\n        }).sort(function (a, b) {\n          return a.score - b.score;\n        });\n        if (otherPoints.length < 2) {\n          return null;\n        }\n        var score = point.score + otherPoints[0].score + otherPoints[1].score;\n        return {\n          points: [point].concat(otherPoints.slice(0, 2)),\n          score: score\n        };\n      }).filter(function (q) {\n        return !!q;\n      }) // Filter out any rejected finder patterns from above\n      .sort(function (a, b) {\n        return a.score - b.score;\n      });\n      if (finderPatternGroups.length === 0) {\n        return null;\n      }\n      var _a = reorderFinderPatterns(finderPatternGroups[0].points[0], finderPatternGroups[0].points[1], finderPatternGroups[0].points[2]),\n        topRight = _a.topRight,\n        topLeft = _a.topLeft,\n        bottomLeft = _a.bottomLeft;\n      var alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n      var result = [];\n      if (alignment) {\n        result.push({\n          alignmentPattern: {\n            x: alignment.alignmentPattern.x,\n            y: alignment.alignmentPattern.y\n          },\n          bottomLeft: {\n            x: bottomLeft.x,\n            y: bottomLeft.y\n          },\n          dimension: alignment.dimension,\n          topLeft: {\n            x: topLeft.x,\n            y: topLeft.y\n          },\n          topRight: {\n            x: topRight.x,\n            y: topRight.y\n          }\n        });\n      }\n      // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n      // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n      // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n      // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n      // attempts at decoding harder images.\n      var midTopRight = recenterLocation(matrix, topRight);\n      var midTopLeft = recenterLocation(matrix, topLeft);\n      var midBottomLeft = recenterLocation(matrix, bottomLeft);\n      var centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n      if (centeredAlignment) {\n        result.push({\n          alignmentPattern: {\n            x: centeredAlignment.alignmentPattern.x,\n            y: centeredAlignment.alignmentPattern.y\n          },\n          bottomLeft: {\n            x: midBottomLeft.x,\n            y: midBottomLeft.y\n          },\n          topLeft: {\n            x: midTopLeft.x,\n            y: midTopLeft.y\n          },\n          topRight: {\n            x: midTopRight.x,\n            y: midTopRight.y\n          },\n          dimension: centeredAlignment.dimension\n        });\n      }\n      if (result.length === 0) {\n        return null;\n      }\n      return result;\n    }\n    exports.locate = locate;\n    function findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft) {\n      var _a;\n      // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n      // We'll use these to help find the alignment pattern but also later when we do the extraction.\n      var dimension;\n      var moduleSize;\n      try {\n        _a = computeDimension(topLeft, topRight, bottomLeft, matrix), dimension = _a.dimension, moduleSize = _a.moduleSize;\n      } catch (e) {\n        return null;\n      }\n      // Now find the alignment pattern\n      var bottomRightFinderPattern = {\n        x: topRight.x - topLeft.x + bottomLeft.x,\n        y: topRight.y - topLeft.y + bottomLeft.y\n      };\n      var modulesBetweenFinderPatterns = (distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize;\n      var correctionToTopLeft = 1 - 3 / modulesBetweenFinderPatterns;\n      var expectedAlignmentPattern = {\n        x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n        y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y)\n      };\n      var alignmentPatterns = alignmentPatternQuads.map(function (q) {\n        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n        var y = (q.top.y + q.bottom.y + 1) / 2;\n        if (!matrix.get(Math.floor(x), Math.floor(y))) {\n          return;\n        }\n        var lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\n        var size = sum(lengths) / lengths.length;\n        var sizeScore = scorePattern({\n          x: Math.floor(x),\n          y: Math.floor(y)\n        }, [1, 1, 1], matrix);\n        var score = sizeScore + distance({\n          x: x,\n          y: y\n        }, expectedAlignmentPattern);\n        return {\n          x: x,\n          y: y,\n          score: score\n        };\n      }).filter(function (v) {\n        return !!v;\n      }).sort(function (a, b) {\n        return a.score - b.score;\n      });\n      // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n      // so we can only use our best guess.\n      var alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n      return {\n        alignmentPattern: alignmentPattern,\n        dimension: dimension\n      };\n    }\n\n    /***/\n  }\n  /******/)])[\"default\"];\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","value","BitMatrix","data","width","height","length","createEmpty","Uint8ClampedArray","x","y","set","v","setRegion","left","top","GenericGFPoly_1","addOrSubtractGF","a","b","GenericGF","primitive","size","genBase","generatorBase","expTable","Array","logTable","zero","default","from","one","multiply","inverse","Error","buildMonomial","degree","coefficient","coefficients","log","exp","GenericGF_1","GenericGFPoly","field","coefficientsLength","firstNonZero","isZero","getCoefficient","addOrSubtract","other","_a","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","scalar","product","multiplyPoly","aCoefficients","aLength","bCoefficients","bLength","aCoeff","j","multiplyByMonomial","evaluateAt","result","forEach","binarizer_1","decoder_1","extractor_1","locator_1","scan","matrix","locations","locate","_i","locations_1","location_1","extracted","extract","decoded","decode","binaryData","bytes","text","chunks","version","location","topRightCorner","mappingFunction","dimension","topLeftCorner","bottomRightCorner","bottomLeftCorner","topRightFinderPattern","topRight","topLeftFinderPattern","topLeft","bottomLeftFinderPattern","bottomLeft","bottomRightAlignmentPattern","alignmentPattern","defaultOptions","inversionAttempts","jsQR","providedOptions","options","keys","opt","shouldInvert","tryInvertedFirst","binarize","binarized","inverted","BitMatrix_1","REGION_SIZE","MIN_DYNAMIC_RANGE","numBetween","min","max","Matrix","returnInverted","greyscalePixels","r","g","horizontalRegionCount","Math","ceil","verticalRegionCount","blackPoints","verticalRegion","hortizontalRegion","sum","Infinity","pixelLumosity","average","pow","averageNeighborBlackPoint","top_1","xRegion","yRegion","threshold","lum","decodeData_1","reedsolomon_1","version_1","numBitsDiffering","z","bitCount","pushBit","bit","byte","FORMAT_INFO_TABLE","bits","formatInfo","errorCorrectionLevel","dataMask","DATA_MASKS","floor","buildFunctionPatternMask","versionNumber","alignmentPatternCenters","_b","_c","readCodewords","functionPatternMask","codewords","currentByte","bitsRead","readingUp","columnIndex","columnOffset","push","readVersion","provisionalVersion","VERSIONS","topRightVersionBits","bottomLeftVersionBits","bestDifference","bestVersion","VERSIONS_1","infoBits","difference","readFormatInformation","topLeftFormatInfoBits","topRightBottomRightFormatInfoBits","bestFormatInfo","FORMAT_INFO_TABLE_1","getDataBlocks","ecLevel","ecInfo","errorCorrectionLevels","dataBlocks","totalCodewords","ecBlocks","block","numBlocks","numDataCodewords","dataCodewordsPerBlock","ecCodewordsPerBlock","slice","shortBlockSize","dataBlocks_1","dataBlock","shift","smallBlockCount","largeBlockCount","dataBlocks_2","decodeMatrix","totalBytes","reduce","resultBytes","resultIndex","dataBlocks_3","correctedBytes","BitStream_1","shiftJISTable_1","Mode","ModeByte","decodeNumeric","stream","characterCountSize","readBits","num","toString","AlphanumericCharacterCodes","decodeAlphanumeric","charCodeAt","decodeByte","decodeURIComponent","map","substr","join","decodeKanji","k","String","fromCharCode","shiftJISTable","_d","BitStream","available","mode","Terminator","ECI","type","assignmentNumber","Numeric","numericResult","apply","Alphanumeric","alphanumericResult","Byte","byteResult","Kanji","kanjiResult","byteOffset","bitOffset","numBits","bitsLeft","toRead","bitsToNotRead","mask","runEuclideanAlgorithm","R","rLast","tLast","t","rLastLast","tLastLast","q","denominatorLeadingTerm","dltInverse","degreeDiff","scale","sigmaTildeAtZero","findErrorLocations","errorLocator","numErrors","errorCount","findErrorMagnitudes","errorEvaluator","errorLocations","xiInverse","denominator","twoS","outputBytes","poly","syndromeCoefficients","error","evaluation","syndrome","sigmaOmega","errorMagnitudes","position","squareToQuadrilateral","p1","p2","p3","p4","dx3","dy3","a11","a12","a13","a21","a22","a23","a31","a32","a33","dx1","dx2","dy1","dy2","quadrilateralToSquare","sToQ","times","image","qToS","transform","xValue","yValue","sourcePixel","MAX_FINDERPATTERNS_TO_SEARCH","MIN_QUAD_RATIO","MAX_QUAD_RATIO","distance","sqrt","values","reorderFinderPatterns","pattern1","pattern2","pattern3","oneTwoDistance","twoThreeDistance","oneThreeDistance","computeDimension","moduleSize","countBlackWhiteRun","topDimension","round","sideDimension","countBlackWhiteRunTowardsPoint","origin","end","switchPoints","steep","abs","fromX","fromY","toX","toY","dx","dy","xStep","yStep","currentPixel","realX","realY","distances","rise","run","towardsEnd","awayFromEnd","middleValue","concat","scoreBlackWhiteRun","sequence","ratios","averageSize","ratio","scorePattern","point","horizontalRun","verticalRun","topLeftPoint","topLeftBottomRightRun","bottomLeftPoint","bottomLeftTopRightRun","horzError","vertError","diagDownError","diagUpError","ratioError","avgSize","sizeError","recenterLocation","leftX","rightX","topY","bottomY","finderPatternQuads","activeFinderPatternQuads","alignmentPatternQuads","activeAlignmentPatternQuads","_loop_1","length_1","lastBit","scans","_loop_2","averageFinderPatternBlocksize","validFinderPattern","averageAlignmentPatternBlocksize","validAlignmentPattern","endX_1","startX_1","line","startX","endX","matchingQuads","filter","bottom","endX_2","startX_2","finderPatternGroups","lengths","score","sort","finderPatterns","otherPoints","ii","points","alignment","findAlignmentPattern","midTopRight","midTopLeft","midBottomLeft","centeredAlignment","e","bottomRightFinderPattern","modulesBetweenFinderPatterns","correctionToTopLeft","expectedAlignmentPattern","alignmentPatterns","sizeScore"],"sources":["C:/Users/lhc99/OneDrive/Desktop/villa-parking-management/frontend/node_modules/jsqr/dist/jsQR.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"jsQR\"] = factory();\r\n\telse\r\n\t\troot[\"jsQR\"] = factory();\r\n})(typeof self !== 'undefined' ? self : this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, {\r\n/******/ \t\t\t\tconfigurable: false,\r\n/******/ \t\t\t\tenumerable: true,\r\n/******/ \t\t\t\tget: getter\r\n/******/ \t\t\t});\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitMatrix = /** @class */ (function () {\r\n    function BitMatrix(data, width) {\r\n        this.width = width;\r\n        this.height = data.length / width;\r\n        this.data = data;\r\n    }\r\n    BitMatrix.createEmpty = function (width, height) {\r\n        return new BitMatrix(new Uint8ClampedArray(width * height), width);\r\n    };\r\n    BitMatrix.prototype.get = function (x, y) {\r\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\r\n            return false;\r\n        }\r\n        return !!this.data[y * this.width + x];\r\n    };\r\n    BitMatrix.prototype.set = function (x, y, v) {\r\n        this.data[y * this.width + x] = v ? 1 : 0;\r\n    };\r\n    BitMatrix.prototype.setRegion = function (left, top, width, height, v) {\r\n        for (var y = top; y < top + height; y++) {\r\n            for (var x = left; x < left + width; x++) {\r\n                this.set(x, y, !!v);\r\n            }\r\n        }\r\n    };\r\n    return BitMatrix;\r\n}());\r\nexports.BitMatrix = BitMatrix;\r\n\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GenericGFPoly_1 = __webpack_require__(2);\r\nfunction addOrSubtractGF(a, b) {\r\n    return a ^ b; // tslint:disable-line:no-bitwise\r\n}\r\nexports.addOrSubtractGF = addOrSubtractGF;\r\nvar GenericGF = /** @class */ (function () {\r\n    function GenericGF(primitive, size, genBase) {\r\n        this.primitive = primitive;\r\n        this.size = size;\r\n        this.generatorBase = genBase;\r\n        this.expTable = new Array(this.size);\r\n        this.logTable = new Array(this.size);\r\n        var x = 1;\r\n        for (var i = 0; i < this.size; i++) {\r\n            this.expTable[i] = x;\r\n            x = x * 2;\r\n            if (x >= this.size) {\r\n                x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\r\n            }\r\n        }\r\n        for (var i = 0; i < this.size - 1; i++) {\r\n            this.logTable[this.expTable[i]] = i;\r\n        }\r\n        this.zero = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([0]));\r\n        this.one = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([1]));\r\n    }\r\n    GenericGF.prototype.multiply = function (a, b) {\r\n        if (a === 0 || b === 0) {\r\n            return 0;\r\n        }\r\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\r\n    };\r\n    GenericGF.prototype.inverse = function (a) {\r\n        if (a === 0) {\r\n            throw new Error(\"Can't invert 0\");\r\n        }\r\n        return this.expTable[this.size - this.logTable[a] - 1];\r\n    };\r\n    GenericGF.prototype.buildMonomial = function (degree, coefficient) {\r\n        if (degree < 0) {\r\n            throw new Error(\"Invalid monomial degree less than 0\");\r\n        }\r\n        if (coefficient === 0) {\r\n            return this.zero;\r\n        }\r\n        var coefficients = new Uint8ClampedArray(degree + 1);\r\n        coefficients[0] = coefficient;\r\n        return new GenericGFPoly_1.default(this, coefficients);\r\n    };\r\n    GenericGF.prototype.log = function (a) {\r\n        if (a === 0) {\r\n            throw new Error(\"Can't take log(0)\");\r\n        }\r\n        return this.logTable[a];\r\n    };\r\n    GenericGF.prototype.exp = function (a) {\r\n        return this.expTable[a];\r\n    };\r\n    return GenericGF;\r\n}());\r\nexports.default = GenericGF;\r\n\r\n\r\n/***/ }),\r\n/* 2 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GenericGF_1 = __webpack_require__(1);\r\nvar GenericGFPoly = /** @class */ (function () {\r\n    function GenericGFPoly(field, coefficients) {\r\n        if (coefficients.length === 0) {\r\n            throw new Error(\"No coefficients.\");\r\n        }\r\n        this.field = field;\r\n        var coefficientsLength = coefficients.length;\r\n        if (coefficientsLength > 1 && coefficients[0] === 0) {\r\n            // Leading term must be non-zero for anything except the constant polynomial \"0\"\r\n            var firstNonZero = 1;\r\n            while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\r\n                firstNonZero++;\r\n            }\r\n            if (firstNonZero === coefficientsLength) {\r\n                this.coefficients = field.zero.coefficients;\r\n            }\r\n            else {\r\n                this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\r\n                for (var i = 0; i < this.coefficients.length; i++) {\r\n                    this.coefficients[i] = coefficients[firstNonZero + i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.coefficients = coefficients;\r\n        }\r\n    }\r\n    GenericGFPoly.prototype.degree = function () {\r\n        return this.coefficients.length - 1;\r\n    };\r\n    GenericGFPoly.prototype.isZero = function () {\r\n        return this.coefficients[0] === 0;\r\n    };\r\n    GenericGFPoly.prototype.getCoefficient = function (degree) {\r\n        return this.coefficients[this.coefficients.length - 1 - degree];\r\n    };\r\n    GenericGFPoly.prototype.addOrSubtract = function (other) {\r\n        var _a;\r\n        if (this.isZero()) {\r\n            return other;\r\n        }\r\n        if (other.isZero()) {\r\n            return this;\r\n        }\r\n        var smallerCoefficients = this.coefficients;\r\n        var largerCoefficients = other.coefficients;\r\n        if (smallerCoefficients.length > largerCoefficients.length) {\r\n            _a = [largerCoefficients, smallerCoefficients], smallerCoefficients = _a[0], largerCoefficients = _a[1];\r\n        }\r\n        var sumDiff = new Uint8ClampedArray(largerCoefficients.length);\r\n        var lengthDiff = largerCoefficients.length - smallerCoefficients.length;\r\n        for (var i = 0; i < lengthDiff; i++) {\r\n            sumDiff[i] = largerCoefficients[i];\r\n        }\r\n        for (var i = lengthDiff; i < largerCoefficients.length; i++) {\r\n            sumDiff[i] = GenericGF_1.addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\r\n        }\r\n        return new GenericGFPoly(this.field, sumDiff);\r\n    };\r\n    GenericGFPoly.prototype.multiply = function (scalar) {\r\n        if (scalar === 0) {\r\n            return this.field.zero;\r\n        }\r\n        if (scalar === 1) {\r\n            return this;\r\n        }\r\n        var size = this.coefficients.length;\r\n        var product = new Uint8ClampedArray(size);\r\n        for (var i = 0; i < size; i++) {\r\n            product[i] = this.field.multiply(this.coefficients[i], scalar);\r\n        }\r\n        return new GenericGFPoly(this.field, product);\r\n    };\r\n    GenericGFPoly.prototype.multiplyPoly = function (other) {\r\n        if (this.isZero() || other.isZero()) {\r\n            return this.field.zero;\r\n        }\r\n        var aCoefficients = this.coefficients;\r\n        var aLength = aCoefficients.length;\r\n        var bCoefficients = other.coefficients;\r\n        var bLength = bCoefficients.length;\r\n        var product = new Uint8ClampedArray(aLength + bLength - 1);\r\n        for (var i = 0; i < aLength; i++) {\r\n            var aCoeff = aCoefficients[i];\r\n            for (var j = 0; j < bLength; j++) {\r\n                product[i + j] = GenericGF_1.addOrSubtractGF(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\r\n            }\r\n        }\r\n        return new GenericGFPoly(this.field, product);\r\n    };\r\n    GenericGFPoly.prototype.multiplyByMonomial = function (degree, coefficient) {\r\n        if (degree < 0) {\r\n            throw new Error(\"Invalid degree less than 0\");\r\n        }\r\n        if (coefficient === 0) {\r\n            return this.field.zero;\r\n        }\r\n        var size = this.coefficients.length;\r\n        var product = new Uint8ClampedArray(size + degree);\r\n        for (var i = 0; i < size; i++) {\r\n            product[i] = this.field.multiply(this.coefficients[i], coefficient);\r\n        }\r\n        return new GenericGFPoly(this.field, product);\r\n    };\r\n    GenericGFPoly.prototype.evaluateAt = function (a) {\r\n        var result = 0;\r\n        if (a === 0) {\r\n            // Just return the x^0 coefficient\r\n            return this.getCoefficient(0);\r\n        }\r\n        var size = this.coefficients.length;\r\n        if (a === 1) {\r\n            // Just the sum of the coefficients\r\n            this.coefficients.forEach(function (coefficient) {\r\n                result = GenericGF_1.addOrSubtractGF(result, coefficient);\r\n            });\r\n            return result;\r\n        }\r\n        result = this.coefficients[0];\r\n        for (var i = 1; i < size; i++) {\r\n            result = GenericGF_1.addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\r\n        }\r\n        return result;\r\n    };\r\n    return GenericGFPoly;\r\n}());\r\nexports.default = GenericGFPoly;\r\n\r\n\r\n/***/ }),\r\n/* 3 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar binarizer_1 = __webpack_require__(4);\r\nvar decoder_1 = __webpack_require__(5);\r\nvar extractor_1 = __webpack_require__(11);\r\nvar locator_1 = __webpack_require__(12);\r\nfunction scan(matrix) {\r\n    var locations = locator_1.locate(matrix);\r\n    if (!locations) {\r\n        return null;\r\n    }\r\n    for (var _i = 0, locations_1 = locations; _i < locations_1.length; _i++) {\r\n        var location_1 = locations_1[_i];\r\n        var extracted = extractor_1.extract(matrix, location_1);\r\n        var decoded = decoder_1.decode(extracted.matrix);\r\n        if (decoded) {\r\n            return {\r\n                binaryData: decoded.bytes,\r\n                data: decoded.text,\r\n                chunks: decoded.chunks,\r\n                version: decoded.version,\r\n                location: {\r\n                    topRightCorner: extracted.mappingFunction(location_1.dimension, 0),\r\n                    topLeftCorner: extracted.mappingFunction(0, 0),\r\n                    bottomRightCorner: extracted.mappingFunction(location_1.dimension, location_1.dimension),\r\n                    bottomLeftCorner: extracted.mappingFunction(0, location_1.dimension),\r\n                    topRightFinderPattern: location_1.topRight,\r\n                    topLeftFinderPattern: location_1.topLeft,\r\n                    bottomLeftFinderPattern: location_1.bottomLeft,\r\n                    bottomRightAlignmentPattern: location_1.alignmentPattern,\r\n                },\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar defaultOptions = {\r\n    inversionAttempts: \"attemptBoth\",\r\n};\r\nfunction jsQR(data, width, height, providedOptions) {\r\n    if (providedOptions === void 0) { providedOptions = {}; }\r\n    var options = defaultOptions;\r\n    Object.keys(options || {}).forEach(function (opt) {\r\n        options[opt] = providedOptions[opt] || options[opt];\r\n    });\r\n    var shouldInvert = options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\";\r\n    var tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\r\n    var _a = binarizer_1.binarize(data, width, height, shouldInvert), binarized = _a.binarized, inverted = _a.inverted;\r\n    var result = scan(tryInvertedFirst ? inverted : binarized);\r\n    if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\r\n        result = scan(tryInvertedFirst ? binarized : inverted);\r\n    }\r\n    return result;\r\n}\r\njsQR.default = jsQR;\r\nexports.default = jsQR;\r\n\r\n\r\n/***/ }),\r\n/* 4 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitMatrix_1 = __webpack_require__(0);\r\nvar REGION_SIZE = 8;\r\nvar MIN_DYNAMIC_RANGE = 24;\r\nfunction numBetween(value, min, max) {\r\n    return value < min ? min : value > max ? max : value;\r\n}\r\n// Like BitMatrix but accepts arbitry Uint8 values\r\nvar Matrix = /** @class */ (function () {\r\n    function Matrix(width, height) {\r\n        this.width = width;\r\n        this.data = new Uint8ClampedArray(width * height);\r\n    }\r\n    Matrix.prototype.get = function (x, y) {\r\n        return this.data[y * this.width + x];\r\n    };\r\n    Matrix.prototype.set = function (x, y, value) {\r\n        this.data[y * this.width + x] = value;\r\n    };\r\n    return Matrix;\r\n}());\r\nfunction binarize(data, width, height, returnInverted) {\r\n    if (data.length !== width * height * 4) {\r\n        throw new Error(\"Malformed data passed to binarizer.\");\r\n    }\r\n    // Convert image to greyscale\r\n    var greyscalePixels = new Matrix(width, height);\r\n    for (var x = 0; x < width; x++) {\r\n        for (var y = 0; y < height; y++) {\r\n            var r = data[((y * width + x) * 4) + 0];\r\n            var g = data[((y * width + x) * 4) + 1];\r\n            var b = data[((y * width + x) * 4) + 2];\r\n            greyscalePixels.set(x, y, 0.2126 * r + 0.7152 * g + 0.0722 * b);\r\n        }\r\n    }\r\n    var horizontalRegionCount = Math.ceil(width / REGION_SIZE);\r\n    var verticalRegionCount = Math.ceil(height / REGION_SIZE);\r\n    var blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount);\r\n    for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\r\n        for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\r\n            var sum = 0;\r\n            var min = Infinity;\r\n            var max = 0;\r\n            for (var y = 0; y < REGION_SIZE; y++) {\r\n                for (var x = 0; x < REGION_SIZE; x++) {\r\n                    var pixelLumosity = greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\r\n                    sum += pixelLumosity;\r\n                    min = Math.min(min, pixelLumosity);\r\n                    max = Math.max(max, pixelLumosity);\r\n                }\r\n            }\r\n            var average = sum / (Math.pow(REGION_SIZE, 2));\r\n            if (max - min <= MIN_DYNAMIC_RANGE) {\r\n                // If variation within the block is low, assume this is a block with only light or only\r\n                // dark pixels. In that case we do not want to use the average, as it would divide this\r\n                // low contrast area into black and white pixels, essentially creating data out of noise.\r\n                //\r\n                // Default the blackpoint for these blocks to be half the min - effectively white them out\r\n                average = min / 2;\r\n                if (verticalRegion > 0 && hortizontalRegion > 0) {\r\n                    // Correct the \"white background\" assumption for blocks that have neighbors by comparing\r\n                    // the pixels in this block to the previously calculated black points. This is based on\r\n                    // the fact that dark barcode symbology is always surrounded by some amount of light\r\n                    // background for which reasonable black point estimates were made. The bp estimated at\r\n                    // the boundaries is used for the interior.\r\n                    // The (min < bp) is arbitrary but works better than other heuristics that were tried.\r\n                    var averageNeighborBlackPoint = (blackPoints.get(hortizontalRegion, verticalRegion - 1) +\r\n                        (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\r\n                        blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) / 4;\r\n                    if (min < averageNeighborBlackPoint) {\r\n                        average = averageNeighborBlackPoint;\r\n                    }\r\n                }\r\n            }\r\n            blackPoints.set(hortizontalRegion, verticalRegion, average);\r\n        }\r\n    }\r\n    var binarized = BitMatrix_1.BitMatrix.createEmpty(width, height);\r\n    var inverted = null;\r\n    if (returnInverted) {\r\n        inverted = BitMatrix_1.BitMatrix.createEmpty(width, height);\r\n    }\r\n    for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\r\n        for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\r\n            var left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\r\n            var top_1 = numBetween(verticalRegion, 2, verticalRegionCount - 3);\r\n            var sum = 0;\r\n            for (var xRegion = -2; xRegion <= 2; xRegion++) {\r\n                for (var yRegion = -2; yRegion <= 2; yRegion++) {\r\n                    sum += blackPoints.get(left + xRegion, top_1 + yRegion);\r\n                }\r\n            }\r\n            var threshold = sum / 25;\r\n            for (var xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\r\n                for (var yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\r\n                    var x = hortizontalRegion * REGION_SIZE + xRegion;\r\n                    var y = verticalRegion * REGION_SIZE + yRegion;\r\n                    var lum = greyscalePixels.get(x, y);\r\n                    binarized.set(x, y, lum <= threshold);\r\n                    if (returnInverted) {\r\n                        inverted.set(x, y, !(lum <= threshold));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (returnInverted) {\r\n        return { binarized: binarized, inverted: inverted };\r\n    }\r\n    return { binarized: binarized };\r\n}\r\nexports.binarize = binarize;\r\n\r\n\r\n/***/ }),\r\n/* 5 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitMatrix_1 = __webpack_require__(0);\r\nvar decodeData_1 = __webpack_require__(6);\r\nvar reedsolomon_1 = __webpack_require__(9);\r\nvar version_1 = __webpack_require__(10);\r\n// tslint:disable:no-bitwise\r\nfunction numBitsDiffering(x, y) {\r\n    var z = x ^ y;\r\n    var bitCount = 0;\r\n    while (z) {\r\n        bitCount++;\r\n        z &= z - 1;\r\n    }\r\n    return bitCount;\r\n}\r\nfunction pushBit(bit, byte) {\r\n    return (byte << 1) | bit;\r\n}\r\n// tslint:enable:no-bitwise\r\nvar FORMAT_INFO_TABLE = [\r\n    { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\r\n    { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\r\n    { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\r\n    { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\r\n    { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\r\n    { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\r\n    { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\r\n    { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\r\n    { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\r\n    { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\r\n    { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\r\n    { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\r\n    { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\r\n    { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\r\n    { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\r\n    { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\r\n    { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\r\n    { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\r\n    { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\r\n    { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\r\n    { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\r\n    { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\r\n    { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\r\n    { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\r\n    { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\r\n    { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\r\n    { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\r\n    { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\r\n    { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\r\n    { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\r\n    { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\r\n    { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\r\n];\r\nvar DATA_MASKS = [\r\n    function (p) { return ((p.y + p.x) % 2) === 0; },\r\n    function (p) { return (p.y % 2) === 0; },\r\n    function (p) { return p.x % 3 === 0; },\r\n    function (p) { return (p.y + p.x) % 3 === 0; },\r\n    function (p) { return (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0; },\r\n    function (p) { return ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0; },\r\n    function (p) { return ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0; },\r\n    function (p) { return ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0; },\r\n];\r\nfunction buildFunctionPatternMask(version) {\r\n    var dimension = 17 + 4 * version.versionNumber;\r\n    var matrix = BitMatrix_1.BitMatrix.createEmpty(dimension, dimension);\r\n    matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\r\n    matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\r\n    matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\r\n    // Alignment patterns\r\n    for (var _i = 0, _a = version.alignmentPatternCenters; _i < _a.length; _i++) {\r\n        var x = _a[_i];\r\n        for (var _b = 0, _c = version.alignmentPatternCenters; _b < _c.length; _b++) {\r\n            var y = _c[_b];\r\n            if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\r\n                matrix.setRegion(x - 2, y - 2, 5, 5, true);\r\n            }\r\n        }\r\n    }\r\n    matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\r\n    matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\r\n    if (version.versionNumber > 6) {\r\n        matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\r\n        matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\r\n    }\r\n    return matrix;\r\n}\r\nfunction readCodewords(matrix, version, formatInfo) {\r\n    var dataMask = DATA_MASKS[formatInfo.dataMask];\r\n    var dimension = matrix.height;\r\n    var functionPatternMask = buildFunctionPatternMask(version);\r\n    var codewords = [];\r\n    var currentByte = 0;\r\n    var bitsRead = 0;\r\n    // Read columns in pairs, from right to left\r\n    var readingUp = true;\r\n    for (var columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\r\n        if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\r\n            columnIndex--;\r\n        }\r\n        for (var i = 0; i < dimension; i++) {\r\n            var y = readingUp ? dimension - 1 - i : i;\r\n            for (var columnOffset = 0; columnOffset < 2; columnOffset++) {\r\n                var x = columnIndex - columnOffset;\r\n                if (!functionPatternMask.get(x, y)) {\r\n                    bitsRead++;\r\n                    var bit = matrix.get(x, y);\r\n                    if (dataMask({ y: y, x: x })) {\r\n                        bit = !bit;\r\n                    }\r\n                    currentByte = pushBit(bit, currentByte);\r\n                    if (bitsRead === 8) { // Whole bytes\r\n                        codewords.push(currentByte);\r\n                        bitsRead = 0;\r\n                        currentByte = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        readingUp = !readingUp;\r\n    }\r\n    return codewords;\r\n}\r\nfunction readVersion(matrix) {\r\n    var dimension = matrix.height;\r\n    var provisionalVersion = Math.floor((dimension - 17) / 4);\r\n    if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\r\n        return version_1.VERSIONS[provisionalVersion - 1];\r\n    }\r\n    var topRightVersionBits = 0;\r\n    for (var y = 5; y >= 0; y--) {\r\n        for (var x = dimension - 9; x >= dimension - 11; x--) {\r\n            topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\r\n        }\r\n    }\r\n    var bottomLeftVersionBits = 0;\r\n    for (var x = 5; x >= 0; x--) {\r\n        for (var y = dimension - 9; y >= dimension - 11; y--) {\r\n            bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\r\n        }\r\n    }\r\n    var bestDifference = Infinity;\r\n    var bestVersion;\r\n    for (var _i = 0, VERSIONS_1 = version_1.VERSIONS; _i < VERSIONS_1.length; _i++) {\r\n        var version = VERSIONS_1[_i];\r\n        if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\r\n            return version;\r\n        }\r\n        var difference = numBitsDiffering(topRightVersionBits, version.infoBits);\r\n        if (difference < bestDifference) {\r\n            bestVersion = version;\r\n            bestDifference = difference;\r\n        }\r\n        difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\r\n        if (difference < bestDifference) {\r\n            bestVersion = version;\r\n            bestDifference = difference;\r\n        }\r\n    }\r\n    // We can tolerate up to 3 bits of error since no two version info codewords will\r\n    // differ in less than 8 bits.\r\n    if (bestDifference <= 3) {\r\n        return bestVersion;\r\n    }\r\n}\r\nfunction readFormatInformation(matrix) {\r\n    var topLeftFormatInfoBits = 0;\r\n    for (var x = 0; x <= 8; x++) {\r\n        if (x !== 6) { // Skip timing pattern bit\r\n            topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\r\n        }\r\n    }\r\n    for (var y = 7; y >= 0; y--) {\r\n        if (y !== 6) { // Skip timing pattern bit\r\n            topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\r\n        }\r\n    }\r\n    var dimension = matrix.height;\r\n    var topRightBottomRightFormatInfoBits = 0;\r\n    for (var y = dimension - 1; y >= dimension - 7; y--) { // bottom left\r\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\r\n    }\r\n    for (var x = dimension - 8; x < dimension; x++) { // top right\r\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\r\n    }\r\n    var bestDifference = Infinity;\r\n    var bestFormatInfo = null;\r\n    for (var _i = 0, FORMAT_INFO_TABLE_1 = FORMAT_INFO_TABLE; _i < FORMAT_INFO_TABLE_1.length; _i++) {\r\n        var _a = FORMAT_INFO_TABLE_1[_i], bits = _a.bits, formatInfo = _a.formatInfo;\r\n        if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\r\n            return formatInfo;\r\n        }\r\n        var difference = numBitsDiffering(topLeftFormatInfoBits, bits);\r\n        if (difference < bestDifference) {\r\n            bestFormatInfo = formatInfo;\r\n            bestDifference = difference;\r\n        }\r\n        if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\r\n            difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\r\n            if (difference < bestDifference) {\r\n                bestFormatInfo = formatInfo;\r\n                bestDifference = difference;\r\n            }\r\n        }\r\n    }\r\n    // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\r\n    if (bestDifference <= 3) {\r\n        return bestFormatInfo;\r\n    }\r\n    return null;\r\n}\r\nfunction getDataBlocks(codewords, version, ecLevel) {\r\n    var ecInfo = version.errorCorrectionLevels[ecLevel];\r\n    var dataBlocks = [];\r\n    var totalCodewords = 0;\r\n    ecInfo.ecBlocks.forEach(function (block) {\r\n        for (var i = 0; i < block.numBlocks; i++) {\r\n            dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\r\n            totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\r\n        }\r\n    });\r\n    // In some cases the QR code will be malformed enough that we pull off more or less than we should.\r\n    // If we pull off less there's nothing we can do.\r\n    // If we pull off more we can safely truncate\r\n    if (codewords.length < totalCodewords) {\r\n        return null;\r\n    }\r\n    codewords = codewords.slice(0, totalCodewords);\r\n    var shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\r\n    // Pull codewords to fill the blocks up to the minimum size\r\n    for (var i = 0; i < shortBlockSize; i++) {\r\n        for (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\r\n            var dataBlock = dataBlocks_1[_i];\r\n            dataBlock.codewords.push(codewords.shift());\r\n        }\r\n    }\r\n    // If there are any large blocks, pull codewords to fill the last element of those\r\n    if (ecInfo.ecBlocks.length > 1) {\r\n        var smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\r\n        var largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\r\n        for (var i = 0; i < largeBlockCount; i++) {\r\n            dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\r\n        }\r\n    }\r\n    // Add the rest of the codewords to the blocks. These are the error correction codewords.\r\n    while (codewords.length > 0) {\r\n        for (var _a = 0, dataBlocks_2 = dataBlocks; _a < dataBlocks_2.length; _a++) {\r\n            var dataBlock = dataBlocks_2[_a];\r\n            dataBlock.codewords.push(codewords.shift());\r\n        }\r\n    }\r\n    return dataBlocks;\r\n}\r\nfunction decodeMatrix(matrix) {\r\n    var version = readVersion(matrix);\r\n    if (!version) {\r\n        return null;\r\n    }\r\n    var formatInfo = readFormatInformation(matrix);\r\n    if (!formatInfo) {\r\n        return null;\r\n    }\r\n    var codewords = readCodewords(matrix, version, formatInfo);\r\n    var dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\r\n    if (!dataBlocks) {\r\n        return null;\r\n    }\r\n    // Count total number of data bytes\r\n    var totalBytes = dataBlocks.reduce(function (a, b) { return a + b.numDataCodewords; }, 0);\r\n    var resultBytes = new Uint8ClampedArray(totalBytes);\r\n    var resultIndex = 0;\r\n    for (var _i = 0, dataBlocks_3 = dataBlocks; _i < dataBlocks_3.length; _i++) {\r\n        var dataBlock = dataBlocks_3[_i];\r\n        var correctedBytes = reedsolomon_1.decode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\r\n        if (!correctedBytes) {\r\n            return null;\r\n        }\r\n        for (var i = 0; i < dataBlock.numDataCodewords; i++) {\r\n            resultBytes[resultIndex++] = correctedBytes[i];\r\n        }\r\n    }\r\n    try {\r\n        return decodeData_1.decode(resultBytes, version.versionNumber);\r\n    }\r\n    catch (_a) {\r\n        return null;\r\n    }\r\n}\r\nfunction decode(matrix) {\r\n    if (matrix == null) {\r\n        return null;\r\n    }\r\n    var result = decodeMatrix(matrix);\r\n    if (result) {\r\n        return result;\r\n    }\r\n    // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\r\n    for (var x = 0; x < matrix.width; x++) {\r\n        for (var y = x + 1; y < matrix.height; y++) {\r\n            if (matrix.get(x, y) !== matrix.get(y, x)) {\r\n                matrix.set(x, y, !matrix.get(x, y));\r\n                matrix.set(y, x, !matrix.get(y, x));\r\n            }\r\n        }\r\n    }\r\n    return decodeMatrix(matrix);\r\n}\r\nexports.decode = decode;\r\n\r\n\r\n/***/ }),\r\n/* 6 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-bitwise\r\nvar BitStream_1 = __webpack_require__(7);\r\nvar shiftJISTable_1 = __webpack_require__(8);\r\nvar Mode;\r\n(function (Mode) {\r\n    Mode[\"Numeric\"] = \"numeric\";\r\n    Mode[\"Alphanumeric\"] = \"alphanumeric\";\r\n    Mode[\"Byte\"] = \"byte\";\r\n    Mode[\"Kanji\"] = \"kanji\";\r\n    Mode[\"ECI\"] = \"eci\";\r\n})(Mode = exports.Mode || (exports.Mode = {}));\r\nvar ModeByte;\r\n(function (ModeByte) {\r\n    ModeByte[ModeByte[\"Terminator\"] = 0] = \"Terminator\";\r\n    ModeByte[ModeByte[\"Numeric\"] = 1] = \"Numeric\";\r\n    ModeByte[ModeByte[\"Alphanumeric\"] = 2] = \"Alphanumeric\";\r\n    ModeByte[ModeByte[\"Byte\"] = 4] = \"Byte\";\r\n    ModeByte[ModeByte[\"Kanji\"] = 8] = \"Kanji\";\r\n    ModeByte[ModeByte[\"ECI\"] = 7] = \"ECI\";\r\n    // StructuredAppend = 0x3,\r\n    // FNC1FirstPosition = 0x5,\r\n    // FNC1SecondPosition = 0x9,\r\n})(ModeByte || (ModeByte = {}));\r\nfunction decodeNumeric(stream, size) {\r\n    var bytes = [];\r\n    var text = \"\";\r\n    var characterCountSize = [10, 12, 14][size];\r\n    var length = stream.readBits(characterCountSize);\r\n    // Read digits in groups of 3\r\n    while (length >= 3) {\r\n        var num = stream.readBits(10);\r\n        if (num >= 1000) {\r\n            throw new Error(\"Invalid numeric value above 999\");\r\n        }\r\n        var a = Math.floor(num / 100);\r\n        var b = Math.floor(num / 10) % 10;\r\n        var c = num % 10;\r\n        bytes.push(48 + a, 48 + b, 48 + c);\r\n        text += a.toString() + b.toString() + c.toString();\r\n        length -= 3;\r\n    }\r\n    // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\r\n    if (length === 2) {\r\n        var num = stream.readBits(7);\r\n        if (num >= 100) {\r\n            throw new Error(\"Invalid numeric value above 99\");\r\n        }\r\n        var a = Math.floor(num / 10);\r\n        var b = num % 10;\r\n        bytes.push(48 + a, 48 + b);\r\n        text += a.toString() + b.toString();\r\n    }\r\n    else if (length === 1) {\r\n        var num = stream.readBits(4);\r\n        if (num >= 10) {\r\n            throw new Error(\"Invalid numeric value above 9\");\r\n        }\r\n        bytes.push(48 + num);\r\n        text += num.toString();\r\n    }\r\n    return { bytes: bytes, text: text };\r\n}\r\nvar AlphanumericCharacterCodes = [\r\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\r\n    \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\r\n    \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\r\n    \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n    \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\r\n];\r\nfunction decodeAlphanumeric(stream, size) {\r\n    var bytes = [];\r\n    var text = \"\";\r\n    var characterCountSize = [9, 11, 13][size];\r\n    var length = stream.readBits(characterCountSize);\r\n    while (length >= 2) {\r\n        var v = stream.readBits(11);\r\n        var a = Math.floor(v / 45);\r\n        var b = v % 45;\r\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\r\n        text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\r\n        length -= 2;\r\n    }\r\n    if (length === 1) {\r\n        var a = stream.readBits(6);\r\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\r\n        text += AlphanumericCharacterCodes[a];\r\n    }\r\n    return { bytes: bytes, text: text };\r\n}\r\nfunction decodeByte(stream, size) {\r\n    var bytes = [];\r\n    var text = \"\";\r\n    var characterCountSize = [8, 16, 16][size];\r\n    var length = stream.readBits(characterCountSize);\r\n    for (var i = 0; i < length; i++) {\r\n        var b = stream.readBits(8);\r\n        bytes.push(b);\r\n    }\r\n    try {\r\n        text += decodeURIComponent(bytes.map(function (b) { return \"%\" + (\"0\" + b.toString(16)).substr(-2); }).join(\"\"));\r\n    }\r\n    catch (_a) {\r\n        // failed to decode\r\n    }\r\n    return { bytes: bytes, text: text };\r\n}\r\nfunction decodeKanji(stream, size) {\r\n    var bytes = [];\r\n    var text = \"\";\r\n    var characterCountSize = [8, 10, 12][size];\r\n    var length = stream.readBits(characterCountSize);\r\n    for (var i = 0; i < length; i++) {\r\n        var k = stream.readBits(13);\r\n        var c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\r\n        if (c < 0x1F00) {\r\n            c += 0x8140;\r\n        }\r\n        else {\r\n            c += 0xC140;\r\n        }\r\n        bytes.push(c >> 8, c & 0xFF);\r\n        text += String.fromCharCode(shiftJISTable_1.shiftJISTable[c]);\r\n    }\r\n    return { bytes: bytes, text: text };\r\n}\r\nfunction decode(data, version) {\r\n    var _a, _b, _c, _d;\r\n    var stream = new BitStream_1.BitStream(data);\r\n    // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\r\n    var size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\r\n    var result = {\r\n        text: \"\",\r\n        bytes: [],\r\n        chunks: [],\r\n        version: version,\r\n    };\r\n    while (stream.available() >= 4) {\r\n        var mode = stream.readBits(4);\r\n        if (mode === ModeByte.Terminator) {\r\n            return result;\r\n        }\r\n        else if (mode === ModeByte.ECI) {\r\n            if (stream.readBits(1) === 0) {\r\n                result.chunks.push({\r\n                    type: Mode.ECI,\r\n                    assignmentNumber: stream.readBits(7),\r\n                });\r\n            }\r\n            else if (stream.readBits(1) === 0) {\r\n                result.chunks.push({\r\n                    type: Mode.ECI,\r\n                    assignmentNumber: stream.readBits(14),\r\n                });\r\n            }\r\n            else if (stream.readBits(1) === 0) {\r\n                result.chunks.push({\r\n                    type: Mode.ECI,\r\n                    assignmentNumber: stream.readBits(21),\r\n                });\r\n            }\r\n            else {\r\n                // ECI data seems corrupted\r\n                result.chunks.push({\r\n                    type: Mode.ECI,\r\n                    assignmentNumber: -1,\r\n                });\r\n            }\r\n        }\r\n        else if (mode === ModeByte.Numeric) {\r\n            var numericResult = decodeNumeric(stream, size);\r\n            result.text += numericResult.text;\r\n            (_a = result.bytes).push.apply(_a, numericResult.bytes);\r\n            result.chunks.push({\r\n                type: Mode.Numeric,\r\n                text: numericResult.text,\r\n            });\r\n        }\r\n        else if (mode === ModeByte.Alphanumeric) {\r\n            var alphanumericResult = decodeAlphanumeric(stream, size);\r\n            result.text += alphanumericResult.text;\r\n            (_b = result.bytes).push.apply(_b, alphanumericResult.bytes);\r\n            result.chunks.push({\r\n                type: Mode.Alphanumeric,\r\n                text: alphanumericResult.text,\r\n            });\r\n        }\r\n        else if (mode === ModeByte.Byte) {\r\n            var byteResult = decodeByte(stream, size);\r\n            result.text += byteResult.text;\r\n            (_c = result.bytes).push.apply(_c, byteResult.bytes);\r\n            result.chunks.push({\r\n                type: Mode.Byte,\r\n                bytes: byteResult.bytes,\r\n                text: byteResult.text,\r\n            });\r\n        }\r\n        else if (mode === ModeByte.Kanji) {\r\n            var kanjiResult = decodeKanji(stream, size);\r\n            result.text += kanjiResult.text;\r\n            (_d = result.bytes).push.apply(_d, kanjiResult.bytes);\r\n            result.chunks.push({\r\n                type: Mode.Kanji,\r\n                bytes: kanjiResult.bytes,\r\n                text: kanjiResult.text,\r\n            });\r\n        }\r\n    }\r\n    // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\r\n    if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\r\n        return result;\r\n    }\r\n}\r\nexports.decode = decode;\r\n\r\n\r\n/***/ }),\r\n/* 7 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n// tslint:disable:no-bitwise\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitStream = /** @class */ (function () {\r\n    function BitStream(bytes) {\r\n        this.byteOffset = 0;\r\n        this.bitOffset = 0;\r\n        this.bytes = bytes;\r\n    }\r\n    BitStream.prototype.readBits = function (numBits) {\r\n        if (numBits < 1 || numBits > 32 || numBits > this.available()) {\r\n            throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\r\n        }\r\n        var result = 0;\r\n        // First, read remainder from current byte\r\n        if (this.bitOffset > 0) {\r\n            var bitsLeft = 8 - this.bitOffset;\r\n            var toRead = numBits < bitsLeft ? numBits : bitsLeft;\r\n            var bitsToNotRead = bitsLeft - toRead;\r\n            var mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\r\n            result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\r\n            numBits -= toRead;\r\n            this.bitOffset += toRead;\r\n            if (this.bitOffset === 8) {\r\n                this.bitOffset = 0;\r\n                this.byteOffset++;\r\n            }\r\n        }\r\n        // Next read whole bytes\r\n        if (numBits > 0) {\r\n            while (numBits >= 8) {\r\n                result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\r\n                this.byteOffset++;\r\n                numBits -= 8;\r\n            }\r\n            // Finally read a partial byte\r\n            if (numBits > 0) {\r\n                var bitsToNotRead = 8 - numBits;\r\n                var mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\r\n                result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\r\n                this.bitOffset += numBits;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    BitStream.prototype.available = function () {\r\n        return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\r\n    };\r\n    return BitStream;\r\n}());\r\nexports.BitStream = BitStream;\r\n\r\n\r\n/***/ }),\r\n/* 8 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shiftJISTable = {\r\n    0x20: 0x0020,\r\n    0x21: 0x0021,\r\n    0x22: 0x0022,\r\n    0x23: 0x0023,\r\n    0x24: 0x0024,\r\n    0x25: 0x0025,\r\n    0x26: 0x0026,\r\n    0x27: 0x0027,\r\n    0x28: 0x0028,\r\n    0x29: 0x0029,\r\n    0x2A: 0x002A,\r\n    0x2B: 0x002B,\r\n    0x2C: 0x002C,\r\n    0x2D: 0x002D,\r\n    0x2E: 0x002E,\r\n    0x2F: 0x002F,\r\n    0x30: 0x0030,\r\n    0x31: 0x0031,\r\n    0x32: 0x0032,\r\n    0x33: 0x0033,\r\n    0x34: 0x0034,\r\n    0x35: 0x0035,\r\n    0x36: 0x0036,\r\n    0x37: 0x0037,\r\n    0x38: 0x0038,\r\n    0x39: 0x0039,\r\n    0x3A: 0x003A,\r\n    0x3B: 0x003B,\r\n    0x3C: 0x003C,\r\n    0x3D: 0x003D,\r\n    0x3E: 0x003E,\r\n    0x3F: 0x003F,\r\n    0x40: 0x0040,\r\n    0x41: 0x0041,\r\n    0x42: 0x0042,\r\n    0x43: 0x0043,\r\n    0x44: 0x0044,\r\n    0x45: 0x0045,\r\n    0x46: 0x0046,\r\n    0x47: 0x0047,\r\n    0x48: 0x0048,\r\n    0x49: 0x0049,\r\n    0x4A: 0x004A,\r\n    0x4B: 0x004B,\r\n    0x4C: 0x004C,\r\n    0x4D: 0x004D,\r\n    0x4E: 0x004E,\r\n    0x4F: 0x004F,\r\n    0x50: 0x0050,\r\n    0x51: 0x0051,\r\n    0x52: 0x0052,\r\n    0x53: 0x0053,\r\n    0x54: 0x0054,\r\n    0x55: 0x0055,\r\n    0x56: 0x0056,\r\n    0x57: 0x0057,\r\n    0x58: 0x0058,\r\n    0x59: 0x0059,\r\n    0x5A: 0x005A,\r\n    0x5B: 0x005B,\r\n    0x5C: 0x00A5,\r\n    0x5D: 0x005D,\r\n    0x5E: 0x005E,\r\n    0x5F: 0x005F,\r\n    0x60: 0x0060,\r\n    0x61: 0x0061,\r\n    0x62: 0x0062,\r\n    0x63: 0x0063,\r\n    0x64: 0x0064,\r\n    0x65: 0x0065,\r\n    0x66: 0x0066,\r\n    0x67: 0x0067,\r\n    0x68: 0x0068,\r\n    0x69: 0x0069,\r\n    0x6A: 0x006A,\r\n    0x6B: 0x006B,\r\n    0x6C: 0x006C,\r\n    0x6D: 0x006D,\r\n    0x6E: 0x006E,\r\n    0x6F: 0x006F,\r\n    0x70: 0x0070,\r\n    0x71: 0x0071,\r\n    0x72: 0x0072,\r\n    0x73: 0x0073,\r\n    0x74: 0x0074,\r\n    0x75: 0x0075,\r\n    0x76: 0x0076,\r\n    0x77: 0x0077,\r\n    0x78: 0x0078,\r\n    0x79: 0x0079,\r\n    0x7A: 0x007A,\r\n    0x7B: 0x007B,\r\n    0x7C: 0x007C,\r\n    0x7D: 0x007D,\r\n    0x7E: 0x203E,\r\n    0x8140: 0x3000,\r\n    0x8141: 0x3001,\r\n    0x8142: 0x3002,\r\n    0x8143: 0xFF0C,\r\n    0x8144: 0xFF0E,\r\n    0x8145: 0x30FB,\r\n    0x8146: 0xFF1A,\r\n    0x8147: 0xFF1B,\r\n    0x8148: 0xFF1F,\r\n    0x8149: 0xFF01,\r\n    0x814A: 0x309B,\r\n    0x814B: 0x309C,\r\n    0x814C: 0x00B4,\r\n    0x814D: 0xFF40,\r\n    0x814E: 0x00A8,\r\n    0x814F: 0xFF3E,\r\n    0x8150: 0xFFE3,\r\n    0x8151: 0xFF3F,\r\n    0x8152: 0x30FD,\r\n    0x8153: 0x30FE,\r\n    0x8154: 0x309D,\r\n    0x8155: 0x309E,\r\n    0x8156: 0x3003,\r\n    0x8157: 0x4EDD,\r\n    0x8158: 0x3005,\r\n    0x8159: 0x3006,\r\n    0x815A: 0x3007,\r\n    0x815B: 0x30FC,\r\n    0x815C: 0x2015,\r\n    0x815D: 0x2010,\r\n    0x815E: 0xFF0F,\r\n    0x815F: 0x005C,\r\n    0x8160: 0x301C,\r\n    0x8161: 0x2016,\r\n    0x8162: 0xFF5C,\r\n    0x8163: 0x2026,\r\n    0x8164: 0x2025,\r\n    0x8165: 0x2018,\r\n    0x8166: 0x2019,\r\n    0x8167: 0x201C,\r\n    0x8168: 0x201D,\r\n    0x8169: 0xFF08,\r\n    0x816A: 0xFF09,\r\n    0x816B: 0x3014,\r\n    0x816C: 0x3015,\r\n    0x816D: 0xFF3B,\r\n    0x816E: 0xFF3D,\r\n    0x816F: 0xFF5B,\r\n    0x8170: 0xFF5D,\r\n    0x8171: 0x3008,\r\n    0x8172: 0x3009,\r\n    0x8173: 0x300A,\r\n    0x8174: 0x300B,\r\n    0x8175: 0x300C,\r\n    0x8176: 0x300D,\r\n    0x8177: 0x300E,\r\n    0x8178: 0x300F,\r\n    0x8179: 0x3010,\r\n    0x817A: 0x3011,\r\n    0x817B: 0xFF0B,\r\n    0x817C: 0x2212,\r\n    0x817D: 0x00B1,\r\n    0x817E: 0x00D7,\r\n    0x8180: 0x00F7,\r\n    0x8181: 0xFF1D,\r\n    0x8182: 0x2260,\r\n    0x8183: 0xFF1C,\r\n    0x8184: 0xFF1E,\r\n    0x8185: 0x2266,\r\n    0x8186: 0x2267,\r\n    0x8187: 0x221E,\r\n    0x8188: 0x2234,\r\n    0x8189: 0x2642,\r\n    0x818A: 0x2640,\r\n    0x818B: 0x00B0,\r\n    0x818C: 0x2032,\r\n    0x818D: 0x2033,\r\n    0x818E: 0x2103,\r\n    0x818F: 0xFFE5,\r\n    0x8190: 0xFF04,\r\n    0x8191: 0x00A2,\r\n    0x8192: 0x00A3,\r\n    0x8193: 0xFF05,\r\n    0x8194: 0xFF03,\r\n    0x8195: 0xFF06,\r\n    0x8196: 0xFF0A,\r\n    0x8197: 0xFF20,\r\n    0x8198: 0x00A7,\r\n    0x8199: 0x2606,\r\n    0x819A: 0x2605,\r\n    0x819B: 0x25CB,\r\n    0x819C: 0x25CF,\r\n    0x819D: 0x25CE,\r\n    0x819E: 0x25C7,\r\n    0x819F: 0x25C6,\r\n    0x81A0: 0x25A1,\r\n    0x81A1: 0x25A0,\r\n    0x81A2: 0x25B3,\r\n    0x81A3: 0x25B2,\r\n    0x81A4: 0x25BD,\r\n    0x81A5: 0x25BC,\r\n    0x81A6: 0x203B,\r\n    0x81A7: 0x3012,\r\n    0x81A8: 0x2192,\r\n    0x81A9: 0x2190,\r\n    0x81AA: 0x2191,\r\n    0x81AB: 0x2193,\r\n    0x81AC: 0x3013,\r\n    0x81B8: 0x2208,\r\n    0x81B9: 0x220B,\r\n    0x81BA: 0x2286,\r\n    0x81BB: 0x2287,\r\n    0x81BC: 0x2282,\r\n    0x81BD: 0x2283,\r\n    0x81BE: 0x222A,\r\n    0x81BF: 0x2229,\r\n    0x81C8: 0x2227,\r\n    0x81C9: 0x2228,\r\n    0x81CA: 0x00AC,\r\n    0x81CB: 0x21D2,\r\n    0x81CC: 0x21D4,\r\n    0x81CD: 0x2200,\r\n    0x81CE: 0x2203,\r\n    0x81DA: 0x2220,\r\n    0x81DB: 0x22A5,\r\n    0x81DC: 0x2312,\r\n    0x81DD: 0x2202,\r\n    0x81DE: 0x2207,\r\n    0x81DF: 0x2261,\r\n    0x81E0: 0x2252,\r\n    0x81E1: 0x226A,\r\n    0x81E2: 0x226B,\r\n    0x81E3: 0x221A,\r\n    0x81E4: 0x223D,\r\n    0x81E5: 0x221D,\r\n    0x81E6: 0x2235,\r\n    0x81E7: 0x222B,\r\n    0x81E8: 0x222C,\r\n    0x81F0: 0x212B,\r\n    0x81F1: 0x2030,\r\n    0x81F2: 0x266F,\r\n    0x81F3: 0x266D,\r\n    0x81F4: 0x266A,\r\n    0x81F5: 0x2020,\r\n    0x81F6: 0x2021,\r\n    0x81F7: 0x00B6,\r\n    0x81FC: 0x25EF,\r\n    0x824F: 0xFF10,\r\n    0x8250: 0xFF11,\r\n    0x8251: 0xFF12,\r\n    0x8252: 0xFF13,\r\n    0x8253: 0xFF14,\r\n    0x8254: 0xFF15,\r\n    0x8255: 0xFF16,\r\n    0x8256: 0xFF17,\r\n    0x8257: 0xFF18,\r\n    0x8258: 0xFF19,\r\n    0x8260: 0xFF21,\r\n    0x8261: 0xFF22,\r\n    0x8262: 0xFF23,\r\n    0x8263: 0xFF24,\r\n    0x8264: 0xFF25,\r\n    0x8265: 0xFF26,\r\n    0x8266: 0xFF27,\r\n    0x8267: 0xFF28,\r\n    0x8268: 0xFF29,\r\n    0x8269: 0xFF2A,\r\n    0x826A: 0xFF2B,\r\n    0x826B: 0xFF2C,\r\n    0x826C: 0xFF2D,\r\n    0x826D: 0xFF2E,\r\n    0x826E: 0xFF2F,\r\n    0x826F: 0xFF30,\r\n    0x8270: 0xFF31,\r\n    0x8271: 0xFF32,\r\n    0x8272: 0xFF33,\r\n    0x8273: 0xFF34,\r\n    0x8274: 0xFF35,\r\n    0x8275: 0xFF36,\r\n    0x8276: 0xFF37,\r\n    0x8277: 0xFF38,\r\n    0x8278: 0xFF39,\r\n    0x8279: 0xFF3A,\r\n    0x8281: 0xFF41,\r\n    0x8282: 0xFF42,\r\n    0x8283: 0xFF43,\r\n    0x8284: 0xFF44,\r\n    0x8285: 0xFF45,\r\n    0x8286: 0xFF46,\r\n    0x8287: 0xFF47,\r\n    0x8288: 0xFF48,\r\n    0x8289: 0xFF49,\r\n    0x828A: 0xFF4A,\r\n    0x828B: 0xFF4B,\r\n    0x828C: 0xFF4C,\r\n    0x828D: 0xFF4D,\r\n    0x828E: 0xFF4E,\r\n    0x828F: 0xFF4F,\r\n    0x8290: 0xFF50,\r\n    0x8291: 0xFF51,\r\n    0x8292: 0xFF52,\r\n    0x8293: 0xFF53,\r\n    0x8294: 0xFF54,\r\n    0x8295: 0xFF55,\r\n    0x8296: 0xFF56,\r\n    0x8297: 0xFF57,\r\n    0x8298: 0xFF58,\r\n    0x8299: 0xFF59,\r\n    0x829A: 0xFF5A,\r\n    0x829F: 0x3041,\r\n    0x82A0: 0x3042,\r\n    0x82A1: 0x3043,\r\n    0x82A2: 0x3044,\r\n    0x82A3: 0x3045,\r\n    0x82A4: 0x3046,\r\n    0x82A5: 0x3047,\r\n    0x82A6: 0x3048,\r\n    0x82A7: 0x3049,\r\n    0x82A8: 0x304A,\r\n    0x82A9: 0x304B,\r\n    0x82AA: 0x304C,\r\n    0x82AB: 0x304D,\r\n    0x82AC: 0x304E,\r\n    0x82AD: 0x304F,\r\n    0x82AE: 0x3050,\r\n    0x82AF: 0x3051,\r\n    0x82B0: 0x3052,\r\n    0x82B1: 0x3053,\r\n    0x82B2: 0x3054,\r\n    0x82B3: 0x3055,\r\n    0x82B4: 0x3056,\r\n    0x82B5: 0x3057,\r\n    0x82B6: 0x3058,\r\n    0x82B7: 0x3059,\r\n    0x82B8: 0x305A,\r\n    0x82B9: 0x305B,\r\n    0x82BA: 0x305C,\r\n    0x82BB: 0x305D,\r\n    0x82BC: 0x305E,\r\n    0x82BD: 0x305F,\r\n    0x82BE: 0x3060,\r\n    0x82BF: 0x3061,\r\n    0x82C0: 0x3062,\r\n    0x82C1: 0x3063,\r\n    0x82C2: 0x3064,\r\n    0x82C3: 0x3065,\r\n    0x82C4: 0x3066,\r\n    0x82C5: 0x3067,\r\n    0x82C6: 0x3068,\r\n    0x82C7: 0x3069,\r\n    0x82C8: 0x306A,\r\n    0x82C9: 0x306B,\r\n    0x82CA: 0x306C,\r\n    0x82CB: 0x306D,\r\n    0x82CC: 0x306E,\r\n    0x82CD: 0x306F,\r\n    0x82CE: 0x3070,\r\n    0x82CF: 0x3071,\r\n    0x82D0: 0x3072,\r\n    0x82D1: 0x3073,\r\n    0x82D2: 0x3074,\r\n    0x82D3: 0x3075,\r\n    0x82D4: 0x3076,\r\n    0x82D5: 0x3077,\r\n    0x82D6: 0x3078,\r\n    0x82D7: 0x3079,\r\n    0x82D8: 0x307A,\r\n    0x82D9: 0x307B,\r\n    0x82DA: 0x307C,\r\n    0x82DB: 0x307D,\r\n    0x82DC: 0x307E,\r\n    0x82DD: 0x307F,\r\n    0x82DE: 0x3080,\r\n    0x82DF: 0x3081,\r\n    0x82E0: 0x3082,\r\n    0x82E1: 0x3083,\r\n    0x82E2: 0x3084,\r\n    0x82E3: 0x3085,\r\n    0x82E4: 0x3086,\r\n    0x82E5: 0x3087,\r\n    0x82E6: 0x3088,\r\n    0x82E7: 0x3089,\r\n    0x82E8: 0x308A,\r\n    0x82E9: 0x308B,\r\n    0x82EA: 0x308C,\r\n    0x82EB: 0x308D,\r\n    0x82EC: 0x308E,\r\n    0x82ED: 0x308F,\r\n    0x82EE: 0x3090,\r\n    0x82EF: 0x3091,\r\n    0x82F0: 0x3092,\r\n    0x82F1: 0x3093,\r\n    0x8340: 0x30A1,\r\n    0x8341: 0x30A2,\r\n    0x8342: 0x30A3,\r\n    0x8343: 0x30A4,\r\n    0x8344: 0x30A5,\r\n    0x8345: 0x30A6,\r\n    0x8346: 0x30A7,\r\n    0x8347: 0x30A8,\r\n    0x8348: 0x30A9,\r\n    0x8349: 0x30AA,\r\n    0x834A: 0x30AB,\r\n    0x834B: 0x30AC,\r\n    0x834C: 0x30AD,\r\n    0x834D: 0x30AE,\r\n    0x834E: 0x30AF,\r\n    0x834F: 0x30B0,\r\n    0x8350: 0x30B1,\r\n    0x8351: 0x30B2,\r\n    0x8352: 0x30B3,\r\n    0x8353: 0x30B4,\r\n    0x8354: 0x30B5,\r\n    0x8355: 0x30B6,\r\n    0x8356: 0x30B7,\r\n    0x8357: 0x30B8,\r\n    0x8358: 0x30B9,\r\n    0x8359: 0x30BA,\r\n    0x835A: 0x30BB,\r\n    0x835B: 0x30BC,\r\n    0x835C: 0x30BD,\r\n    0x835D: 0x30BE,\r\n    0x835E: 0x30BF,\r\n    0x835F: 0x30C0,\r\n    0x8360: 0x30C1,\r\n    0x8361: 0x30C2,\r\n    0x8362: 0x30C3,\r\n    0x8363: 0x30C4,\r\n    0x8364: 0x30C5,\r\n    0x8365: 0x30C6,\r\n    0x8366: 0x30C7,\r\n    0x8367: 0x30C8,\r\n    0x8368: 0x30C9,\r\n    0x8369: 0x30CA,\r\n    0x836A: 0x30CB,\r\n    0x836B: 0x30CC,\r\n    0x836C: 0x30CD,\r\n    0x836D: 0x30CE,\r\n    0x836E: 0x30CF,\r\n    0x836F: 0x30D0,\r\n    0x8370: 0x30D1,\r\n    0x8371: 0x30D2,\r\n    0x8372: 0x30D3,\r\n    0x8373: 0x30D4,\r\n    0x8374: 0x30D5,\r\n    0x8375: 0x30D6,\r\n    0x8376: 0x30D7,\r\n    0x8377: 0x30D8,\r\n    0x8378: 0x30D9,\r\n    0x8379: 0x30DA,\r\n    0x837A: 0x30DB,\r\n    0x837B: 0x30DC,\r\n    0x837C: 0x30DD,\r\n    0x837D: 0x30DE,\r\n    0x837E: 0x30DF,\r\n    0x8380: 0x30E0,\r\n    0x8381: 0x30E1,\r\n    0x8382: 0x30E2,\r\n    0x8383: 0x30E3,\r\n    0x8384: 0x30E4,\r\n    0x8385: 0x30E5,\r\n    0x8386: 0x30E6,\r\n    0x8387: 0x30E7,\r\n    0x8388: 0x30E8,\r\n    0x8389: 0x30E9,\r\n    0x838A: 0x30EA,\r\n    0x838B: 0x30EB,\r\n    0x838C: 0x30EC,\r\n    0x838D: 0x30ED,\r\n    0x838E: 0x30EE,\r\n    0x838F: 0x30EF,\r\n    0x8390: 0x30F0,\r\n    0x8391: 0x30F1,\r\n    0x8392: 0x30F2,\r\n    0x8393: 0x30F3,\r\n    0x8394: 0x30F4,\r\n    0x8395: 0x30F5,\r\n    0x8396: 0x30F6,\r\n    0x839F: 0x0391,\r\n    0x83A0: 0x0392,\r\n    0x83A1: 0x0393,\r\n    0x83A2: 0x0394,\r\n    0x83A3: 0x0395,\r\n    0x83A4: 0x0396,\r\n    0x83A5: 0x0397,\r\n    0x83A6: 0x0398,\r\n    0x83A7: 0x0399,\r\n    0x83A8: 0x039A,\r\n    0x83A9: 0x039B,\r\n    0x83AA: 0x039C,\r\n    0x83AB: 0x039D,\r\n    0x83AC: 0x039E,\r\n    0x83AD: 0x039F,\r\n    0x83AE: 0x03A0,\r\n    0x83AF: 0x03A1,\r\n    0x83B0: 0x03A3,\r\n    0x83B1: 0x03A4,\r\n    0x83B2: 0x03A5,\r\n    0x83B3: 0x03A6,\r\n    0x83B4: 0x03A7,\r\n    0x83B5: 0x03A8,\r\n    0x83B6: 0x03A9,\r\n    0x83BF: 0x03B1,\r\n    0x83C0: 0x03B2,\r\n    0x83C1: 0x03B3,\r\n    0x83C2: 0x03B4,\r\n    0x83C3: 0x03B5,\r\n    0x83C4: 0x03B6,\r\n    0x83C5: 0x03B7,\r\n    0x83C6: 0x03B8,\r\n    0x83C7: 0x03B9,\r\n    0x83C8: 0x03BA,\r\n    0x83C9: 0x03BB,\r\n    0x83CA: 0x03BC,\r\n    0x83CB: 0x03BD,\r\n    0x83CC: 0x03BE,\r\n    0x83CD: 0x03BF,\r\n    0x83CE: 0x03C0,\r\n    0x83CF: 0x03C1,\r\n    0x83D0: 0x03C3,\r\n    0x83D1: 0x03C4,\r\n    0x83D2: 0x03C5,\r\n    0x83D3: 0x03C6,\r\n    0x83D4: 0x03C7,\r\n    0x83D5: 0x03C8,\r\n    0x83D6: 0x03C9,\r\n    0x8440: 0x0410,\r\n    0x8441: 0x0411,\r\n    0x8442: 0x0412,\r\n    0x8443: 0x0413,\r\n    0x8444: 0x0414,\r\n    0x8445: 0x0415,\r\n    0x8446: 0x0401,\r\n    0x8447: 0x0416,\r\n    0x8448: 0x0417,\r\n    0x8449: 0x0418,\r\n    0x844A: 0x0419,\r\n    0x844B: 0x041A,\r\n    0x844C: 0x041B,\r\n    0x844D: 0x041C,\r\n    0x844E: 0x041D,\r\n    0x844F: 0x041E,\r\n    0x8450: 0x041F,\r\n    0x8451: 0x0420,\r\n    0x8452: 0x0421,\r\n    0x8453: 0x0422,\r\n    0x8454: 0x0423,\r\n    0x8455: 0x0424,\r\n    0x8456: 0x0425,\r\n    0x8457: 0x0426,\r\n    0x8458: 0x0427,\r\n    0x8459: 0x0428,\r\n    0x845A: 0x0429,\r\n    0x845B: 0x042A,\r\n    0x845C: 0x042B,\r\n    0x845D: 0x042C,\r\n    0x845E: 0x042D,\r\n    0x845F: 0x042E,\r\n    0x8460: 0x042F,\r\n    0x8470: 0x0430,\r\n    0x8471: 0x0431,\r\n    0x8472: 0x0432,\r\n    0x8473: 0x0433,\r\n    0x8474: 0x0434,\r\n    0x8475: 0x0435,\r\n    0x8476: 0x0451,\r\n    0x8477: 0x0436,\r\n    0x8478: 0x0437,\r\n    0x8479: 0x0438,\r\n    0x847A: 0x0439,\r\n    0x847B: 0x043A,\r\n    0x847C: 0x043B,\r\n    0x847D: 0x043C,\r\n    0x847E: 0x043D,\r\n    0x8480: 0x043E,\r\n    0x8481: 0x043F,\r\n    0x8482: 0x0440,\r\n    0x8483: 0x0441,\r\n    0x8484: 0x0442,\r\n    0x8485: 0x0443,\r\n    0x8486: 0x0444,\r\n    0x8487: 0x0445,\r\n    0x8488: 0x0446,\r\n    0x8489: 0x0447,\r\n    0x848A: 0x0448,\r\n    0x848B: 0x0449,\r\n    0x848C: 0x044A,\r\n    0x848D: 0x044B,\r\n    0x848E: 0x044C,\r\n    0x848F: 0x044D,\r\n    0x8490: 0x044E,\r\n    0x8491: 0x044F,\r\n    0x849F: 0x2500,\r\n    0x84A0: 0x2502,\r\n    0x84A1: 0x250C,\r\n    0x84A2: 0x2510,\r\n    0x84A3: 0x2518,\r\n    0x84A4: 0x2514,\r\n    0x84A5: 0x251C,\r\n    0x84A6: 0x252C,\r\n    0x84A7: 0x2524,\r\n    0x84A8: 0x2534,\r\n    0x84A9: 0x253C,\r\n    0x84AA: 0x2501,\r\n    0x84AB: 0x2503,\r\n    0x84AC: 0x250F,\r\n    0x84AD: 0x2513,\r\n    0x84AE: 0x251B,\r\n    0x84AF: 0x2517,\r\n    0x84B0: 0x2523,\r\n    0x84B1: 0x2533,\r\n    0x84B2: 0x252B,\r\n    0x84B3: 0x253B,\r\n    0x84B4: 0x254B,\r\n    0x84B5: 0x2520,\r\n    0x84B6: 0x252F,\r\n    0x84B7: 0x2528,\r\n    0x84B8: 0x2537,\r\n    0x84B9: 0x253F,\r\n    0x84BA: 0x251D,\r\n    0x84BB: 0x2530,\r\n    0x84BC: 0x2525,\r\n    0x84BD: 0x2538,\r\n    0x84BE: 0x2542,\r\n    0x889F: 0x4E9C,\r\n    0x88A0: 0x5516,\r\n    0x88A1: 0x5A03,\r\n    0x88A2: 0x963F,\r\n    0x88A3: 0x54C0,\r\n    0x88A4: 0x611B,\r\n    0x88A5: 0x6328,\r\n    0x88A6: 0x59F6,\r\n    0x88A7: 0x9022,\r\n    0x88A8: 0x8475,\r\n    0x88A9: 0x831C,\r\n    0x88AA: 0x7A50,\r\n    0x88AB: 0x60AA,\r\n    0x88AC: 0x63E1,\r\n    0x88AD: 0x6E25,\r\n    0x88AE: 0x65ED,\r\n    0x88AF: 0x8466,\r\n    0x88B0: 0x82A6,\r\n    0x88B1: 0x9BF5,\r\n    0x88B2: 0x6893,\r\n    0x88B3: 0x5727,\r\n    0x88B4: 0x65A1,\r\n    0x88B5: 0x6271,\r\n    0x88B6: 0x5B9B,\r\n    0x88B7: 0x59D0,\r\n    0x88B8: 0x867B,\r\n    0x88B9: 0x98F4,\r\n    0x88BA: 0x7D62,\r\n    0x88BB: 0x7DBE,\r\n    0x88BC: 0x9B8E,\r\n    0x88BD: 0x6216,\r\n    0x88BE: 0x7C9F,\r\n    0x88BF: 0x88B7,\r\n    0x88C0: 0x5B89,\r\n    0x88C1: 0x5EB5,\r\n    0x88C2: 0x6309,\r\n    0x88C3: 0x6697,\r\n    0x88C4: 0x6848,\r\n    0x88C5: 0x95C7,\r\n    0x88C6: 0x978D,\r\n    0x88C7: 0x674F,\r\n    0x88C8: 0x4EE5,\r\n    0x88C9: 0x4F0A,\r\n    0x88CA: 0x4F4D,\r\n    0x88CB: 0x4F9D,\r\n    0x88CC: 0x5049,\r\n    0x88CD: 0x56F2,\r\n    0x88CE: 0x5937,\r\n    0x88CF: 0x59D4,\r\n    0x88D0: 0x5A01,\r\n    0x88D1: 0x5C09,\r\n    0x88D2: 0x60DF,\r\n    0x88D3: 0x610F,\r\n    0x88D4: 0x6170,\r\n    0x88D5: 0x6613,\r\n    0x88D6: 0x6905,\r\n    0x88D7: 0x70BA,\r\n    0x88D8: 0x754F,\r\n    0x88D9: 0x7570,\r\n    0x88DA: 0x79FB,\r\n    0x88DB: 0x7DAD,\r\n    0x88DC: 0x7DEF,\r\n    0x88DD: 0x80C3,\r\n    0x88DE: 0x840E,\r\n    0x88DF: 0x8863,\r\n    0x88E0: 0x8B02,\r\n    0x88E1: 0x9055,\r\n    0x88E2: 0x907A,\r\n    0x88E3: 0x533B,\r\n    0x88E4: 0x4E95,\r\n    0x88E5: 0x4EA5,\r\n    0x88E6: 0x57DF,\r\n    0x88E7: 0x80B2,\r\n    0x88E8: 0x90C1,\r\n    0x88E9: 0x78EF,\r\n    0x88EA: 0x4E00,\r\n    0x88EB: 0x58F1,\r\n    0x88EC: 0x6EA2,\r\n    0x88ED: 0x9038,\r\n    0x88EE: 0x7A32,\r\n    0x88EF: 0x8328,\r\n    0x88F0: 0x828B,\r\n    0x88F1: 0x9C2F,\r\n    0x88F2: 0x5141,\r\n    0x88F3: 0x5370,\r\n    0x88F4: 0x54BD,\r\n    0x88F5: 0x54E1,\r\n    0x88F6: 0x56E0,\r\n    0x88F7: 0x59FB,\r\n    0x88F8: 0x5F15,\r\n    0x88F9: 0x98F2,\r\n    0x88FA: 0x6DEB,\r\n    0x88FB: 0x80E4,\r\n    0x88FC: 0x852D,\r\n    0x8940: 0x9662,\r\n    0x8941: 0x9670,\r\n    0x8942: 0x96A0,\r\n    0x8943: 0x97FB,\r\n    0x8944: 0x540B,\r\n    0x8945: 0x53F3,\r\n    0x8946: 0x5B87,\r\n    0x8947: 0x70CF,\r\n    0x8948: 0x7FBD,\r\n    0x8949: 0x8FC2,\r\n    0x894A: 0x96E8,\r\n    0x894B: 0x536F,\r\n    0x894C: 0x9D5C,\r\n    0x894D: 0x7ABA,\r\n    0x894E: 0x4E11,\r\n    0x894F: 0x7893,\r\n    0x8950: 0x81FC,\r\n    0x8951: 0x6E26,\r\n    0x8952: 0x5618,\r\n    0x8953: 0x5504,\r\n    0x8954: 0x6B1D,\r\n    0x8955: 0x851A,\r\n    0x8956: 0x9C3B,\r\n    0x8957: 0x59E5,\r\n    0x8958: 0x53A9,\r\n    0x8959: 0x6D66,\r\n    0x895A: 0x74DC,\r\n    0x895B: 0x958F,\r\n    0x895C: 0x5642,\r\n    0x895D: 0x4E91,\r\n    0x895E: 0x904B,\r\n    0x895F: 0x96F2,\r\n    0x8960: 0x834F,\r\n    0x8961: 0x990C,\r\n    0x8962: 0x53E1,\r\n    0x8963: 0x55B6,\r\n    0x8964: 0x5B30,\r\n    0x8965: 0x5F71,\r\n    0x8966: 0x6620,\r\n    0x8967: 0x66F3,\r\n    0x8968: 0x6804,\r\n    0x8969: 0x6C38,\r\n    0x896A: 0x6CF3,\r\n    0x896B: 0x6D29,\r\n    0x896C: 0x745B,\r\n    0x896D: 0x76C8,\r\n    0x896E: 0x7A4E,\r\n    0x896F: 0x9834,\r\n    0x8970: 0x82F1,\r\n    0x8971: 0x885B,\r\n    0x8972: 0x8A60,\r\n    0x8973: 0x92ED,\r\n    0x8974: 0x6DB2,\r\n    0x8975: 0x75AB,\r\n    0x8976: 0x76CA,\r\n    0x8977: 0x99C5,\r\n    0x8978: 0x60A6,\r\n    0x8979: 0x8B01,\r\n    0x897A: 0x8D8A,\r\n    0x897B: 0x95B2,\r\n    0x897C: 0x698E,\r\n    0x897D: 0x53AD,\r\n    0x897E: 0x5186,\r\n    0x8980: 0x5712,\r\n    0x8981: 0x5830,\r\n    0x8982: 0x5944,\r\n    0x8983: 0x5BB4,\r\n    0x8984: 0x5EF6,\r\n    0x8985: 0x6028,\r\n    0x8986: 0x63A9,\r\n    0x8987: 0x63F4,\r\n    0x8988: 0x6CBF,\r\n    0x8989: 0x6F14,\r\n    0x898A: 0x708E,\r\n    0x898B: 0x7114,\r\n    0x898C: 0x7159,\r\n    0x898D: 0x71D5,\r\n    0x898E: 0x733F,\r\n    0x898F: 0x7E01,\r\n    0x8990: 0x8276,\r\n    0x8991: 0x82D1,\r\n    0x8992: 0x8597,\r\n    0x8993: 0x9060,\r\n    0x8994: 0x925B,\r\n    0x8995: 0x9D1B,\r\n    0x8996: 0x5869,\r\n    0x8997: 0x65BC,\r\n    0x8998: 0x6C5A,\r\n    0x8999: 0x7525,\r\n    0x899A: 0x51F9,\r\n    0x899B: 0x592E,\r\n    0x899C: 0x5965,\r\n    0x899D: 0x5F80,\r\n    0x899E: 0x5FDC,\r\n    0x899F: 0x62BC,\r\n    0x89A0: 0x65FA,\r\n    0x89A1: 0x6A2A,\r\n    0x89A2: 0x6B27,\r\n    0x89A3: 0x6BB4,\r\n    0x89A4: 0x738B,\r\n    0x89A5: 0x7FC1,\r\n    0x89A6: 0x8956,\r\n    0x89A7: 0x9D2C,\r\n    0x89A8: 0x9D0E,\r\n    0x89A9: 0x9EC4,\r\n    0x89AA: 0x5CA1,\r\n    0x89AB: 0x6C96,\r\n    0x89AC: 0x837B,\r\n    0x89AD: 0x5104,\r\n    0x89AE: 0x5C4B,\r\n    0x89AF: 0x61B6,\r\n    0x89B0: 0x81C6,\r\n    0x89B1: 0x6876,\r\n    0x89B2: 0x7261,\r\n    0x89B3: 0x4E59,\r\n    0x89B4: 0x4FFA,\r\n    0x89B5: 0x5378,\r\n    0x89B6: 0x6069,\r\n    0x89B7: 0x6E29,\r\n    0x89B8: 0x7A4F,\r\n    0x89B9: 0x97F3,\r\n    0x89BA: 0x4E0B,\r\n    0x89BB: 0x5316,\r\n    0x89BC: 0x4EEE,\r\n    0x89BD: 0x4F55,\r\n    0x89BE: 0x4F3D,\r\n    0x89BF: 0x4FA1,\r\n    0x89C0: 0x4F73,\r\n    0x89C1: 0x52A0,\r\n    0x89C2: 0x53EF,\r\n    0x89C3: 0x5609,\r\n    0x89C4: 0x590F,\r\n    0x89C5: 0x5AC1,\r\n    0x89C6: 0x5BB6,\r\n    0x89C7: 0x5BE1,\r\n    0x89C8: 0x79D1,\r\n    0x89C9: 0x6687,\r\n    0x89CA: 0x679C,\r\n    0x89CB: 0x67B6,\r\n    0x89CC: 0x6B4C,\r\n    0x89CD: 0x6CB3,\r\n    0x89CE: 0x706B,\r\n    0x89CF: 0x73C2,\r\n    0x89D0: 0x798D,\r\n    0x89D1: 0x79BE,\r\n    0x89D2: 0x7A3C,\r\n    0x89D3: 0x7B87,\r\n    0x89D4: 0x82B1,\r\n    0x89D5: 0x82DB,\r\n    0x89D6: 0x8304,\r\n    0x89D7: 0x8377,\r\n    0x89D8: 0x83EF,\r\n    0x89D9: 0x83D3,\r\n    0x89DA: 0x8766,\r\n    0x89DB: 0x8AB2,\r\n    0x89DC: 0x5629,\r\n    0x89DD: 0x8CA8,\r\n    0x89DE: 0x8FE6,\r\n    0x89DF: 0x904E,\r\n    0x89E0: 0x971E,\r\n    0x89E1: 0x868A,\r\n    0x89E2: 0x4FC4,\r\n    0x89E3: 0x5CE8,\r\n    0x89E4: 0x6211,\r\n    0x89E5: 0x7259,\r\n    0x89E6: 0x753B,\r\n    0x89E7: 0x81E5,\r\n    0x89E8: 0x82BD,\r\n    0x89E9: 0x86FE,\r\n    0x89EA: 0x8CC0,\r\n    0x89EB: 0x96C5,\r\n    0x89EC: 0x9913,\r\n    0x89ED: 0x99D5,\r\n    0x89EE: 0x4ECB,\r\n    0x89EF: 0x4F1A,\r\n    0x89F0: 0x89E3,\r\n    0x89F1: 0x56DE,\r\n    0x89F2: 0x584A,\r\n    0x89F3: 0x58CA,\r\n    0x89F4: 0x5EFB,\r\n    0x89F5: 0x5FEB,\r\n    0x89F6: 0x602A,\r\n    0x89F7: 0x6094,\r\n    0x89F8: 0x6062,\r\n    0x89F9: 0x61D0,\r\n    0x89FA: 0x6212,\r\n    0x89FB: 0x62D0,\r\n    0x89FC: 0x6539,\r\n    0x8A40: 0x9B41,\r\n    0x8A41: 0x6666,\r\n    0x8A42: 0x68B0,\r\n    0x8A43: 0x6D77,\r\n    0x8A44: 0x7070,\r\n    0x8A45: 0x754C,\r\n    0x8A46: 0x7686,\r\n    0x8A47: 0x7D75,\r\n    0x8A48: 0x82A5,\r\n    0x8A49: 0x87F9,\r\n    0x8A4A: 0x958B,\r\n    0x8A4B: 0x968E,\r\n    0x8A4C: 0x8C9D,\r\n    0x8A4D: 0x51F1,\r\n    0x8A4E: 0x52BE,\r\n    0x8A4F: 0x5916,\r\n    0x8A50: 0x54B3,\r\n    0x8A51: 0x5BB3,\r\n    0x8A52: 0x5D16,\r\n    0x8A53: 0x6168,\r\n    0x8A54: 0x6982,\r\n    0x8A55: 0x6DAF,\r\n    0x8A56: 0x788D,\r\n    0x8A57: 0x84CB,\r\n    0x8A58: 0x8857,\r\n    0x8A59: 0x8A72,\r\n    0x8A5A: 0x93A7,\r\n    0x8A5B: 0x9AB8,\r\n    0x8A5C: 0x6D6C,\r\n    0x8A5D: 0x99A8,\r\n    0x8A5E: 0x86D9,\r\n    0x8A5F: 0x57A3,\r\n    0x8A60: 0x67FF,\r\n    0x8A61: 0x86CE,\r\n    0x8A62: 0x920E,\r\n    0x8A63: 0x5283,\r\n    0x8A64: 0x5687,\r\n    0x8A65: 0x5404,\r\n    0x8A66: 0x5ED3,\r\n    0x8A67: 0x62E1,\r\n    0x8A68: 0x64B9,\r\n    0x8A69: 0x683C,\r\n    0x8A6A: 0x6838,\r\n    0x8A6B: 0x6BBB,\r\n    0x8A6C: 0x7372,\r\n    0x8A6D: 0x78BA,\r\n    0x8A6E: 0x7A6B,\r\n    0x8A6F: 0x899A,\r\n    0x8A70: 0x89D2,\r\n    0x8A71: 0x8D6B,\r\n    0x8A72: 0x8F03,\r\n    0x8A73: 0x90ED,\r\n    0x8A74: 0x95A3,\r\n    0x8A75: 0x9694,\r\n    0x8A76: 0x9769,\r\n    0x8A77: 0x5B66,\r\n    0x8A78: 0x5CB3,\r\n    0x8A79: 0x697D,\r\n    0x8A7A: 0x984D,\r\n    0x8A7B: 0x984E,\r\n    0x8A7C: 0x639B,\r\n    0x8A7D: 0x7B20,\r\n    0x8A7E: 0x6A2B,\r\n    0x8A80: 0x6A7F,\r\n    0x8A81: 0x68B6,\r\n    0x8A82: 0x9C0D,\r\n    0x8A83: 0x6F5F,\r\n    0x8A84: 0x5272,\r\n    0x8A85: 0x559D,\r\n    0x8A86: 0x6070,\r\n    0x8A87: 0x62EC,\r\n    0x8A88: 0x6D3B,\r\n    0x8A89: 0x6E07,\r\n    0x8A8A: 0x6ED1,\r\n    0x8A8B: 0x845B,\r\n    0x8A8C: 0x8910,\r\n    0x8A8D: 0x8F44,\r\n    0x8A8E: 0x4E14,\r\n    0x8A8F: 0x9C39,\r\n    0x8A90: 0x53F6,\r\n    0x8A91: 0x691B,\r\n    0x8A92: 0x6A3A,\r\n    0x8A93: 0x9784,\r\n    0x8A94: 0x682A,\r\n    0x8A95: 0x515C,\r\n    0x8A96: 0x7AC3,\r\n    0x8A97: 0x84B2,\r\n    0x8A98: 0x91DC,\r\n    0x8A99: 0x938C,\r\n    0x8A9A: 0x565B,\r\n    0x8A9B: 0x9D28,\r\n    0x8A9C: 0x6822,\r\n    0x8A9D: 0x8305,\r\n    0x8A9E: 0x8431,\r\n    0x8A9F: 0x7CA5,\r\n    0x8AA0: 0x5208,\r\n    0x8AA1: 0x82C5,\r\n    0x8AA2: 0x74E6,\r\n    0x8AA3: 0x4E7E,\r\n    0x8AA4: 0x4F83,\r\n    0x8AA5: 0x51A0,\r\n    0x8AA6: 0x5BD2,\r\n    0x8AA7: 0x520A,\r\n    0x8AA8: 0x52D8,\r\n    0x8AA9: 0x52E7,\r\n    0x8AAA: 0x5DFB,\r\n    0x8AAB: 0x559A,\r\n    0x8AAC: 0x582A,\r\n    0x8AAD: 0x59E6,\r\n    0x8AAE: 0x5B8C,\r\n    0x8AAF: 0x5B98,\r\n    0x8AB0: 0x5BDB,\r\n    0x8AB1: 0x5E72,\r\n    0x8AB2: 0x5E79,\r\n    0x8AB3: 0x60A3,\r\n    0x8AB4: 0x611F,\r\n    0x8AB5: 0x6163,\r\n    0x8AB6: 0x61BE,\r\n    0x8AB7: 0x63DB,\r\n    0x8AB8: 0x6562,\r\n    0x8AB9: 0x67D1,\r\n    0x8ABA: 0x6853,\r\n    0x8ABB: 0x68FA,\r\n    0x8ABC: 0x6B3E,\r\n    0x8ABD: 0x6B53,\r\n    0x8ABE: 0x6C57,\r\n    0x8ABF: 0x6F22,\r\n    0x8AC0: 0x6F97,\r\n    0x8AC1: 0x6F45,\r\n    0x8AC2: 0x74B0,\r\n    0x8AC3: 0x7518,\r\n    0x8AC4: 0x76E3,\r\n    0x8AC5: 0x770B,\r\n    0x8AC6: 0x7AFF,\r\n    0x8AC7: 0x7BA1,\r\n    0x8AC8: 0x7C21,\r\n    0x8AC9: 0x7DE9,\r\n    0x8ACA: 0x7F36,\r\n    0x8ACB: 0x7FF0,\r\n    0x8ACC: 0x809D,\r\n    0x8ACD: 0x8266,\r\n    0x8ACE: 0x839E,\r\n    0x8ACF: 0x89B3,\r\n    0x8AD0: 0x8ACC,\r\n    0x8AD1: 0x8CAB,\r\n    0x8AD2: 0x9084,\r\n    0x8AD3: 0x9451,\r\n    0x8AD4: 0x9593,\r\n    0x8AD5: 0x9591,\r\n    0x8AD6: 0x95A2,\r\n    0x8AD7: 0x9665,\r\n    0x8AD8: 0x97D3,\r\n    0x8AD9: 0x9928,\r\n    0x8ADA: 0x8218,\r\n    0x8ADB: 0x4E38,\r\n    0x8ADC: 0x542B,\r\n    0x8ADD: 0x5CB8,\r\n    0x8ADE: 0x5DCC,\r\n    0x8ADF: 0x73A9,\r\n    0x8AE0: 0x764C,\r\n    0x8AE1: 0x773C,\r\n    0x8AE2: 0x5CA9,\r\n    0x8AE3: 0x7FEB,\r\n    0x8AE4: 0x8D0B,\r\n    0x8AE5: 0x96C1,\r\n    0x8AE6: 0x9811,\r\n    0x8AE7: 0x9854,\r\n    0x8AE8: 0x9858,\r\n    0x8AE9: 0x4F01,\r\n    0x8AEA: 0x4F0E,\r\n    0x8AEB: 0x5371,\r\n    0x8AEC: 0x559C,\r\n    0x8AED: 0x5668,\r\n    0x8AEE: 0x57FA,\r\n    0x8AEF: 0x5947,\r\n    0x8AF0: 0x5B09,\r\n    0x8AF1: 0x5BC4,\r\n    0x8AF2: 0x5C90,\r\n    0x8AF3: 0x5E0C,\r\n    0x8AF4: 0x5E7E,\r\n    0x8AF5: 0x5FCC,\r\n    0x8AF6: 0x63EE,\r\n    0x8AF7: 0x673A,\r\n    0x8AF8: 0x65D7,\r\n    0x8AF9: 0x65E2,\r\n    0x8AFA: 0x671F,\r\n    0x8AFB: 0x68CB,\r\n    0x8AFC: 0x68C4,\r\n    0x8B40: 0x6A5F,\r\n    0x8B41: 0x5E30,\r\n    0x8B42: 0x6BC5,\r\n    0x8B43: 0x6C17,\r\n    0x8B44: 0x6C7D,\r\n    0x8B45: 0x757F,\r\n    0x8B46: 0x7948,\r\n    0x8B47: 0x5B63,\r\n    0x8B48: 0x7A00,\r\n    0x8B49: 0x7D00,\r\n    0x8B4A: 0x5FBD,\r\n    0x8B4B: 0x898F,\r\n    0x8B4C: 0x8A18,\r\n    0x8B4D: 0x8CB4,\r\n    0x8B4E: 0x8D77,\r\n    0x8B4F: 0x8ECC,\r\n    0x8B50: 0x8F1D,\r\n    0x8B51: 0x98E2,\r\n    0x8B52: 0x9A0E,\r\n    0x8B53: 0x9B3C,\r\n    0x8B54: 0x4E80,\r\n    0x8B55: 0x507D,\r\n    0x8B56: 0x5100,\r\n    0x8B57: 0x5993,\r\n    0x8B58: 0x5B9C,\r\n    0x8B59: 0x622F,\r\n    0x8B5A: 0x6280,\r\n    0x8B5B: 0x64EC,\r\n    0x8B5C: 0x6B3A,\r\n    0x8B5D: 0x72A0,\r\n    0x8B5E: 0x7591,\r\n    0x8B5F: 0x7947,\r\n    0x8B60: 0x7FA9,\r\n    0x8B61: 0x87FB,\r\n    0x8B62: 0x8ABC,\r\n    0x8B63: 0x8B70,\r\n    0x8B64: 0x63AC,\r\n    0x8B65: 0x83CA,\r\n    0x8B66: 0x97A0,\r\n    0x8B67: 0x5409,\r\n    0x8B68: 0x5403,\r\n    0x8B69: 0x55AB,\r\n    0x8B6A: 0x6854,\r\n    0x8B6B: 0x6A58,\r\n    0x8B6C: 0x8A70,\r\n    0x8B6D: 0x7827,\r\n    0x8B6E: 0x6775,\r\n    0x8B6F: 0x9ECD,\r\n    0x8B70: 0x5374,\r\n    0x8B71: 0x5BA2,\r\n    0x8B72: 0x811A,\r\n    0x8B73: 0x8650,\r\n    0x8B74: 0x9006,\r\n    0x8B75: 0x4E18,\r\n    0x8B76: 0x4E45,\r\n    0x8B77: 0x4EC7,\r\n    0x8B78: 0x4F11,\r\n    0x8B79: 0x53CA,\r\n    0x8B7A: 0x5438,\r\n    0x8B7B: 0x5BAE,\r\n    0x8B7C: 0x5F13,\r\n    0x8B7D: 0x6025,\r\n    0x8B7E: 0x6551,\r\n    0x8B80: 0x673D,\r\n    0x8B81: 0x6C42,\r\n    0x8B82: 0x6C72,\r\n    0x8B83: 0x6CE3,\r\n    0x8B84: 0x7078,\r\n    0x8B85: 0x7403,\r\n    0x8B86: 0x7A76,\r\n    0x8B87: 0x7AAE,\r\n    0x8B88: 0x7B08,\r\n    0x8B89: 0x7D1A,\r\n    0x8B8A: 0x7CFE,\r\n    0x8B8B: 0x7D66,\r\n    0x8B8C: 0x65E7,\r\n    0x8B8D: 0x725B,\r\n    0x8B8E: 0x53BB,\r\n    0x8B8F: 0x5C45,\r\n    0x8B90: 0x5DE8,\r\n    0x8B91: 0x62D2,\r\n    0x8B92: 0x62E0,\r\n    0x8B93: 0x6319,\r\n    0x8B94: 0x6E20,\r\n    0x8B95: 0x865A,\r\n    0x8B96: 0x8A31,\r\n    0x8B97: 0x8DDD,\r\n    0x8B98: 0x92F8,\r\n    0x8B99: 0x6F01,\r\n    0x8B9A: 0x79A6,\r\n    0x8B9B: 0x9B5A,\r\n    0x8B9C: 0x4EA8,\r\n    0x8B9D: 0x4EAB,\r\n    0x8B9E: 0x4EAC,\r\n    0x8B9F: 0x4F9B,\r\n    0x8BA0: 0x4FA0,\r\n    0x8BA1: 0x50D1,\r\n    0x8BA2: 0x5147,\r\n    0x8BA3: 0x7AF6,\r\n    0x8BA4: 0x5171,\r\n    0x8BA5: 0x51F6,\r\n    0x8BA6: 0x5354,\r\n    0x8BA7: 0x5321,\r\n    0x8BA8: 0x537F,\r\n    0x8BA9: 0x53EB,\r\n    0x8BAA: 0x55AC,\r\n    0x8BAB: 0x5883,\r\n    0x8BAC: 0x5CE1,\r\n    0x8BAD: 0x5F37,\r\n    0x8BAE: 0x5F4A,\r\n    0x8BAF: 0x602F,\r\n    0x8BB0: 0x6050,\r\n    0x8BB1: 0x606D,\r\n    0x8BB2: 0x631F,\r\n    0x8BB3: 0x6559,\r\n    0x8BB4: 0x6A4B,\r\n    0x8BB5: 0x6CC1,\r\n    0x8BB6: 0x72C2,\r\n    0x8BB7: 0x72ED,\r\n    0x8BB8: 0x77EF,\r\n    0x8BB9: 0x80F8,\r\n    0x8BBA: 0x8105,\r\n    0x8BBB: 0x8208,\r\n    0x8BBC: 0x854E,\r\n    0x8BBD: 0x90F7,\r\n    0x8BBE: 0x93E1,\r\n    0x8BBF: 0x97FF,\r\n    0x8BC0: 0x9957,\r\n    0x8BC1: 0x9A5A,\r\n    0x8BC2: 0x4EF0,\r\n    0x8BC3: 0x51DD,\r\n    0x8BC4: 0x5C2D,\r\n    0x8BC5: 0x6681,\r\n    0x8BC6: 0x696D,\r\n    0x8BC7: 0x5C40,\r\n    0x8BC8: 0x66F2,\r\n    0x8BC9: 0x6975,\r\n    0x8BCA: 0x7389,\r\n    0x8BCB: 0x6850,\r\n    0x8BCC: 0x7C81,\r\n    0x8BCD: 0x50C5,\r\n    0x8BCE: 0x52E4,\r\n    0x8BCF: 0x5747,\r\n    0x8BD0: 0x5DFE,\r\n    0x8BD1: 0x9326,\r\n    0x8BD2: 0x65A4,\r\n    0x8BD3: 0x6B23,\r\n    0x8BD4: 0x6B3D,\r\n    0x8BD5: 0x7434,\r\n    0x8BD6: 0x7981,\r\n    0x8BD7: 0x79BD,\r\n    0x8BD8: 0x7B4B,\r\n    0x8BD9: 0x7DCA,\r\n    0x8BDA: 0x82B9,\r\n    0x8BDB: 0x83CC,\r\n    0x8BDC: 0x887F,\r\n    0x8BDD: 0x895F,\r\n    0x8BDE: 0x8B39,\r\n    0x8BDF: 0x8FD1,\r\n    0x8BE0: 0x91D1,\r\n    0x8BE1: 0x541F,\r\n    0x8BE2: 0x9280,\r\n    0x8BE3: 0x4E5D,\r\n    0x8BE4: 0x5036,\r\n    0x8BE5: 0x53E5,\r\n    0x8BE6: 0x533A,\r\n    0x8BE7: 0x72D7,\r\n    0x8BE8: 0x7396,\r\n    0x8BE9: 0x77E9,\r\n    0x8BEA: 0x82E6,\r\n    0x8BEB: 0x8EAF,\r\n    0x8BEC: 0x99C6,\r\n    0x8BED: 0x99C8,\r\n    0x8BEE: 0x99D2,\r\n    0x8BEF: 0x5177,\r\n    0x8BF0: 0x611A,\r\n    0x8BF1: 0x865E,\r\n    0x8BF2: 0x55B0,\r\n    0x8BF3: 0x7A7A,\r\n    0x8BF4: 0x5076,\r\n    0x8BF5: 0x5BD3,\r\n    0x8BF6: 0x9047,\r\n    0x8BF7: 0x9685,\r\n    0x8BF8: 0x4E32,\r\n    0x8BF9: 0x6ADB,\r\n    0x8BFA: 0x91E7,\r\n    0x8BFB: 0x5C51,\r\n    0x8BFC: 0x5C48,\r\n    0x8C40: 0x6398,\r\n    0x8C41: 0x7A9F,\r\n    0x8C42: 0x6C93,\r\n    0x8C43: 0x9774,\r\n    0x8C44: 0x8F61,\r\n    0x8C45: 0x7AAA,\r\n    0x8C46: 0x718A,\r\n    0x8C47: 0x9688,\r\n    0x8C48: 0x7C82,\r\n    0x8C49: 0x6817,\r\n    0x8C4A: 0x7E70,\r\n    0x8C4B: 0x6851,\r\n    0x8C4C: 0x936C,\r\n    0x8C4D: 0x52F2,\r\n    0x8C4E: 0x541B,\r\n    0x8C4F: 0x85AB,\r\n    0x8C50: 0x8A13,\r\n    0x8C51: 0x7FA4,\r\n    0x8C52: 0x8ECD,\r\n    0x8C53: 0x90E1,\r\n    0x8C54: 0x5366,\r\n    0x8C55: 0x8888,\r\n    0x8C56: 0x7941,\r\n    0x8C57: 0x4FC2,\r\n    0x8C58: 0x50BE,\r\n    0x8C59: 0x5211,\r\n    0x8C5A: 0x5144,\r\n    0x8C5B: 0x5553,\r\n    0x8C5C: 0x572D,\r\n    0x8C5D: 0x73EA,\r\n    0x8C5E: 0x578B,\r\n    0x8C5F: 0x5951,\r\n    0x8C60: 0x5F62,\r\n    0x8C61: 0x5F84,\r\n    0x8C62: 0x6075,\r\n    0x8C63: 0x6176,\r\n    0x8C64: 0x6167,\r\n    0x8C65: 0x61A9,\r\n    0x8C66: 0x63B2,\r\n    0x8C67: 0x643A,\r\n    0x8C68: 0x656C,\r\n    0x8C69: 0x666F,\r\n    0x8C6A: 0x6842,\r\n    0x8C6B: 0x6E13,\r\n    0x8C6C: 0x7566,\r\n    0x8C6D: 0x7A3D,\r\n    0x8C6E: 0x7CFB,\r\n    0x8C6F: 0x7D4C,\r\n    0x8C70: 0x7D99,\r\n    0x8C71: 0x7E4B,\r\n    0x8C72: 0x7F6B,\r\n    0x8C73: 0x830E,\r\n    0x8C74: 0x834A,\r\n    0x8C75: 0x86CD,\r\n    0x8C76: 0x8A08,\r\n    0x8C77: 0x8A63,\r\n    0x8C78: 0x8B66,\r\n    0x8C79: 0x8EFD,\r\n    0x8C7A: 0x981A,\r\n    0x8C7B: 0x9D8F,\r\n    0x8C7C: 0x82B8,\r\n    0x8C7D: 0x8FCE,\r\n    0x8C7E: 0x9BE8,\r\n    0x8C80: 0x5287,\r\n    0x8C81: 0x621F,\r\n    0x8C82: 0x6483,\r\n    0x8C83: 0x6FC0,\r\n    0x8C84: 0x9699,\r\n    0x8C85: 0x6841,\r\n    0x8C86: 0x5091,\r\n    0x8C87: 0x6B20,\r\n    0x8C88: 0x6C7A,\r\n    0x8C89: 0x6F54,\r\n    0x8C8A: 0x7A74,\r\n    0x8C8B: 0x7D50,\r\n    0x8C8C: 0x8840,\r\n    0x8C8D: 0x8A23,\r\n    0x8C8E: 0x6708,\r\n    0x8C8F: 0x4EF6,\r\n    0x8C90: 0x5039,\r\n    0x8C91: 0x5026,\r\n    0x8C92: 0x5065,\r\n    0x8C93: 0x517C,\r\n    0x8C94: 0x5238,\r\n    0x8C95: 0x5263,\r\n    0x8C96: 0x55A7,\r\n    0x8C97: 0x570F,\r\n    0x8C98: 0x5805,\r\n    0x8C99: 0x5ACC,\r\n    0x8C9A: 0x5EFA,\r\n    0x8C9B: 0x61B2,\r\n    0x8C9C: 0x61F8,\r\n    0x8C9D: 0x62F3,\r\n    0x8C9E: 0x6372,\r\n    0x8C9F: 0x691C,\r\n    0x8CA0: 0x6A29,\r\n    0x8CA1: 0x727D,\r\n    0x8CA2: 0x72AC,\r\n    0x8CA3: 0x732E,\r\n    0x8CA4: 0x7814,\r\n    0x8CA5: 0x786F,\r\n    0x8CA6: 0x7D79,\r\n    0x8CA7: 0x770C,\r\n    0x8CA8: 0x80A9,\r\n    0x8CA9: 0x898B,\r\n    0x8CAA: 0x8B19,\r\n    0x8CAB: 0x8CE2,\r\n    0x8CAC: 0x8ED2,\r\n    0x8CAD: 0x9063,\r\n    0x8CAE: 0x9375,\r\n    0x8CAF: 0x967A,\r\n    0x8CB0: 0x9855,\r\n    0x8CB1: 0x9A13,\r\n    0x8CB2: 0x9E78,\r\n    0x8CB3: 0x5143,\r\n    0x8CB4: 0x539F,\r\n    0x8CB5: 0x53B3,\r\n    0x8CB6: 0x5E7B,\r\n    0x8CB7: 0x5F26,\r\n    0x8CB8: 0x6E1B,\r\n    0x8CB9: 0x6E90,\r\n    0x8CBA: 0x7384,\r\n    0x8CBB: 0x73FE,\r\n    0x8CBC: 0x7D43,\r\n    0x8CBD: 0x8237,\r\n    0x8CBE: 0x8A00,\r\n    0x8CBF: 0x8AFA,\r\n    0x8CC0: 0x9650,\r\n    0x8CC1: 0x4E4E,\r\n    0x8CC2: 0x500B,\r\n    0x8CC3: 0x53E4,\r\n    0x8CC4: 0x547C,\r\n    0x8CC5: 0x56FA,\r\n    0x8CC6: 0x59D1,\r\n    0x8CC7: 0x5B64,\r\n    0x8CC8: 0x5DF1,\r\n    0x8CC9: 0x5EAB,\r\n    0x8CCA: 0x5F27,\r\n    0x8CCB: 0x6238,\r\n    0x8CCC: 0x6545,\r\n    0x8CCD: 0x67AF,\r\n    0x8CCE: 0x6E56,\r\n    0x8CCF: 0x72D0,\r\n    0x8CD0: 0x7CCA,\r\n    0x8CD1: 0x88B4,\r\n    0x8CD2: 0x80A1,\r\n    0x8CD3: 0x80E1,\r\n    0x8CD4: 0x83F0,\r\n    0x8CD5: 0x864E,\r\n    0x8CD6: 0x8A87,\r\n    0x8CD7: 0x8DE8,\r\n    0x8CD8: 0x9237,\r\n    0x8CD9: 0x96C7,\r\n    0x8CDA: 0x9867,\r\n    0x8CDB: 0x9F13,\r\n    0x8CDC: 0x4E94,\r\n    0x8CDD: 0x4E92,\r\n    0x8CDE: 0x4F0D,\r\n    0x8CDF: 0x5348,\r\n    0x8CE0: 0x5449,\r\n    0x8CE1: 0x543E,\r\n    0x8CE2: 0x5A2F,\r\n    0x8CE3: 0x5F8C,\r\n    0x8CE4: 0x5FA1,\r\n    0x8CE5: 0x609F,\r\n    0x8CE6: 0x68A7,\r\n    0x8CE7: 0x6A8E,\r\n    0x8CE8: 0x745A,\r\n    0x8CE9: 0x7881,\r\n    0x8CEA: 0x8A9E,\r\n    0x8CEB: 0x8AA4,\r\n    0x8CEC: 0x8B77,\r\n    0x8CED: 0x9190,\r\n    0x8CEE: 0x4E5E,\r\n    0x8CEF: 0x9BC9,\r\n    0x8CF0: 0x4EA4,\r\n    0x8CF1: 0x4F7C,\r\n    0x8CF2: 0x4FAF,\r\n    0x8CF3: 0x5019,\r\n    0x8CF4: 0x5016,\r\n    0x8CF5: 0x5149,\r\n    0x8CF6: 0x516C,\r\n    0x8CF7: 0x529F,\r\n    0x8CF8: 0x52B9,\r\n    0x8CF9: 0x52FE,\r\n    0x8CFA: 0x539A,\r\n    0x8CFB: 0x53E3,\r\n    0x8CFC: 0x5411,\r\n    0x8D40: 0x540E,\r\n    0x8D41: 0x5589,\r\n    0x8D42: 0x5751,\r\n    0x8D43: 0x57A2,\r\n    0x8D44: 0x597D,\r\n    0x8D45: 0x5B54,\r\n    0x8D46: 0x5B5D,\r\n    0x8D47: 0x5B8F,\r\n    0x8D48: 0x5DE5,\r\n    0x8D49: 0x5DE7,\r\n    0x8D4A: 0x5DF7,\r\n    0x8D4B: 0x5E78,\r\n    0x8D4C: 0x5E83,\r\n    0x8D4D: 0x5E9A,\r\n    0x8D4E: 0x5EB7,\r\n    0x8D4F: 0x5F18,\r\n    0x8D50: 0x6052,\r\n    0x8D51: 0x614C,\r\n    0x8D52: 0x6297,\r\n    0x8D53: 0x62D8,\r\n    0x8D54: 0x63A7,\r\n    0x8D55: 0x653B,\r\n    0x8D56: 0x6602,\r\n    0x8D57: 0x6643,\r\n    0x8D58: 0x66F4,\r\n    0x8D59: 0x676D,\r\n    0x8D5A: 0x6821,\r\n    0x8D5B: 0x6897,\r\n    0x8D5C: 0x69CB,\r\n    0x8D5D: 0x6C5F,\r\n    0x8D5E: 0x6D2A,\r\n    0x8D5F: 0x6D69,\r\n    0x8D60: 0x6E2F,\r\n    0x8D61: 0x6E9D,\r\n    0x8D62: 0x7532,\r\n    0x8D63: 0x7687,\r\n    0x8D64: 0x786C,\r\n    0x8D65: 0x7A3F,\r\n    0x8D66: 0x7CE0,\r\n    0x8D67: 0x7D05,\r\n    0x8D68: 0x7D18,\r\n    0x8D69: 0x7D5E,\r\n    0x8D6A: 0x7DB1,\r\n    0x8D6B: 0x8015,\r\n    0x8D6C: 0x8003,\r\n    0x8D6D: 0x80AF,\r\n    0x8D6E: 0x80B1,\r\n    0x8D6F: 0x8154,\r\n    0x8D70: 0x818F,\r\n    0x8D71: 0x822A,\r\n    0x8D72: 0x8352,\r\n    0x8D73: 0x884C,\r\n    0x8D74: 0x8861,\r\n    0x8D75: 0x8B1B,\r\n    0x8D76: 0x8CA2,\r\n    0x8D77: 0x8CFC,\r\n    0x8D78: 0x90CA,\r\n    0x8D79: 0x9175,\r\n    0x8D7A: 0x9271,\r\n    0x8D7B: 0x783F,\r\n    0x8D7C: 0x92FC,\r\n    0x8D7D: 0x95A4,\r\n    0x8D7E: 0x964D,\r\n    0x8D80: 0x9805,\r\n    0x8D81: 0x9999,\r\n    0x8D82: 0x9AD8,\r\n    0x8D83: 0x9D3B,\r\n    0x8D84: 0x525B,\r\n    0x8D85: 0x52AB,\r\n    0x8D86: 0x53F7,\r\n    0x8D87: 0x5408,\r\n    0x8D88: 0x58D5,\r\n    0x8D89: 0x62F7,\r\n    0x8D8A: 0x6FE0,\r\n    0x8D8B: 0x8C6A,\r\n    0x8D8C: 0x8F5F,\r\n    0x8D8D: 0x9EB9,\r\n    0x8D8E: 0x514B,\r\n    0x8D8F: 0x523B,\r\n    0x8D90: 0x544A,\r\n    0x8D91: 0x56FD,\r\n    0x8D92: 0x7A40,\r\n    0x8D93: 0x9177,\r\n    0x8D94: 0x9D60,\r\n    0x8D95: 0x9ED2,\r\n    0x8D96: 0x7344,\r\n    0x8D97: 0x6F09,\r\n    0x8D98: 0x8170,\r\n    0x8D99: 0x7511,\r\n    0x8D9A: 0x5FFD,\r\n    0x8D9B: 0x60DA,\r\n    0x8D9C: 0x9AA8,\r\n    0x8D9D: 0x72DB,\r\n    0x8D9E: 0x8FBC,\r\n    0x8D9F: 0x6B64,\r\n    0x8DA0: 0x9803,\r\n    0x8DA1: 0x4ECA,\r\n    0x8DA2: 0x56F0,\r\n    0x8DA3: 0x5764,\r\n    0x8DA4: 0x58BE,\r\n    0x8DA5: 0x5A5A,\r\n    0x8DA6: 0x6068,\r\n    0x8DA7: 0x61C7,\r\n    0x8DA8: 0x660F,\r\n    0x8DA9: 0x6606,\r\n    0x8DAA: 0x6839,\r\n    0x8DAB: 0x68B1,\r\n    0x8DAC: 0x6DF7,\r\n    0x8DAD: 0x75D5,\r\n    0x8DAE: 0x7D3A,\r\n    0x8DAF: 0x826E,\r\n    0x8DB0: 0x9B42,\r\n    0x8DB1: 0x4E9B,\r\n    0x8DB2: 0x4F50,\r\n    0x8DB3: 0x53C9,\r\n    0x8DB4: 0x5506,\r\n    0x8DB5: 0x5D6F,\r\n    0x8DB6: 0x5DE6,\r\n    0x8DB7: 0x5DEE,\r\n    0x8DB8: 0x67FB,\r\n    0x8DB9: 0x6C99,\r\n    0x8DBA: 0x7473,\r\n    0x8DBB: 0x7802,\r\n    0x8DBC: 0x8A50,\r\n    0x8DBD: 0x9396,\r\n    0x8DBE: 0x88DF,\r\n    0x8DBF: 0x5750,\r\n    0x8DC0: 0x5EA7,\r\n    0x8DC1: 0x632B,\r\n    0x8DC2: 0x50B5,\r\n    0x8DC3: 0x50AC,\r\n    0x8DC4: 0x518D,\r\n    0x8DC5: 0x6700,\r\n    0x8DC6: 0x54C9,\r\n    0x8DC7: 0x585E,\r\n    0x8DC8: 0x59BB,\r\n    0x8DC9: 0x5BB0,\r\n    0x8DCA: 0x5F69,\r\n    0x8DCB: 0x624D,\r\n    0x8DCC: 0x63A1,\r\n    0x8DCD: 0x683D,\r\n    0x8DCE: 0x6B73,\r\n    0x8DCF: 0x6E08,\r\n    0x8DD0: 0x707D,\r\n    0x8DD1: 0x91C7,\r\n    0x8DD2: 0x7280,\r\n    0x8DD3: 0x7815,\r\n    0x8DD4: 0x7826,\r\n    0x8DD5: 0x796D,\r\n    0x8DD6: 0x658E,\r\n    0x8DD7: 0x7D30,\r\n    0x8DD8: 0x83DC,\r\n    0x8DD9: 0x88C1,\r\n    0x8DDA: 0x8F09,\r\n    0x8DDB: 0x969B,\r\n    0x8DDC: 0x5264,\r\n    0x8DDD: 0x5728,\r\n    0x8DDE: 0x6750,\r\n    0x8DDF: 0x7F6A,\r\n    0x8DE0: 0x8CA1,\r\n    0x8DE1: 0x51B4,\r\n    0x8DE2: 0x5742,\r\n    0x8DE3: 0x962A,\r\n    0x8DE4: 0x583A,\r\n    0x8DE5: 0x698A,\r\n    0x8DE6: 0x80B4,\r\n    0x8DE7: 0x54B2,\r\n    0x8DE8: 0x5D0E,\r\n    0x8DE9: 0x57FC,\r\n    0x8DEA: 0x7895,\r\n    0x8DEB: 0x9DFA,\r\n    0x8DEC: 0x4F5C,\r\n    0x8DED: 0x524A,\r\n    0x8DEE: 0x548B,\r\n    0x8DEF: 0x643E,\r\n    0x8DF0: 0x6628,\r\n    0x8DF1: 0x6714,\r\n    0x8DF2: 0x67F5,\r\n    0x8DF3: 0x7A84,\r\n    0x8DF4: 0x7B56,\r\n    0x8DF5: 0x7D22,\r\n    0x8DF6: 0x932F,\r\n    0x8DF7: 0x685C,\r\n    0x8DF8: 0x9BAD,\r\n    0x8DF9: 0x7B39,\r\n    0x8DFA: 0x5319,\r\n    0x8DFB: 0x518A,\r\n    0x8DFC: 0x5237,\r\n    0x8E40: 0x5BDF,\r\n    0x8E41: 0x62F6,\r\n    0x8E42: 0x64AE,\r\n    0x8E43: 0x64E6,\r\n    0x8E44: 0x672D,\r\n    0x8E45: 0x6BBA,\r\n    0x8E46: 0x85A9,\r\n    0x8E47: 0x96D1,\r\n    0x8E48: 0x7690,\r\n    0x8E49: 0x9BD6,\r\n    0x8E4A: 0x634C,\r\n    0x8E4B: 0x9306,\r\n    0x8E4C: 0x9BAB,\r\n    0x8E4D: 0x76BF,\r\n    0x8E4E: 0x6652,\r\n    0x8E4F: 0x4E09,\r\n    0x8E50: 0x5098,\r\n    0x8E51: 0x53C2,\r\n    0x8E52: 0x5C71,\r\n    0x8E53: 0x60E8,\r\n    0x8E54: 0x6492,\r\n    0x8E55: 0x6563,\r\n    0x8E56: 0x685F,\r\n    0x8E57: 0x71E6,\r\n    0x8E58: 0x73CA,\r\n    0x8E59: 0x7523,\r\n    0x8E5A: 0x7B97,\r\n    0x8E5B: 0x7E82,\r\n    0x8E5C: 0x8695,\r\n    0x8E5D: 0x8B83,\r\n    0x8E5E: 0x8CDB,\r\n    0x8E5F: 0x9178,\r\n    0x8E60: 0x9910,\r\n    0x8E61: 0x65AC,\r\n    0x8E62: 0x66AB,\r\n    0x8E63: 0x6B8B,\r\n    0x8E64: 0x4ED5,\r\n    0x8E65: 0x4ED4,\r\n    0x8E66: 0x4F3A,\r\n    0x8E67: 0x4F7F,\r\n    0x8E68: 0x523A,\r\n    0x8E69: 0x53F8,\r\n    0x8E6A: 0x53F2,\r\n    0x8E6B: 0x55E3,\r\n    0x8E6C: 0x56DB,\r\n    0x8E6D: 0x58EB,\r\n    0x8E6E: 0x59CB,\r\n    0x8E6F: 0x59C9,\r\n    0x8E70: 0x59FF,\r\n    0x8E71: 0x5B50,\r\n    0x8E72: 0x5C4D,\r\n    0x8E73: 0x5E02,\r\n    0x8E74: 0x5E2B,\r\n    0x8E75: 0x5FD7,\r\n    0x8E76: 0x601D,\r\n    0x8E77: 0x6307,\r\n    0x8E78: 0x652F,\r\n    0x8E79: 0x5B5C,\r\n    0x8E7A: 0x65AF,\r\n    0x8E7B: 0x65BD,\r\n    0x8E7C: 0x65E8,\r\n    0x8E7D: 0x679D,\r\n    0x8E7E: 0x6B62,\r\n    0x8E80: 0x6B7B,\r\n    0x8E81: 0x6C0F,\r\n    0x8E82: 0x7345,\r\n    0x8E83: 0x7949,\r\n    0x8E84: 0x79C1,\r\n    0x8E85: 0x7CF8,\r\n    0x8E86: 0x7D19,\r\n    0x8E87: 0x7D2B,\r\n    0x8E88: 0x80A2,\r\n    0x8E89: 0x8102,\r\n    0x8E8A: 0x81F3,\r\n    0x8E8B: 0x8996,\r\n    0x8E8C: 0x8A5E,\r\n    0x8E8D: 0x8A69,\r\n    0x8E8E: 0x8A66,\r\n    0x8E8F: 0x8A8C,\r\n    0x8E90: 0x8AEE,\r\n    0x8E91: 0x8CC7,\r\n    0x8E92: 0x8CDC,\r\n    0x8E93: 0x96CC,\r\n    0x8E94: 0x98FC,\r\n    0x8E95: 0x6B6F,\r\n    0x8E96: 0x4E8B,\r\n    0x8E97: 0x4F3C,\r\n    0x8E98: 0x4F8D,\r\n    0x8E99: 0x5150,\r\n    0x8E9A: 0x5B57,\r\n    0x8E9B: 0x5BFA,\r\n    0x8E9C: 0x6148,\r\n    0x8E9D: 0x6301,\r\n    0x8E9E: 0x6642,\r\n    0x8E9F: 0x6B21,\r\n    0x8EA0: 0x6ECB,\r\n    0x8EA1: 0x6CBB,\r\n    0x8EA2: 0x723E,\r\n    0x8EA3: 0x74BD,\r\n    0x8EA4: 0x75D4,\r\n    0x8EA5: 0x78C1,\r\n    0x8EA6: 0x793A,\r\n    0x8EA7: 0x800C,\r\n    0x8EA8: 0x8033,\r\n    0x8EA9: 0x81EA,\r\n    0x8EAA: 0x8494,\r\n    0x8EAB: 0x8F9E,\r\n    0x8EAC: 0x6C50,\r\n    0x8EAD: 0x9E7F,\r\n    0x8EAE: 0x5F0F,\r\n    0x8EAF: 0x8B58,\r\n    0x8EB0: 0x9D2B,\r\n    0x8EB1: 0x7AFA,\r\n    0x8EB2: 0x8EF8,\r\n    0x8EB3: 0x5B8D,\r\n    0x8EB4: 0x96EB,\r\n    0x8EB5: 0x4E03,\r\n    0x8EB6: 0x53F1,\r\n    0x8EB7: 0x57F7,\r\n    0x8EB8: 0x5931,\r\n    0x8EB9: 0x5AC9,\r\n    0x8EBA: 0x5BA4,\r\n    0x8EBB: 0x6089,\r\n    0x8EBC: 0x6E7F,\r\n    0x8EBD: 0x6F06,\r\n    0x8EBE: 0x75BE,\r\n    0x8EBF: 0x8CEA,\r\n    0x8EC0: 0x5B9F,\r\n    0x8EC1: 0x8500,\r\n    0x8EC2: 0x7BE0,\r\n    0x8EC3: 0x5072,\r\n    0x8EC4: 0x67F4,\r\n    0x8EC5: 0x829D,\r\n    0x8EC6: 0x5C61,\r\n    0x8EC7: 0x854A,\r\n    0x8EC8: 0x7E1E,\r\n    0x8EC9: 0x820E,\r\n    0x8ECA: 0x5199,\r\n    0x8ECB: 0x5C04,\r\n    0x8ECC: 0x6368,\r\n    0x8ECD: 0x8D66,\r\n    0x8ECE: 0x659C,\r\n    0x8ECF: 0x716E,\r\n    0x8ED0: 0x793E,\r\n    0x8ED1: 0x7D17,\r\n    0x8ED2: 0x8005,\r\n    0x8ED3: 0x8B1D,\r\n    0x8ED4: 0x8ECA,\r\n    0x8ED5: 0x906E,\r\n    0x8ED6: 0x86C7,\r\n    0x8ED7: 0x90AA,\r\n    0x8ED8: 0x501F,\r\n    0x8ED9: 0x52FA,\r\n    0x8EDA: 0x5C3A,\r\n    0x8EDB: 0x6753,\r\n    0x8EDC: 0x707C,\r\n    0x8EDD: 0x7235,\r\n    0x8EDE: 0x914C,\r\n    0x8EDF: 0x91C8,\r\n    0x8EE0: 0x932B,\r\n    0x8EE1: 0x82E5,\r\n    0x8EE2: 0x5BC2,\r\n    0x8EE3: 0x5F31,\r\n    0x8EE4: 0x60F9,\r\n    0x8EE5: 0x4E3B,\r\n    0x8EE6: 0x53D6,\r\n    0x8EE7: 0x5B88,\r\n    0x8EE8: 0x624B,\r\n    0x8EE9: 0x6731,\r\n    0x8EEA: 0x6B8A,\r\n    0x8EEB: 0x72E9,\r\n    0x8EEC: 0x73E0,\r\n    0x8EED: 0x7A2E,\r\n    0x8EEE: 0x816B,\r\n    0x8EEF: 0x8DA3,\r\n    0x8EF0: 0x9152,\r\n    0x8EF1: 0x9996,\r\n    0x8EF2: 0x5112,\r\n    0x8EF3: 0x53D7,\r\n    0x8EF4: 0x546A,\r\n    0x8EF5: 0x5BFF,\r\n    0x8EF6: 0x6388,\r\n    0x8EF7: 0x6A39,\r\n    0x8EF8: 0x7DAC,\r\n    0x8EF9: 0x9700,\r\n    0x8EFA: 0x56DA,\r\n    0x8EFB: 0x53CE,\r\n    0x8EFC: 0x5468,\r\n    0x8F40: 0x5B97,\r\n    0x8F41: 0x5C31,\r\n    0x8F42: 0x5DDE,\r\n    0x8F43: 0x4FEE,\r\n    0x8F44: 0x6101,\r\n    0x8F45: 0x62FE,\r\n    0x8F46: 0x6D32,\r\n    0x8F47: 0x79C0,\r\n    0x8F48: 0x79CB,\r\n    0x8F49: 0x7D42,\r\n    0x8F4A: 0x7E4D,\r\n    0x8F4B: 0x7FD2,\r\n    0x8F4C: 0x81ED,\r\n    0x8F4D: 0x821F,\r\n    0x8F4E: 0x8490,\r\n    0x8F4F: 0x8846,\r\n    0x8F50: 0x8972,\r\n    0x8F51: 0x8B90,\r\n    0x8F52: 0x8E74,\r\n    0x8F53: 0x8F2F,\r\n    0x8F54: 0x9031,\r\n    0x8F55: 0x914B,\r\n    0x8F56: 0x916C,\r\n    0x8F57: 0x96C6,\r\n    0x8F58: 0x919C,\r\n    0x8F59: 0x4EC0,\r\n    0x8F5A: 0x4F4F,\r\n    0x8F5B: 0x5145,\r\n    0x8F5C: 0x5341,\r\n    0x8F5D: 0x5F93,\r\n    0x8F5E: 0x620E,\r\n    0x8F5F: 0x67D4,\r\n    0x8F60: 0x6C41,\r\n    0x8F61: 0x6E0B,\r\n    0x8F62: 0x7363,\r\n    0x8F63: 0x7E26,\r\n    0x8F64: 0x91CD,\r\n    0x8F65: 0x9283,\r\n    0x8F66: 0x53D4,\r\n    0x8F67: 0x5919,\r\n    0x8F68: 0x5BBF,\r\n    0x8F69: 0x6DD1,\r\n    0x8F6A: 0x795D,\r\n    0x8F6B: 0x7E2E,\r\n    0x8F6C: 0x7C9B,\r\n    0x8F6D: 0x587E,\r\n    0x8F6E: 0x719F,\r\n    0x8F6F: 0x51FA,\r\n    0x8F70: 0x8853,\r\n    0x8F71: 0x8FF0,\r\n    0x8F72: 0x4FCA,\r\n    0x8F73: 0x5CFB,\r\n    0x8F74: 0x6625,\r\n    0x8F75: 0x77AC,\r\n    0x8F76: 0x7AE3,\r\n    0x8F77: 0x821C,\r\n    0x8F78: 0x99FF,\r\n    0x8F79: 0x51C6,\r\n    0x8F7A: 0x5FAA,\r\n    0x8F7B: 0x65EC,\r\n    0x8F7C: 0x696F,\r\n    0x8F7D: 0x6B89,\r\n    0x8F7E: 0x6DF3,\r\n    0x8F80: 0x6E96,\r\n    0x8F81: 0x6F64,\r\n    0x8F82: 0x76FE,\r\n    0x8F83: 0x7D14,\r\n    0x8F84: 0x5DE1,\r\n    0x8F85: 0x9075,\r\n    0x8F86: 0x9187,\r\n    0x8F87: 0x9806,\r\n    0x8F88: 0x51E6,\r\n    0x8F89: 0x521D,\r\n    0x8F8A: 0x6240,\r\n    0x8F8B: 0x6691,\r\n    0x8F8C: 0x66D9,\r\n    0x8F8D: 0x6E1A,\r\n    0x8F8E: 0x5EB6,\r\n    0x8F8F: 0x7DD2,\r\n    0x8F90: 0x7F72,\r\n    0x8F91: 0x66F8,\r\n    0x8F92: 0x85AF,\r\n    0x8F93: 0x85F7,\r\n    0x8F94: 0x8AF8,\r\n    0x8F95: 0x52A9,\r\n    0x8F96: 0x53D9,\r\n    0x8F97: 0x5973,\r\n    0x8F98: 0x5E8F,\r\n    0x8F99: 0x5F90,\r\n    0x8F9A: 0x6055,\r\n    0x8F9B: 0x92E4,\r\n    0x8F9C: 0x9664,\r\n    0x8F9D: 0x50B7,\r\n    0x8F9E: 0x511F,\r\n    0x8F9F: 0x52DD,\r\n    0x8FA0: 0x5320,\r\n    0x8FA1: 0x5347,\r\n    0x8FA2: 0x53EC,\r\n    0x8FA3: 0x54E8,\r\n    0x8FA4: 0x5546,\r\n    0x8FA5: 0x5531,\r\n    0x8FA6: 0x5617,\r\n    0x8FA7: 0x5968,\r\n    0x8FA8: 0x59BE,\r\n    0x8FA9: 0x5A3C,\r\n    0x8FAA: 0x5BB5,\r\n    0x8FAB: 0x5C06,\r\n    0x8FAC: 0x5C0F,\r\n    0x8FAD: 0x5C11,\r\n    0x8FAE: 0x5C1A,\r\n    0x8FAF: 0x5E84,\r\n    0x8FB0: 0x5E8A,\r\n    0x8FB1: 0x5EE0,\r\n    0x8FB2: 0x5F70,\r\n    0x8FB3: 0x627F,\r\n    0x8FB4: 0x6284,\r\n    0x8FB5: 0x62DB,\r\n    0x8FB6: 0x638C,\r\n    0x8FB7: 0x6377,\r\n    0x8FB8: 0x6607,\r\n    0x8FB9: 0x660C,\r\n    0x8FBA: 0x662D,\r\n    0x8FBB: 0x6676,\r\n    0x8FBC: 0x677E,\r\n    0x8FBD: 0x68A2,\r\n    0x8FBE: 0x6A1F,\r\n    0x8FBF: 0x6A35,\r\n    0x8FC0: 0x6CBC,\r\n    0x8FC1: 0x6D88,\r\n    0x8FC2: 0x6E09,\r\n    0x8FC3: 0x6E58,\r\n    0x8FC4: 0x713C,\r\n    0x8FC5: 0x7126,\r\n    0x8FC6: 0x7167,\r\n    0x8FC7: 0x75C7,\r\n    0x8FC8: 0x7701,\r\n    0x8FC9: 0x785D,\r\n    0x8FCA: 0x7901,\r\n    0x8FCB: 0x7965,\r\n    0x8FCC: 0x79F0,\r\n    0x8FCD: 0x7AE0,\r\n    0x8FCE: 0x7B11,\r\n    0x8FCF: 0x7CA7,\r\n    0x8FD0: 0x7D39,\r\n    0x8FD1: 0x8096,\r\n    0x8FD2: 0x83D6,\r\n    0x8FD3: 0x848B,\r\n    0x8FD4: 0x8549,\r\n    0x8FD5: 0x885D,\r\n    0x8FD6: 0x88F3,\r\n    0x8FD7: 0x8A1F,\r\n    0x8FD8: 0x8A3C,\r\n    0x8FD9: 0x8A54,\r\n    0x8FDA: 0x8A73,\r\n    0x8FDB: 0x8C61,\r\n    0x8FDC: 0x8CDE,\r\n    0x8FDD: 0x91A4,\r\n    0x8FDE: 0x9266,\r\n    0x8FDF: 0x937E,\r\n    0x8FE0: 0x9418,\r\n    0x8FE1: 0x969C,\r\n    0x8FE2: 0x9798,\r\n    0x8FE3: 0x4E0A,\r\n    0x8FE4: 0x4E08,\r\n    0x8FE5: 0x4E1E,\r\n    0x8FE6: 0x4E57,\r\n    0x8FE7: 0x5197,\r\n    0x8FE8: 0x5270,\r\n    0x8FE9: 0x57CE,\r\n    0x8FEA: 0x5834,\r\n    0x8FEB: 0x58CC,\r\n    0x8FEC: 0x5B22,\r\n    0x8FED: 0x5E38,\r\n    0x8FEE: 0x60C5,\r\n    0x8FEF: 0x64FE,\r\n    0x8FF0: 0x6761,\r\n    0x8FF1: 0x6756,\r\n    0x8FF2: 0x6D44,\r\n    0x8FF3: 0x72B6,\r\n    0x8FF4: 0x7573,\r\n    0x8FF5: 0x7A63,\r\n    0x8FF6: 0x84B8,\r\n    0x8FF7: 0x8B72,\r\n    0x8FF8: 0x91B8,\r\n    0x8FF9: 0x9320,\r\n    0x8FFA: 0x5631,\r\n    0x8FFB: 0x57F4,\r\n    0x8FFC: 0x98FE,\r\n    0x9040: 0x62ED,\r\n    0x9041: 0x690D,\r\n    0x9042: 0x6B96,\r\n    0x9043: 0x71ED,\r\n    0x9044: 0x7E54,\r\n    0x9045: 0x8077,\r\n    0x9046: 0x8272,\r\n    0x9047: 0x89E6,\r\n    0x9048: 0x98DF,\r\n    0x9049: 0x8755,\r\n    0x904A: 0x8FB1,\r\n    0x904B: 0x5C3B,\r\n    0x904C: 0x4F38,\r\n    0x904D: 0x4FE1,\r\n    0x904E: 0x4FB5,\r\n    0x904F: 0x5507,\r\n    0x9050: 0x5A20,\r\n    0x9051: 0x5BDD,\r\n    0x9052: 0x5BE9,\r\n    0x9053: 0x5FC3,\r\n    0x9054: 0x614E,\r\n    0x9055: 0x632F,\r\n    0x9056: 0x65B0,\r\n    0x9057: 0x664B,\r\n    0x9058: 0x68EE,\r\n    0x9059: 0x699B,\r\n    0x905A: 0x6D78,\r\n    0x905B: 0x6DF1,\r\n    0x905C: 0x7533,\r\n    0x905D: 0x75B9,\r\n    0x905E: 0x771F,\r\n    0x905F: 0x795E,\r\n    0x9060: 0x79E6,\r\n    0x9061: 0x7D33,\r\n    0x9062: 0x81E3,\r\n    0x9063: 0x82AF,\r\n    0x9064: 0x85AA,\r\n    0x9065: 0x89AA,\r\n    0x9066: 0x8A3A,\r\n    0x9067: 0x8EAB,\r\n    0x9068: 0x8F9B,\r\n    0x9069: 0x9032,\r\n    0x906A: 0x91DD,\r\n    0x906B: 0x9707,\r\n    0x906C: 0x4EBA,\r\n    0x906D: 0x4EC1,\r\n    0x906E: 0x5203,\r\n    0x906F: 0x5875,\r\n    0x9070: 0x58EC,\r\n    0x9071: 0x5C0B,\r\n    0x9072: 0x751A,\r\n    0x9073: 0x5C3D,\r\n    0x9074: 0x814E,\r\n    0x9075: 0x8A0A,\r\n    0x9076: 0x8FC5,\r\n    0x9077: 0x9663,\r\n    0x9078: 0x976D,\r\n    0x9079: 0x7B25,\r\n    0x907A: 0x8ACF,\r\n    0x907B: 0x9808,\r\n    0x907C: 0x9162,\r\n    0x907D: 0x56F3,\r\n    0x907E: 0x53A8,\r\n    0x9080: 0x9017,\r\n    0x9081: 0x5439,\r\n    0x9082: 0x5782,\r\n    0x9083: 0x5E25,\r\n    0x9084: 0x63A8,\r\n    0x9085: 0x6C34,\r\n    0x9086: 0x708A,\r\n    0x9087: 0x7761,\r\n    0x9088: 0x7C8B,\r\n    0x9089: 0x7FE0,\r\n    0x908A: 0x8870,\r\n    0x908B: 0x9042,\r\n    0x908C: 0x9154,\r\n    0x908D: 0x9310,\r\n    0x908E: 0x9318,\r\n    0x908F: 0x968F,\r\n    0x9090: 0x745E,\r\n    0x9091: 0x9AC4,\r\n    0x9092: 0x5D07,\r\n    0x9093: 0x5D69,\r\n    0x9094: 0x6570,\r\n    0x9095: 0x67A2,\r\n    0x9096: 0x8DA8,\r\n    0x9097: 0x96DB,\r\n    0x9098: 0x636E,\r\n    0x9099: 0x6749,\r\n    0x909A: 0x6919,\r\n    0x909B: 0x83C5,\r\n    0x909C: 0x9817,\r\n    0x909D: 0x96C0,\r\n    0x909E: 0x88FE,\r\n    0x909F: 0x6F84,\r\n    0x90A0: 0x647A,\r\n    0x90A1: 0x5BF8,\r\n    0x90A2: 0x4E16,\r\n    0x90A3: 0x702C,\r\n    0x90A4: 0x755D,\r\n    0x90A5: 0x662F,\r\n    0x90A6: 0x51C4,\r\n    0x90A7: 0x5236,\r\n    0x90A8: 0x52E2,\r\n    0x90A9: 0x59D3,\r\n    0x90AA: 0x5F81,\r\n    0x90AB: 0x6027,\r\n    0x90AC: 0x6210,\r\n    0x90AD: 0x653F,\r\n    0x90AE: 0x6574,\r\n    0x90AF: 0x661F,\r\n    0x90B0: 0x6674,\r\n    0x90B1: 0x68F2,\r\n    0x90B2: 0x6816,\r\n    0x90B3: 0x6B63,\r\n    0x90B4: 0x6E05,\r\n    0x90B5: 0x7272,\r\n    0x90B6: 0x751F,\r\n    0x90B7: 0x76DB,\r\n    0x90B8: 0x7CBE,\r\n    0x90B9: 0x8056,\r\n    0x90BA: 0x58F0,\r\n    0x90BB: 0x88FD,\r\n    0x90BC: 0x897F,\r\n    0x90BD: 0x8AA0,\r\n    0x90BE: 0x8A93,\r\n    0x90BF: 0x8ACB,\r\n    0x90C0: 0x901D,\r\n    0x90C1: 0x9192,\r\n    0x90C2: 0x9752,\r\n    0x90C3: 0x9759,\r\n    0x90C4: 0x6589,\r\n    0x90C5: 0x7A0E,\r\n    0x90C6: 0x8106,\r\n    0x90C7: 0x96BB,\r\n    0x90C8: 0x5E2D,\r\n    0x90C9: 0x60DC,\r\n    0x90CA: 0x621A,\r\n    0x90CB: 0x65A5,\r\n    0x90CC: 0x6614,\r\n    0x90CD: 0x6790,\r\n    0x90CE: 0x77F3,\r\n    0x90CF: 0x7A4D,\r\n    0x90D0: 0x7C4D,\r\n    0x90D1: 0x7E3E,\r\n    0x90D2: 0x810A,\r\n    0x90D3: 0x8CAC,\r\n    0x90D4: 0x8D64,\r\n    0x90D5: 0x8DE1,\r\n    0x90D6: 0x8E5F,\r\n    0x90D7: 0x78A9,\r\n    0x90D8: 0x5207,\r\n    0x90D9: 0x62D9,\r\n    0x90DA: 0x63A5,\r\n    0x90DB: 0x6442,\r\n    0x90DC: 0x6298,\r\n    0x90DD: 0x8A2D,\r\n    0x90DE: 0x7A83,\r\n    0x90DF: 0x7BC0,\r\n    0x90E0: 0x8AAC,\r\n    0x90E1: 0x96EA,\r\n    0x90E2: 0x7D76,\r\n    0x90E3: 0x820C,\r\n    0x90E4: 0x8749,\r\n    0x90E5: 0x4ED9,\r\n    0x90E6: 0x5148,\r\n    0x90E7: 0x5343,\r\n    0x90E8: 0x5360,\r\n    0x90E9: 0x5BA3,\r\n    0x90EA: 0x5C02,\r\n    0x90EB: 0x5C16,\r\n    0x90EC: 0x5DDD,\r\n    0x90ED: 0x6226,\r\n    0x90EE: 0x6247,\r\n    0x90EF: 0x64B0,\r\n    0x90F0: 0x6813,\r\n    0x90F1: 0x6834,\r\n    0x90F2: 0x6CC9,\r\n    0x90F3: 0x6D45,\r\n    0x90F4: 0x6D17,\r\n    0x90F5: 0x67D3,\r\n    0x90F6: 0x6F5C,\r\n    0x90F7: 0x714E,\r\n    0x90F8: 0x717D,\r\n    0x90F9: 0x65CB,\r\n    0x90FA: 0x7A7F,\r\n    0x90FB: 0x7BAD,\r\n    0x90FC: 0x7DDA,\r\n    0x9140: 0x7E4A,\r\n    0x9141: 0x7FA8,\r\n    0x9142: 0x817A,\r\n    0x9143: 0x821B,\r\n    0x9144: 0x8239,\r\n    0x9145: 0x85A6,\r\n    0x9146: 0x8A6E,\r\n    0x9147: 0x8CCE,\r\n    0x9148: 0x8DF5,\r\n    0x9149: 0x9078,\r\n    0x914A: 0x9077,\r\n    0x914B: 0x92AD,\r\n    0x914C: 0x9291,\r\n    0x914D: 0x9583,\r\n    0x914E: 0x9BAE,\r\n    0x914F: 0x524D,\r\n    0x9150: 0x5584,\r\n    0x9151: 0x6F38,\r\n    0x9152: 0x7136,\r\n    0x9153: 0x5168,\r\n    0x9154: 0x7985,\r\n    0x9155: 0x7E55,\r\n    0x9156: 0x81B3,\r\n    0x9157: 0x7CCE,\r\n    0x9158: 0x564C,\r\n    0x9159: 0x5851,\r\n    0x915A: 0x5CA8,\r\n    0x915B: 0x63AA,\r\n    0x915C: 0x66FE,\r\n    0x915D: 0x66FD,\r\n    0x915E: 0x695A,\r\n    0x915F: 0x72D9,\r\n    0x9160: 0x758F,\r\n    0x9161: 0x758E,\r\n    0x9162: 0x790E,\r\n    0x9163: 0x7956,\r\n    0x9164: 0x79DF,\r\n    0x9165: 0x7C97,\r\n    0x9166: 0x7D20,\r\n    0x9167: 0x7D44,\r\n    0x9168: 0x8607,\r\n    0x9169: 0x8A34,\r\n    0x916A: 0x963B,\r\n    0x916B: 0x9061,\r\n    0x916C: 0x9F20,\r\n    0x916D: 0x50E7,\r\n    0x916E: 0x5275,\r\n    0x916F: 0x53CC,\r\n    0x9170: 0x53E2,\r\n    0x9171: 0x5009,\r\n    0x9172: 0x55AA,\r\n    0x9173: 0x58EE,\r\n    0x9174: 0x594F,\r\n    0x9175: 0x723D,\r\n    0x9176: 0x5B8B,\r\n    0x9177: 0x5C64,\r\n    0x9178: 0x531D,\r\n    0x9179: 0x60E3,\r\n    0x917A: 0x60F3,\r\n    0x917B: 0x635C,\r\n    0x917C: 0x6383,\r\n    0x917D: 0x633F,\r\n    0x917E: 0x63BB,\r\n    0x9180: 0x64CD,\r\n    0x9181: 0x65E9,\r\n    0x9182: 0x66F9,\r\n    0x9183: 0x5DE3,\r\n    0x9184: 0x69CD,\r\n    0x9185: 0x69FD,\r\n    0x9186: 0x6F15,\r\n    0x9187: 0x71E5,\r\n    0x9188: 0x4E89,\r\n    0x9189: 0x75E9,\r\n    0x918A: 0x76F8,\r\n    0x918B: 0x7A93,\r\n    0x918C: 0x7CDF,\r\n    0x918D: 0x7DCF,\r\n    0x918E: 0x7D9C,\r\n    0x918F: 0x8061,\r\n    0x9190: 0x8349,\r\n    0x9191: 0x8358,\r\n    0x9192: 0x846C,\r\n    0x9193: 0x84BC,\r\n    0x9194: 0x85FB,\r\n    0x9195: 0x88C5,\r\n    0x9196: 0x8D70,\r\n    0x9197: 0x9001,\r\n    0x9198: 0x906D,\r\n    0x9199: 0x9397,\r\n    0x919A: 0x971C,\r\n    0x919B: 0x9A12,\r\n    0x919C: 0x50CF,\r\n    0x919D: 0x5897,\r\n    0x919E: 0x618E,\r\n    0x919F: 0x81D3,\r\n    0x91A0: 0x8535,\r\n    0x91A1: 0x8D08,\r\n    0x91A2: 0x9020,\r\n    0x91A3: 0x4FC3,\r\n    0x91A4: 0x5074,\r\n    0x91A5: 0x5247,\r\n    0x91A6: 0x5373,\r\n    0x91A7: 0x606F,\r\n    0x91A8: 0x6349,\r\n    0x91A9: 0x675F,\r\n    0x91AA: 0x6E2C,\r\n    0x91AB: 0x8DB3,\r\n    0x91AC: 0x901F,\r\n    0x91AD: 0x4FD7,\r\n    0x91AE: 0x5C5E,\r\n    0x91AF: 0x8CCA,\r\n    0x91B0: 0x65CF,\r\n    0x91B1: 0x7D9A,\r\n    0x91B2: 0x5352,\r\n    0x91B3: 0x8896,\r\n    0x91B4: 0x5176,\r\n    0x91B5: 0x63C3,\r\n    0x91B6: 0x5B58,\r\n    0x91B7: 0x5B6B,\r\n    0x91B8: 0x5C0A,\r\n    0x91B9: 0x640D,\r\n    0x91BA: 0x6751,\r\n    0x91BB: 0x905C,\r\n    0x91BC: 0x4ED6,\r\n    0x91BD: 0x591A,\r\n    0x91BE: 0x592A,\r\n    0x91BF: 0x6C70,\r\n    0x91C0: 0x8A51,\r\n    0x91C1: 0x553E,\r\n    0x91C2: 0x5815,\r\n    0x91C3: 0x59A5,\r\n    0x91C4: 0x60F0,\r\n    0x91C5: 0x6253,\r\n    0x91C6: 0x67C1,\r\n    0x91C7: 0x8235,\r\n    0x91C8: 0x6955,\r\n    0x91C9: 0x9640,\r\n    0x91CA: 0x99C4,\r\n    0x91CB: 0x9A28,\r\n    0x91CC: 0x4F53,\r\n    0x91CD: 0x5806,\r\n    0x91CE: 0x5BFE,\r\n    0x91CF: 0x8010,\r\n    0x91D0: 0x5CB1,\r\n    0x91D1: 0x5E2F,\r\n    0x91D2: 0x5F85,\r\n    0x91D3: 0x6020,\r\n    0x91D4: 0x614B,\r\n    0x91D5: 0x6234,\r\n    0x91D6: 0x66FF,\r\n    0x91D7: 0x6CF0,\r\n    0x91D8: 0x6EDE,\r\n    0x91D9: 0x80CE,\r\n    0x91DA: 0x817F,\r\n    0x91DB: 0x82D4,\r\n    0x91DC: 0x888B,\r\n    0x91DD: 0x8CB8,\r\n    0x91DE: 0x9000,\r\n    0x91DF: 0x902E,\r\n    0x91E0: 0x968A,\r\n    0x91E1: 0x9EDB,\r\n    0x91E2: 0x9BDB,\r\n    0x91E3: 0x4EE3,\r\n    0x91E4: 0x53F0,\r\n    0x91E5: 0x5927,\r\n    0x91E6: 0x7B2C,\r\n    0x91E7: 0x918D,\r\n    0x91E8: 0x984C,\r\n    0x91E9: 0x9DF9,\r\n    0x91EA: 0x6EDD,\r\n    0x91EB: 0x7027,\r\n    0x91EC: 0x5353,\r\n    0x91ED: 0x5544,\r\n    0x91EE: 0x5B85,\r\n    0x91EF: 0x6258,\r\n    0x91F0: 0x629E,\r\n    0x91F1: 0x62D3,\r\n    0x91F2: 0x6CA2,\r\n    0x91F3: 0x6FEF,\r\n    0x91F4: 0x7422,\r\n    0x91F5: 0x8A17,\r\n    0x91F6: 0x9438,\r\n    0x91F7: 0x6FC1,\r\n    0x91F8: 0x8AFE,\r\n    0x91F9: 0x8338,\r\n    0x91FA: 0x51E7,\r\n    0x91FB: 0x86F8,\r\n    0x91FC: 0x53EA,\r\n    0x9240: 0x53E9,\r\n    0x9241: 0x4F46,\r\n    0x9242: 0x9054,\r\n    0x9243: 0x8FB0,\r\n    0x9244: 0x596A,\r\n    0x9245: 0x8131,\r\n    0x9246: 0x5DFD,\r\n    0x9247: 0x7AEA,\r\n    0x9248: 0x8FBF,\r\n    0x9249: 0x68DA,\r\n    0x924A: 0x8C37,\r\n    0x924B: 0x72F8,\r\n    0x924C: 0x9C48,\r\n    0x924D: 0x6A3D,\r\n    0x924E: 0x8AB0,\r\n    0x924F: 0x4E39,\r\n    0x9250: 0x5358,\r\n    0x9251: 0x5606,\r\n    0x9252: 0x5766,\r\n    0x9253: 0x62C5,\r\n    0x9254: 0x63A2,\r\n    0x9255: 0x65E6,\r\n    0x9256: 0x6B4E,\r\n    0x9257: 0x6DE1,\r\n    0x9258: 0x6E5B,\r\n    0x9259: 0x70AD,\r\n    0x925A: 0x77ED,\r\n    0x925B: 0x7AEF,\r\n    0x925C: 0x7BAA,\r\n    0x925D: 0x7DBB,\r\n    0x925E: 0x803D,\r\n    0x925F: 0x80C6,\r\n    0x9260: 0x86CB,\r\n    0x9261: 0x8A95,\r\n    0x9262: 0x935B,\r\n    0x9263: 0x56E3,\r\n    0x9264: 0x58C7,\r\n    0x9265: 0x5F3E,\r\n    0x9266: 0x65AD,\r\n    0x9267: 0x6696,\r\n    0x9268: 0x6A80,\r\n    0x9269: 0x6BB5,\r\n    0x926A: 0x7537,\r\n    0x926B: 0x8AC7,\r\n    0x926C: 0x5024,\r\n    0x926D: 0x77E5,\r\n    0x926E: 0x5730,\r\n    0x926F: 0x5F1B,\r\n    0x9270: 0x6065,\r\n    0x9271: 0x667A,\r\n    0x9272: 0x6C60,\r\n    0x9273: 0x75F4,\r\n    0x9274: 0x7A1A,\r\n    0x9275: 0x7F6E,\r\n    0x9276: 0x81F4,\r\n    0x9277: 0x8718,\r\n    0x9278: 0x9045,\r\n    0x9279: 0x99B3,\r\n    0x927A: 0x7BC9,\r\n    0x927B: 0x755C,\r\n    0x927C: 0x7AF9,\r\n    0x927D: 0x7B51,\r\n    0x927E: 0x84C4,\r\n    0x9280: 0x9010,\r\n    0x9281: 0x79E9,\r\n    0x9282: 0x7A92,\r\n    0x9283: 0x8336,\r\n    0x9284: 0x5AE1,\r\n    0x9285: 0x7740,\r\n    0x9286: 0x4E2D,\r\n    0x9287: 0x4EF2,\r\n    0x9288: 0x5B99,\r\n    0x9289: 0x5FE0,\r\n    0x928A: 0x62BD,\r\n    0x928B: 0x663C,\r\n    0x928C: 0x67F1,\r\n    0x928D: 0x6CE8,\r\n    0x928E: 0x866B,\r\n    0x928F: 0x8877,\r\n    0x9290: 0x8A3B,\r\n    0x9291: 0x914E,\r\n    0x9292: 0x92F3,\r\n    0x9293: 0x99D0,\r\n    0x9294: 0x6A17,\r\n    0x9295: 0x7026,\r\n    0x9296: 0x732A,\r\n    0x9297: 0x82E7,\r\n    0x9298: 0x8457,\r\n    0x9299: 0x8CAF,\r\n    0x929A: 0x4E01,\r\n    0x929B: 0x5146,\r\n    0x929C: 0x51CB,\r\n    0x929D: 0x558B,\r\n    0x929E: 0x5BF5,\r\n    0x929F: 0x5E16,\r\n    0x92A0: 0x5E33,\r\n    0x92A1: 0x5E81,\r\n    0x92A2: 0x5F14,\r\n    0x92A3: 0x5F35,\r\n    0x92A4: 0x5F6B,\r\n    0x92A5: 0x5FB4,\r\n    0x92A6: 0x61F2,\r\n    0x92A7: 0x6311,\r\n    0x92A8: 0x66A2,\r\n    0x92A9: 0x671D,\r\n    0x92AA: 0x6F6E,\r\n    0x92AB: 0x7252,\r\n    0x92AC: 0x753A,\r\n    0x92AD: 0x773A,\r\n    0x92AE: 0x8074,\r\n    0x92AF: 0x8139,\r\n    0x92B0: 0x8178,\r\n    0x92B1: 0x8776,\r\n    0x92B2: 0x8ABF,\r\n    0x92B3: 0x8ADC,\r\n    0x92B4: 0x8D85,\r\n    0x92B5: 0x8DF3,\r\n    0x92B6: 0x929A,\r\n    0x92B7: 0x9577,\r\n    0x92B8: 0x9802,\r\n    0x92B9: 0x9CE5,\r\n    0x92BA: 0x52C5,\r\n    0x92BB: 0x6357,\r\n    0x92BC: 0x76F4,\r\n    0x92BD: 0x6715,\r\n    0x92BE: 0x6C88,\r\n    0x92BF: 0x73CD,\r\n    0x92C0: 0x8CC3,\r\n    0x92C1: 0x93AE,\r\n    0x92C2: 0x9673,\r\n    0x92C3: 0x6D25,\r\n    0x92C4: 0x589C,\r\n    0x92C5: 0x690E,\r\n    0x92C6: 0x69CC,\r\n    0x92C7: 0x8FFD,\r\n    0x92C8: 0x939A,\r\n    0x92C9: 0x75DB,\r\n    0x92CA: 0x901A,\r\n    0x92CB: 0x585A,\r\n    0x92CC: 0x6802,\r\n    0x92CD: 0x63B4,\r\n    0x92CE: 0x69FB,\r\n    0x92CF: 0x4F43,\r\n    0x92D0: 0x6F2C,\r\n    0x92D1: 0x67D8,\r\n    0x92D2: 0x8FBB,\r\n    0x92D3: 0x8526,\r\n    0x92D4: 0x7DB4,\r\n    0x92D5: 0x9354,\r\n    0x92D6: 0x693F,\r\n    0x92D7: 0x6F70,\r\n    0x92D8: 0x576A,\r\n    0x92D9: 0x58F7,\r\n    0x92DA: 0x5B2C,\r\n    0x92DB: 0x7D2C,\r\n    0x92DC: 0x722A,\r\n    0x92DD: 0x540A,\r\n    0x92DE: 0x91E3,\r\n    0x92DF: 0x9DB4,\r\n    0x92E0: 0x4EAD,\r\n    0x92E1: 0x4F4E,\r\n    0x92E2: 0x505C,\r\n    0x92E3: 0x5075,\r\n    0x92E4: 0x5243,\r\n    0x92E5: 0x8C9E,\r\n    0x92E6: 0x5448,\r\n    0x92E7: 0x5824,\r\n    0x92E8: 0x5B9A,\r\n    0x92E9: 0x5E1D,\r\n    0x92EA: 0x5E95,\r\n    0x92EB: 0x5EAD,\r\n    0x92EC: 0x5EF7,\r\n    0x92ED: 0x5F1F,\r\n    0x92EE: 0x608C,\r\n    0x92EF: 0x62B5,\r\n    0x92F0: 0x633A,\r\n    0x92F1: 0x63D0,\r\n    0x92F2: 0x68AF,\r\n    0x92F3: 0x6C40,\r\n    0x92F4: 0x7887,\r\n    0x92F5: 0x798E,\r\n    0x92F6: 0x7A0B,\r\n    0x92F7: 0x7DE0,\r\n    0x92F8: 0x8247,\r\n    0x92F9: 0x8A02,\r\n    0x92FA: 0x8AE6,\r\n    0x92FB: 0x8E44,\r\n    0x92FC: 0x9013,\r\n    0x9340: 0x90B8,\r\n    0x9341: 0x912D,\r\n    0x9342: 0x91D8,\r\n    0x9343: 0x9F0E,\r\n    0x9344: 0x6CE5,\r\n    0x9345: 0x6458,\r\n    0x9346: 0x64E2,\r\n    0x9347: 0x6575,\r\n    0x9348: 0x6EF4,\r\n    0x9349: 0x7684,\r\n    0x934A: 0x7B1B,\r\n    0x934B: 0x9069,\r\n    0x934C: 0x93D1,\r\n    0x934D: 0x6EBA,\r\n    0x934E: 0x54F2,\r\n    0x934F: 0x5FB9,\r\n    0x9350: 0x64A4,\r\n    0x9351: 0x8F4D,\r\n    0x9352: 0x8FED,\r\n    0x9353: 0x9244,\r\n    0x9354: 0x5178,\r\n    0x9355: 0x586B,\r\n    0x9356: 0x5929,\r\n    0x9357: 0x5C55,\r\n    0x9358: 0x5E97,\r\n    0x9359: 0x6DFB,\r\n    0x935A: 0x7E8F,\r\n    0x935B: 0x751C,\r\n    0x935C: 0x8CBC,\r\n    0x935D: 0x8EE2,\r\n    0x935E: 0x985B,\r\n    0x935F: 0x70B9,\r\n    0x9360: 0x4F1D,\r\n    0x9361: 0x6BBF,\r\n    0x9362: 0x6FB1,\r\n    0x9363: 0x7530,\r\n    0x9364: 0x96FB,\r\n    0x9365: 0x514E,\r\n    0x9366: 0x5410,\r\n    0x9367: 0x5835,\r\n    0x9368: 0x5857,\r\n    0x9369: 0x59AC,\r\n    0x936A: 0x5C60,\r\n    0x936B: 0x5F92,\r\n    0x936C: 0x6597,\r\n    0x936D: 0x675C,\r\n    0x936E: 0x6E21,\r\n    0x936F: 0x767B,\r\n    0x9370: 0x83DF,\r\n    0x9371: 0x8CED,\r\n    0x9372: 0x9014,\r\n    0x9373: 0x90FD,\r\n    0x9374: 0x934D,\r\n    0x9375: 0x7825,\r\n    0x9376: 0x783A,\r\n    0x9377: 0x52AA,\r\n    0x9378: 0x5EA6,\r\n    0x9379: 0x571F,\r\n    0x937A: 0x5974,\r\n    0x937B: 0x6012,\r\n    0x937C: 0x5012,\r\n    0x937D: 0x515A,\r\n    0x937E: 0x51AC,\r\n    0x9380: 0x51CD,\r\n    0x9381: 0x5200,\r\n    0x9382: 0x5510,\r\n    0x9383: 0x5854,\r\n    0x9384: 0x5858,\r\n    0x9385: 0x5957,\r\n    0x9386: 0x5B95,\r\n    0x9387: 0x5CF6,\r\n    0x9388: 0x5D8B,\r\n    0x9389: 0x60BC,\r\n    0x938A: 0x6295,\r\n    0x938B: 0x642D,\r\n    0x938C: 0x6771,\r\n    0x938D: 0x6843,\r\n    0x938E: 0x68BC,\r\n    0x938F: 0x68DF,\r\n    0x9390: 0x76D7,\r\n    0x9391: 0x6DD8,\r\n    0x9392: 0x6E6F,\r\n    0x9393: 0x6D9B,\r\n    0x9394: 0x706F,\r\n    0x9395: 0x71C8,\r\n    0x9396: 0x5F53,\r\n    0x9397: 0x75D8,\r\n    0x9398: 0x7977,\r\n    0x9399: 0x7B49,\r\n    0x939A: 0x7B54,\r\n    0x939B: 0x7B52,\r\n    0x939C: 0x7CD6,\r\n    0x939D: 0x7D71,\r\n    0x939E: 0x5230,\r\n    0x939F: 0x8463,\r\n    0x93A0: 0x8569,\r\n    0x93A1: 0x85E4,\r\n    0x93A2: 0x8A0E,\r\n    0x93A3: 0x8B04,\r\n    0x93A4: 0x8C46,\r\n    0x93A5: 0x8E0F,\r\n    0x93A6: 0x9003,\r\n    0x93A7: 0x900F,\r\n    0x93A8: 0x9419,\r\n    0x93A9: 0x9676,\r\n    0x93AA: 0x982D,\r\n    0x93AB: 0x9A30,\r\n    0x93AC: 0x95D8,\r\n    0x93AD: 0x50CD,\r\n    0x93AE: 0x52D5,\r\n    0x93AF: 0x540C,\r\n    0x93B0: 0x5802,\r\n    0x93B1: 0x5C0E,\r\n    0x93B2: 0x61A7,\r\n    0x93B3: 0x649E,\r\n    0x93B4: 0x6D1E,\r\n    0x93B5: 0x77B3,\r\n    0x93B6: 0x7AE5,\r\n    0x93B7: 0x80F4,\r\n    0x93B8: 0x8404,\r\n    0x93B9: 0x9053,\r\n    0x93BA: 0x9285,\r\n    0x93BB: 0x5CE0,\r\n    0x93BC: 0x9D07,\r\n    0x93BD: 0x533F,\r\n    0x93BE: 0x5F97,\r\n    0x93BF: 0x5FB3,\r\n    0x93C0: 0x6D9C,\r\n    0x93C1: 0x7279,\r\n    0x93C2: 0x7763,\r\n    0x93C3: 0x79BF,\r\n    0x93C4: 0x7BE4,\r\n    0x93C5: 0x6BD2,\r\n    0x93C6: 0x72EC,\r\n    0x93C7: 0x8AAD,\r\n    0x93C8: 0x6803,\r\n    0x93C9: 0x6A61,\r\n    0x93CA: 0x51F8,\r\n    0x93CB: 0x7A81,\r\n    0x93CC: 0x6934,\r\n    0x93CD: 0x5C4A,\r\n    0x93CE: 0x9CF6,\r\n    0x93CF: 0x82EB,\r\n    0x93D0: 0x5BC5,\r\n    0x93D1: 0x9149,\r\n    0x93D2: 0x701E,\r\n    0x93D3: 0x5678,\r\n    0x93D4: 0x5C6F,\r\n    0x93D5: 0x60C7,\r\n    0x93D6: 0x6566,\r\n    0x93D7: 0x6C8C,\r\n    0x93D8: 0x8C5A,\r\n    0x93D9: 0x9041,\r\n    0x93DA: 0x9813,\r\n    0x93DB: 0x5451,\r\n    0x93DC: 0x66C7,\r\n    0x93DD: 0x920D,\r\n    0x93DE: 0x5948,\r\n    0x93DF: 0x90A3,\r\n    0x93E0: 0x5185,\r\n    0x93E1: 0x4E4D,\r\n    0x93E2: 0x51EA,\r\n    0x93E3: 0x8599,\r\n    0x93E4: 0x8B0E,\r\n    0x93E5: 0x7058,\r\n    0x93E6: 0x637A,\r\n    0x93E7: 0x934B,\r\n    0x93E8: 0x6962,\r\n    0x93E9: 0x99B4,\r\n    0x93EA: 0x7E04,\r\n    0x93EB: 0x7577,\r\n    0x93EC: 0x5357,\r\n    0x93ED: 0x6960,\r\n    0x93EE: 0x8EDF,\r\n    0x93EF: 0x96E3,\r\n    0x93F0: 0x6C5D,\r\n    0x93F1: 0x4E8C,\r\n    0x93F2: 0x5C3C,\r\n    0x93F3: 0x5F10,\r\n    0x93F4: 0x8FE9,\r\n    0x93F5: 0x5302,\r\n    0x93F6: 0x8CD1,\r\n    0x93F7: 0x8089,\r\n    0x93F8: 0x8679,\r\n    0x93F9: 0x5EFF,\r\n    0x93FA: 0x65E5,\r\n    0x93FB: 0x4E73,\r\n    0x93FC: 0x5165,\r\n    0x9440: 0x5982,\r\n    0x9441: 0x5C3F,\r\n    0x9442: 0x97EE,\r\n    0x9443: 0x4EFB,\r\n    0x9444: 0x598A,\r\n    0x9445: 0x5FCD,\r\n    0x9446: 0x8A8D,\r\n    0x9447: 0x6FE1,\r\n    0x9448: 0x79B0,\r\n    0x9449: 0x7962,\r\n    0x944A: 0x5BE7,\r\n    0x944B: 0x8471,\r\n    0x944C: 0x732B,\r\n    0x944D: 0x71B1,\r\n    0x944E: 0x5E74,\r\n    0x944F: 0x5FF5,\r\n    0x9450: 0x637B,\r\n    0x9451: 0x649A,\r\n    0x9452: 0x71C3,\r\n    0x9453: 0x7C98,\r\n    0x9454: 0x4E43,\r\n    0x9455: 0x5EFC,\r\n    0x9456: 0x4E4B,\r\n    0x9457: 0x57DC,\r\n    0x9458: 0x56A2,\r\n    0x9459: 0x60A9,\r\n    0x945A: 0x6FC3,\r\n    0x945B: 0x7D0D,\r\n    0x945C: 0x80FD,\r\n    0x945D: 0x8133,\r\n    0x945E: 0x81BF,\r\n    0x945F: 0x8FB2,\r\n    0x9460: 0x8997,\r\n    0x9461: 0x86A4,\r\n    0x9462: 0x5DF4,\r\n    0x9463: 0x628A,\r\n    0x9464: 0x64AD,\r\n    0x9465: 0x8987,\r\n    0x9466: 0x6777,\r\n    0x9467: 0x6CE2,\r\n    0x9468: 0x6D3E,\r\n    0x9469: 0x7436,\r\n    0x946A: 0x7834,\r\n    0x946B: 0x5A46,\r\n    0x946C: 0x7F75,\r\n    0x946D: 0x82AD,\r\n    0x946E: 0x99AC,\r\n    0x946F: 0x4FF3,\r\n    0x9470: 0x5EC3,\r\n    0x9471: 0x62DD,\r\n    0x9472: 0x6392,\r\n    0x9473: 0x6557,\r\n    0x9474: 0x676F,\r\n    0x9475: 0x76C3,\r\n    0x9476: 0x724C,\r\n    0x9477: 0x80CC,\r\n    0x9478: 0x80BA,\r\n    0x9479: 0x8F29,\r\n    0x947A: 0x914D,\r\n    0x947B: 0x500D,\r\n    0x947C: 0x57F9,\r\n    0x947D: 0x5A92,\r\n    0x947E: 0x6885,\r\n    0x9480: 0x6973,\r\n    0x9481: 0x7164,\r\n    0x9482: 0x72FD,\r\n    0x9483: 0x8CB7,\r\n    0x9484: 0x58F2,\r\n    0x9485: 0x8CE0,\r\n    0x9486: 0x966A,\r\n    0x9487: 0x9019,\r\n    0x9488: 0x877F,\r\n    0x9489: 0x79E4,\r\n    0x948A: 0x77E7,\r\n    0x948B: 0x8429,\r\n    0x948C: 0x4F2F,\r\n    0x948D: 0x5265,\r\n    0x948E: 0x535A,\r\n    0x948F: 0x62CD,\r\n    0x9490: 0x67CF,\r\n    0x9491: 0x6CCA,\r\n    0x9492: 0x767D,\r\n    0x9493: 0x7B94,\r\n    0x9494: 0x7C95,\r\n    0x9495: 0x8236,\r\n    0x9496: 0x8584,\r\n    0x9497: 0x8FEB,\r\n    0x9498: 0x66DD,\r\n    0x9499: 0x6F20,\r\n    0x949A: 0x7206,\r\n    0x949B: 0x7E1B,\r\n    0x949C: 0x83AB,\r\n    0x949D: 0x99C1,\r\n    0x949E: 0x9EA6,\r\n    0x949F: 0x51FD,\r\n    0x94A0: 0x7BB1,\r\n    0x94A1: 0x7872,\r\n    0x94A2: 0x7BB8,\r\n    0x94A3: 0x8087,\r\n    0x94A4: 0x7B48,\r\n    0x94A5: 0x6AE8,\r\n    0x94A6: 0x5E61,\r\n    0x94A7: 0x808C,\r\n    0x94A8: 0x7551,\r\n    0x94A9: 0x7560,\r\n    0x94AA: 0x516B,\r\n    0x94AB: 0x9262,\r\n    0x94AC: 0x6E8C,\r\n    0x94AD: 0x767A,\r\n    0x94AE: 0x9197,\r\n    0x94AF: 0x9AEA,\r\n    0x94B0: 0x4F10,\r\n    0x94B1: 0x7F70,\r\n    0x94B2: 0x629C,\r\n    0x94B3: 0x7B4F,\r\n    0x94B4: 0x95A5,\r\n    0x94B5: 0x9CE9,\r\n    0x94B6: 0x567A,\r\n    0x94B7: 0x5859,\r\n    0x94B8: 0x86E4,\r\n    0x94B9: 0x96BC,\r\n    0x94BA: 0x4F34,\r\n    0x94BB: 0x5224,\r\n    0x94BC: 0x534A,\r\n    0x94BD: 0x53CD,\r\n    0x94BE: 0x53DB,\r\n    0x94BF: 0x5E06,\r\n    0x94C0: 0x642C,\r\n    0x94C1: 0x6591,\r\n    0x94C2: 0x677F,\r\n    0x94C3: 0x6C3E,\r\n    0x94C4: 0x6C4E,\r\n    0x94C5: 0x7248,\r\n    0x94C6: 0x72AF,\r\n    0x94C7: 0x73ED,\r\n    0x94C8: 0x7554,\r\n    0x94C9: 0x7E41,\r\n    0x94CA: 0x822C,\r\n    0x94CB: 0x85E9,\r\n    0x94CC: 0x8CA9,\r\n    0x94CD: 0x7BC4,\r\n    0x94CE: 0x91C6,\r\n    0x94CF: 0x7169,\r\n    0x94D0: 0x9812,\r\n    0x94D1: 0x98EF,\r\n    0x94D2: 0x633D,\r\n    0x94D3: 0x6669,\r\n    0x94D4: 0x756A,\r\n    0x94D5: 0x76E4,\r\n    0x94D6: 0x78D0,\r\n    0x94D7: 0x8543,\r\n    0x94D8: 0x86EE,\r\n    0x94D9: 0x532A,\r\n    0x94DA: 0x5351,\r\n    0x94DB: 0x5426,\r\n    0x94DC: 0x5983,\r\n    0x94DD: 0x5E87,\r\n    0x94DE: 0x5F7C,\r\n    0x94DF: 0x60B2,\r\n    0x94E0: 0x6249,\r\n    0x94E1: 0x6279,\r\n    0x94E2: 0x62AB,\r\n    0x94E3: 0x6590,\r\n    0x94E4: 0x6BD4,\r\n    0x94E5: 0x6CCC,\r\n    0x94E6: 0x75B2,\r\n    0x94E7: 0x76AE,\r\n    0x94E8: 0x7891,\r\n    0x94E9: 0x79D8,\r\n    0x94EA: 0x7DCB,\r\n    0x94EB: 0x7F77,\r\n    0x94EC: 0x80A5,\r\n    0x94ED: 0x88AB,\r\n    0x94EE: 0x8AB9,\r\n    0x94EF: 0x8CBB,\r\n    0x94F0: 0x907F,\r\n    0x94F1: 0x975E,\r\n    0x94F2: 0x98DB,\r\n    0x94F3: 0x6A0B,\r\n    0x94F4: 0x7C38,\r\n    0x94F5: 0x5099,\r\n    0x94F6: 0x5C3E,\r\n    0x94F7: 0x5FAE,\r\n    0x94F8: 0x6787,\r\n    0x94F9: 0x6BD8,\r\n    0x94FA: 0x7435,\r\n    0x94FB: 0x7709,\r\n    0x94FC: 0x7F8E,\r\n    0x9540: 0x9F3B,\r\n    0x9541: 0x67CA,\r\n    0x9542: 0x7A17,\r\n    0x9543: 0x5339,\r\n    0x9544: 0x758B,\r\n    0x9545: 0x9AED,\r\n    0x9546: 0x5F66,\r\n    0x9547: 0x819D,\r\n    0x9548: 0x83F1,\r\n    0x9549: 0x8098,\r\n    0x954A: 0x5F3C,\r\n    0x954B: 0x5FC5,\r\n    0x954C: 0x7562,\r\n    0x954D: 0x7B46,\r\n    0x954E: 0x903C,\r\n    0x954F: 0x6867,\r\n    0x9550: 0x59EB,\r\n    0x9551: 0x5A9B,\r\n    0x9552: 0x7D10,\r\n    0x9553: 0x767E,\r\n    0x9554: 0x8B2C,\r\n    0x9555: 0x4FF5,\r\n    0x9556: 0x5F6A,\r\n    0x9557: 0x6A19,\r\n    0x9558: 0x6C37,\r\n    0x9559: 0x6F02,\r\n    0x955A: 0x74E2,\r\n    0x955B: 0x7968,\r\n    0x955C: 0x8868,\r\n    0x955D: 0x8A55,\r\n    0x955E: 0x8C79,\r\n    0x955F: 0x5EDF,\r\n    0x9560: 0x63CF,\r\n    0x9561: 0x75C5,\r\n    0x9562: 0x79D2,\r\n    0x9563: 0x82D7,\r\n    0x9564: 0x9328,\r\n    0x9565: 0x92F2,\r\n    0x9566: 0x849C,\r\n    0x9567: 0x86ED,\r\n    0x9568: 0x9C2D,\r\n    0x9569: 0x54C1,\r\n    0x956A: 0x5F6C,\r\n    0x956B: 0x658C,\r\n    0x956C: 0x6D5C,\r\n    0x956D: 0x7015,\r\n    0x956E: 0x8CA7,\r\n    0x956F: 0x8CD3,\r\n    0x9570: 0x983B,\r\n    0x9571: 0x654F,\r\n    0x9572: 0x74F6,\r\n    0x9573: 0x4E0D,\r\n    0x9574: 0x4ED8,\r\n    0x9575: 0x57E0,\r\n    0x9576: 0x592B,\r\n    0x9577: 0x5A66,\r\n    0x9578: 0x5BCC,\r\n    0x9579: 0x51A8,\r\n    0x957A: 0x5E03,\r\n    0x957B: 0x5E9C,\r\n    0x957C: 0x6016,\r\n    0x957D: 0x6276,\r\n    0x957E: 0x6577,\r\n    0x9580: 0x65A7,\r\n    0x9581: 0x666E,\r\n    0x9582: 0x6D6E,\r\n    0x9583: 0x7236,\r\n    0x9584: 0x7B26,\r\n    0x9585: 0x8150,\r\n    0x9586: 0x819A,\r\n    0x9587: 0x8299,\r\n    0x9588: 0x8B5C,\r\n    0x9589: 0x8CA0,\r\n    0x958A: 0x8CE6,\r\n    0x958B: 0x8D74,\r\n    0x958C: 0x961C,\r\n    0x958D: 0x9644,\r\n    0x958E: 0x4FAE,\r\n    0x958F: 0x64AB,\r\n    0x9590: 0x6B66,\r\n    0x9591: 0x821E,\r\n    0x9592: 0x8461,\r\n    0x9593: 0x856A,\r\n    0x9594: 0x90E8,\r\n    0x9595: 0x5C01,\r\n    0x9596: 0x6953,\r\n    0x9597: 0x98A8,\r\n    0x9598: 0x847A,\r\n    0x9599: 0x8557,\r\n    0x959A: 0x4F0F,\r\n    0x959B: 0x526F,\r\n    0x959C: 0x5FA9,\r\n    0x959D: 0x5E45,\r\n    0x959E: 0x670D,\r\n    0x959F: 0x798F,\r\n    0x95A0: 0x8179,\r\n    0x95A1: 0x8907,\r\n    0x95A2: 0x8986,\r\n    0x95A3: 0x6DF5,\r\n    0x95A4: 0x5F17,\r\n    0x95A5: 0x6255,\r\n    0x95A6: 0x6CB8,\r\n    0x95A7: 0x4ECF,\r\n    0x95A8: 0x7269,\r\n    0x95A9: 0x9B92,\r\n    0x95AA: 0x5206,\r\n    0x95AB: 0x543B,\r\n    0x95AC: 0x5674,\r\n    0x95AD: 0x58B3,\r\n    0x95AE: 0x61A4,\r\n    0x95AF: 0x626E,\r\n    0x95B0: 0x711A,\r\n    0x95B1: 0x596E,\r\n    0x95B2: 0x7C89,\r\n    0x95B3: 0x7CDE,\r\n    0x95B4: 0x7D1B,\r\n    0x95B5: 0x96F0,\r\n    0x95B6: 0x6587,\r\n    0x95B7: 0x805E,\r\n    0x95B8: 0x4E19,\r\n    0x95B9: 0x4F75,\r\n    0x95BA: 0x5175,\r\n    0x95BB: 0x5840,\r\n    0x95BC: 0x5E63,\r\n    0x95BD: 0x5E73,\r\n    0x95BE: 0x5F0A,\r\n    0x95BF: 0x67C4,\r\n    0x95C0: 0x4E26,\r\n    0x95C1: 0x853D,\r\n    0x95C2: 0x9589,\r\n    0x95C3: 0x965B,\r\n    0x95C4: 0x7C73,\r\n    0x95C5: 0x9801,\r\n    0x95C6: 0x50FB,\r\n    0x95C7: 0x58C1,\r\n    0x95C8: 0x7656,\r\n    0x95C9: 0x78A7,\r\n    0x95CA: 0x5225,\r\n    0x95CB: 0x77A5,\r\n    0x95CC: 0x8511,\r\n    0x95CD: 0x7B86,\r\n    0x95CE: 0x504F,\r\n    0x95CF: 0x5909,\r\n    0x95D0: 0x7247,\r\n    0x95D1: 0x7BC7,\r\n    0x95D2: 0x7DE8,\r\n    0x95D3: 0x8FBA,\r\n    0x95D4: 0x8FD4,\r\n    0x95D5: 0x904D,\r\n    0x95D6: 0x4FBF,\r\n    0x95D7: 0x52C9,\r\n    0x95D8: 0x5A29,\r\n    0x95D9: 0x5F01,\r\n    0x95DA: 0x97AD,\r\n    0x95DB: 0x4FDD,\r\n    0x95DC: 0x8217,\r\n    0x95DD: 0x92EA,\r\n    0x95DE: 0x5703,\r\n    0x95DF: 0x6355,\r\n    0x95E0: 0x6B69,\r\n    0x95E1: 0x752B,\r\n    0x95E2: 0x88DC,\r\n    0x95E3: 0x8F14,\r\n    0x95E4: 0x7A42,\r\n    0x95E5: 0x52DF,\r\n    0x95E6: 0x5893,\r\n    0x95E7: 0x6155,\r\n    0x95E8: 0x620A,\r\n    0x95E9: 0x66AE,\r\n    0x95EA: 0x6BCD,\r\n    0x95EB: 0x7C3F,\r\n    0x95EC: 0x83E9,\r\n    0x95ED: 0x5023,\r\n    0x95EE: 0x4FF8,\r\n    0x95EF: 0x5305,\r\n    0x95F0: 0x5446,\r\n    0x95F1: 0x5831,\r\n    0x95F2: 0x5949,\r\n    0x95F3: 0x5B9D,\r\n    0x95F4: 0x5CF0,\r\n    0x95F5: 0x5CEF,\r\n    0x95F6: 0x5D29,\r\n    0x95F7: 0x5E96,\r\n    0x95F8: 0x62B1,\r\n    0x95F9: 0x6367,\r\n    0x95FA: 0x653E,\r\n    0x95FB: 0x65B9,\r\n    0x95FC: 0x670B,\r\n    0x9640: 0x6CD5,\r\n    0x9641: 0x6CE1,\r\n    0x9642: 0x70F9,\r\n    0x9643: 0x7832,\r\n    0x9644: 0x7E2B,\r\n    0x9645: 0x80DE,\r\n    0x9646: 0x82B3,\r\n    0x9647: 0x840C,\r\n    0x9648: 0x84EC,\r\n    0x9649: 0x8702,\r\n    0x964A: 0x8912,\r\n    0x964B: 0x8A2A,\r\n    0x964C: 0x8C4A,\r\n    0x964D: 0x90A6,\r\n    0x964E: 0x92D2,\r\n    0x964F: 0x98FD,\r\n    0x9650: 0x9CF3,\r\n    0x9651: 0x9D6C,\r\n    0x9652: 0x4E4F,\r\n    0x9653: 0x4EA1,\r\n    0x9654: 0x508D,\r\n    0x9655: 0x5256,\r\n    0x9656: 0x574A,\r\n    0x9657: 0x59A8,\r\n    0x9658: 0x5E3D,\r\n    0x9659: 0x5FD8,\r\n    0x965A: 0x5FD9,\r\n    0x965B: 0x623F,\r\n    0x965C: 0x66B4,\r\n    0x965D: 0x671B,\r\n    0x965E: 0x67D0,\r\n    0x965F: 0x68D2,\r\n    0x9660: 0x5192,\r\n    0x9661: 0x7D21,\r\n    0x9662: 0x80AA,\r\n    0x9663: 0x81A8,\r\n    0x9664: 0x8B00,\r\n    0x9665: 0x8C8C,\r\n    0x9666: 0x8CBF,\r\n    0x9667: 0x927E,\r\n    0x9668: 0x9632,\r\n    0x9669: 0x5420,\r\n    0x966A: 0x982C,\r\n    0x966B: 0x5317,\r\n    0x966C: 0x50D5,\r\n    0x966D: 0x535C,\r\n    0x966E: 0x58A8,\r\n    0x966F: 0x64B2,\r\n    0x9670: 0x6734,\r\n    0x9671: 0x7267,\r\n    0x9672: 0x7766,\r\n    0x9673: 0x7A46,\r\n    0x9674: 0x91E6,\r\n    0x9675: 0x52C3,\r\n    0x9676: 0x6CA1,\r\n    0x9677: 0x6B86,\r\n    0x9678: 0x5800,\r\n    0x9679: 0x5E4C,\r\n    0x967A: 0x5954,\r\n    0x967B: 0x672C,\r\n    0x967C: 0x7FFB,\r\n    0x967D: 0x51E1,\r\n    0x967E: 0x76C6,\r\n    0x9680: 0x6469,\r\n    0x9681: 0x78E8,\r\n    0x9682: 0x9B54,\r\n    0x9683: 0x9EBB,\r\n    0x9684: 0x57CB,\r\n    0x9685: 0x59B9,\r\n    0x9686: 0x6627,\r\n    0x9687: 0x679A,\r\n    0x9688: 0x6BCE,\r\n    0x9689: 0x54E9,\r\n    0x968A: 0x69D9,\r\n    0x968B: 0x5E55,\r\n    0x968C: 0x819C,\r\n    0x968D: 0x6795,\r\n    0x968E: 0x9BAA,\r\n    0x968F: 0x67FE,\r\n    0x9690: 0x9C52,\r\n    0x9691: 0x685D,\r\n    0x9692: 0x4EA6,\r\n    0x9693: 0x4FE3,\r\n    0x9694: 0x53C8,\r\n    0x9695: 0x62B9,\r\n    0x9696: 0x672B,\r\n    0x9697: 0x6CAB,\r\n    0x9698: 0x8FC4,\r\n    0x9699: 0x4FAD,\r\n    0x969A: 0x7E6D,\r\n    0x969B: 0x9EBF,\r\n    0x969C: 0x4E07,\r\n    0x969D: 0x6162,\r\n    0x969E: 0x6E80,\r\n    0x969F: 0x6F2B,\r\n    0x96A0: 0x8513,\r\n    0x96A1: 0x5473,\r\n    0x96A2: 0x672A,\r\n    0x96A3: 0x9B45,\r\n    0x96A4: 0x5DF3,\r\n    0x96A5: 0x7B95,\r\n    0x96A6: 0x5CAC,\r\n    0x96A7: 0x5BC6,\r\n    0x96A8: 0x871C,\r\n    0x96A9: 0x6E4A,\r\n    0x96AA: 0x84D1,\r\n    0x96AB: 0x7A14,\r\n    0x96AC: 0x8108,\r\n    0x96AD: 0x5999,\r\n    0x96AE: 0x7C8D,\r\n    0x96AF: 0x6C11,\r\n    0x96B0: 0x7720,\r\n    0x96B1: 0x52D9,\r\n    0x96B2: 0x5922,\r\n    0x96B3: 0x7121,\r\n    0x96B4: 0x725F,\r\n    0x96B5: 0x77DB,\r\n    0x96B6: 0x9727,\r\n    0x96B7: 0x9D61,\r\n    0x96B8: 0x690B,\r\n    0x96B9: 0x5A7F,\r\n    0x96BA: 0x5A18,\r\n    0x96BB: 0x51A5,\r\n    0x96BC: 0x540D,\r\n    0x96BD: 0x547D,\r\n    0x96BE: 0x660E,\r\n    0x96BF: 0x76DF,\r\n    0x96C0: 0x8FF7,\r\n    0x96C1: 0x9298,\r\n    0x96C2: 0x9CF4,\r\n    0x96C3: 0x59EA,\r\n    0x96C4: 0x725D,\r\n    0x96C5: 0x6EC5,\r\n    0x96C6: 0x514D,\r\n    0x96C7: 0x68C9,\r\n    0x96C8: 0x7DBF,\r\n    0x96C9: 0x7DEC,\r\n    0x96CA: 0x9762,\r\n    0x96CB: 0x9EBA,\r\n    0x96CC: 0x6478,\r\n    0x96CD: 0x6A21,\r\n    0x96CE: 0x8302,\r\n    0x96CF: 0x5984,\r\n    0x96D0: 0x5B5F,\r\n    0x96D1: 0x6BDB,\r\n    0x96D2: 0x731B,\r\n    0x96D3: 0x76F2,\r\n    0x96D4: 0x7DB2,\r\n    0x96D5: 0x8017,\r\n    0x96D6: 0x8499,\r\n    0x96D7: 0x5132,\r\n    0x96D8: 0x6728,\r\n    0x96D9: 0x9ED9,\r\n    0x96DA: 0x76EE,\r\n    0x96DB: 0x6762,\r\n    0x96DC: 0x52FF,\r\n    0x96DD: 0x9905,\r\n    0x96DE: 0x5C24,\r\n    0x96DF: 0x623B,\r\n    0x96E0: 0x7C7E,\r\n    0x96E1: 0x8CB0,\r\n    0x96E2: 0x554F,\r\n    0x96E3: 0x60B6,\r\n    0x96E4: 0x7D0B,\r\n    0x96E5: 0x9580,\r\n    0x96E6: 0x5301,\r\n    0x96E7: 0x4E5F,\r\n    0x96E8: 0x51B6,\r\n    0x96E9: 0x591C,\r\n    0x96EA: 0x723A,\r\n    0x96EB: 0x8036,\r\n    0x96EC: 0x91CE,\r\n    0x96ED: 0x5F25,\r\n    0x96EE: 0x77E2,\r\n    0x96EF: 0x5384,\r\n    0x96F0: 0x5F79,\r\n    0x96F1: 0x7D04,\r\n    0x96F2: 0x85AC,\r\n    0x96F3: 0x8A33,\r\n    0x96F4: 0x8E8D,\r\n    0x96F5: 0x9756,\r\n    0x96F6: 0x67F3,\r\n    0x96F7: 0x85AE,\r\n    0x96F8: 0x9453,\r\n    0x96F9: 0x6109,\r\n    0x96FA: 0x6108,\r\n    0x96FB: 0x6CB9,\r\n    0x96FC: 0x7652,\r\n    0x9740: 0x8AED,\r\n    0x9741: 0x8F38,\r\n    0x9742: 0x552F,\r\n    0x9743: 0x4F51,\r\n    0x9744: 0x512A,\r\n    0x9745: 0x52C7,\r\n    0x9746: 0x53CB,\r\n    0x9747: 0x5BA5,\r\n    0x9748: 0x5E7D,\r\n    0x9749: 0x60A0,\r\n    0x974A: 0x6182,\r\n    0x974B: 0x63D6,\r\n    0x974C: 0x6709,\r\n    0x974D: 0x67DA,\r\n    0x974E: 0x6E67,\r\n    0x974F: 0x6D8C,\r\n    0x9750: 0x7336,\r\n    0x9751: 0x7337,\r\n    0x9752: 0x7531,\r\n    0x9753: 0x7950,\r\n    0x9754: 0x88D5,\r\n    0x9755: 0x8A98,\r\n    0x9756: 0x904A,\r\n    0x9757: 0x9091,\r\n    0x9758: 0x90F5,\r\n    0x9759: 0x96C4,\r\n    0x975A: 0x878D,\r\n    0x975B: 0x5915,\r\n    0x975C: 0x4E88,\r\n    0x975D: 0x4F59,\r\n    0x975E: 0x4E0E,\r\n    0x975F: 0x8A89,\r\n    0x9760: 0x8F3F,\r\n    0x9761: 0x9810,\r\n    0x9762: 0x50AD,\r\n    0x9763: 0x5E7C,\r\n    0x9764: 0x5996,\r\n    0x9765: 0x5BB9,\r\n    0x9766: 0x5EB8,\r\n    0x9767: 0x63DA,\r\n    0x9768: 0x63FA,\r\n    0x9769: 0x64C1,\r\n    0x976A: 0x66DC,\r\n    0x976B: 0x694A,\r\n    0x976C: 0x69D8,\r\n    0x976D: 0x6D0B,\r\n    0x976E: 0x6EB6,\r\n    0x976F: 0x7194,\r\n    0x9770: 0x7528,\r\n    0x9771: 0x7AAF,\r\n    0x9772: 0x7F8A,\r\n    0x9773: 0x8000,\r\n    0x9774: 0x8449,\r\n    0x9775: 0x84C9,\r\n    0x9776: 0x8981,\r\n    0x9777: 0x8B21,\r\n    0x9778: 0x8E0A,\r\n    0x9779: 0x9065,\r\n    0x977A: 0x967D,\r\n    0x977B: 0x990A,\r\n    0x977C: 0x617E,\r\n    0x977D: 0x6291,\r\n    0x977E: 0x6B32,\r\n    0x9780: 0x6C83,\r\n    0x9781: 0x6D74,\r\n    0x9782: 0x7FCC,\r\n    0x9783: 0x7FFC,\r\n    0x9784: 0x6DC0,\r\n    0x9785: 0x7F85,\r\n    0x9786: 0x87BA,\r\n    0x9787: 0x88F8,\r\n    0x9788: 0x6765,\r\n    0x9789: 0x83B1,\r\n    0x978A: 0x983C,\r\n    0x978B: 0x96F7,\r\n    0x978C: 0x6D1B,\r\n    0x978D: 0x7D61,\r\n    0x978E: 0x843D,\r\n    0x978F: 0x916A,\r\n    0x9790: 0x4E71,\r\n    0x9791: 0x5375,\r\n    0x9792: 0x5D50,\r\n    0x9793: 0x6B04,\r\n    0x9794: 0x6FEB,\r\n    0x9795: 0x85CD,\r\n    0x9796: 0x862D,\r\n    0x9797: 0x89A7,\r\n    0x9798: 0x5229,\r\n    0x9799: 0x540F,\r\n    0x979A: 0x5C65,\r\n    0x979B: 0x674E,\r\n    0x979C: 0x68A8,\r\n    0x979D: 0x7406,\r\n    0x979E: 0x7483,\r\n    0x979F: 0x75E2,\r\n    0x97A0: 0x88CF,\r\n    0x97A1: 0x88E1,\r\n    0x97A2: 0x91CC,\r\n    0x97A3: 0x96E2,\r\n    0x97A4: 0x9678,\r\n    0x97A5: 0x5F8B,\r\n    0x97A6: 0x7387,\r\n    0x97A7: 0x7ACB,\r\n    0x97A8: 0x844E,\r\n    0x97A9: 0x63A0,\r\n    0x97AA: 0x7565,\r\n    0x97AB: 0x5289,\r\n    0x97AC: 0x6D41,\r\n    0x97AD: 0x6E9C,\r\n    0x97AE: 0x7409,\r\n    0x97AF: 0x7559,\r\n    0x97B0: 0x786B,\r\n    0x97B1: 0x7C92,\r\n    0x97B2: 0x9686,\r\n    0x97B3: 0x7ADC,\r\n    0x97B4: 0x9F8D,\r\n    0x97B5: 0x4FB6,\r\n    0x97B6: 0x616E,\r\n    0x97B7: 0x65C5,\r\n    0x97B8: 0x865C,\r\n    0x97B9: 0x4E86,\r\n    0x97BA: 0x4EAE,\r\n    0x97BB: 0x50DA,\r\n    0x97BC: 0x4E21,\r\n    0x97BD: 0x51CC,\r\n    0x97BE: 0x5BEE,\r\n    0x97BF: 0x6599,\r\n    0x97C0: 0x6881,\r\n    0x97C1: 0x6DBC,\r\n    0x97C2: 0x731F,\r\n    0x97C3: 0x7642,\r\n    0x97C4: 0x77AD,\r\n    0x97C5: 0x7A1C,\r\n    0x97C6: 0x7CE7,\r\n    0x97C7: 0x826F,\r\n    0x97C8: 0x8AD2,\r\n    0x97C9: 0x907C,\r\n    0x97CA: 0x91CF,\r\n    0x97CB: 0x9675,\r\n    0x97CC: 0x9818,\r\n    0x97CD: 0x529B,\r\n    0x97CE: 0x7DD1,\r\n    0x97CF: 0x502B,\r\n    0x97D0: 0x5398,\r\n    0x97D1: 0x6797,\r\n    0x97D2: 0x6DCB,\r\n    0x97D3: 0x71D0,\r\n    0x97D4: 0x7433,\r\n    0x97D5: 0x81E8,\r\n    0x97D6: 0x8F2A,\r\n    0x97D7: 0x96A3,\r\n    0x97D8: 0x9C57,\r\n    0x97D9: 0x9E9F,\r\n    0x97DA: 0x7460,\r\n    0x97DB: 0x5841,\r\n    0x97DC: 0x6D99,\r\n    0x97DD: 0x7D2F,\r\n    0x97DE: 0x985E,\r\n    0x97DF: 0x4EE4,\r\n    0x97E0: 0x4F36,\r\n    0x97E1: 0x4F8B,\r\n    0x97E2: 0x51B7,\r\n    0x97E3: 0x52B1,\r\n    0x97E4: 0x5DBA,\r\n    0x97E5: 0x601C,\r\n    0x97E6: 0x73B2,\r\n    0x97E7: 0x793C,\r\n    0x97E8: 0x82D3,\r\n    0x97E9: 0x9234,\r\n    0x97EA: 0x96B7,\r\n    0x97EB: 0x96F6,\r\n    0x97EC: 0x970A,\r\n    0x97ED: 0x9E97,\r\n    0x97EE: 0x9F62,\r\n    0x97EF: 0x66A6,\r\n    0x97F0: 0x6B74,\r\n    0x97F1: 0x5217,\r\n    0x97F2: 0x52A3,\r\n    0x97F3: 0x70C8,\r\n    0x97F4: 0x88C2,\r\n    0x97F5: 0x5EC9,\r\n    0x97F6: 0x604B,\r\n    0x97F7: 0x6190,\r\n    0x97F8: 0x6F23,\r\n    0x97F9: 0x7149,\r\n    0x97FA: 0x7C3E,\r\n    0x97FB: 0x7DF4,\r\n    0x97FC: 0x806F,\r\n    0x9840: 0x84EE,\r\n    0x9841: 0x9023,\r\n    0x9842: 0x932C,\r\n    0x9843: 0x5442,\r\n    0x9844: 0x9B6F,\r\n    0x9845: 0x6AD3,\r\n    0x9846: 0x7089,\r\n    0x9847: 0x8CC2,\r\n    0x9848: 0x8DEF,\r\n    0x9849: 0x9732,\r\n    0x984A: 0x52B4,\r\n    0x984B: 0x5A41,\r\n    0x984C: 0x5ECA,\r\n    0x984D: 0x5F04,\r\n    0x984E: 0x6717,\r\n    0x984F: 0x697C,\r\n    0x9850: 0x6994,\r\n    0x9851: 0x6D6A,\r\n    0x9852: 0x6F0F,\r\n    0x9853: 0x7262,\r\n    0x9854: 0x72FC,\r\n    0x9855: 0x7BED,\r\n    0x9856: 0x8001,\r\n    0x9857: 0x807E,\r\n    0x9858: 0x874B,\r\n    0x9859: 0x90CE,\r\n    0x985A: 0x516D,\r\n    0x985B: 0x9E93,\r\n    0x985C: 0x7984,\r\n    0x985D: 0x808B,\r\n    0x985E: 0x9332,\r\n    0x985F: 0x8AD6,\r\n    0x9860: 0x502D,\r\n    0x9861: 0x548C,\r\n    0x9862: 0x8A71,\r\n    0x9863: 0x6B6A,\r\n    0x9864: 0x8CC4,\r\n    0x9865: 0x8107,\r\n    0x9866: 0x60D1,\r\n    0x9867: 0x67A0,\r\n    0x9868: 0x9DF2,\r\n    0x9869: 0x4E99,\r\n    0x986A: 0x4E98,\r\n    0x986B: 0x9C10,\r\n    0x986C: 0x8A6B,\r\n    0x986D: 0x85C1,\r\n    0x986E: 0x8568,\r\n    0x986F: 0x6900,\r\n    0x9870: 0x6E7E,\r\n    0x9871: 0x7897,\r\n    0x9872: 0x8155,\r\n    0x989F: 0x5F0C,\r\n    0x98A0: 0x4E10,\r\n    0x98A1: 0x4E15,\r\n    0x98A2: 0x4E2A,\r\n    0x98A3: 0x4E31,\r\n    0x98A4: 0x4E36,\r\n    0x98A5: 0x4E3C,\r\n    0x98A6: 0x4E3F,\r\n    0x98A7: 0x4E42,\r\n    0x98A8: 0x4E56,\r\n    0x98A9: 0x4E58,\r\n    0x98AA: 0x4E82,\r\n    0x98AB: 0x4E85,\r\n    0x98AC: 0x8C6B,\r\n    0x98AD: 0x4E8A,\r\n    0x98AE: 0x8212,\r\n    0x98AF: 0x5F0D,\r\n    0x98B0: 0x4E8E,\r\n    0x98B1: 0x4E9E,\r\n    0x98B2: 0x4E9F,\r\n    0x98B3: 0x4EA0,\r\n    0x98B4: 0x4EA2,\r\n    0x98B5: 0x4EB0,\r\n    0x98B6: 0x4EB3,\r\n    0x98B7: 0x4EB6,\r\n    0x98B8: 0x4ECE,\r\n    0x98B9: 0x4ECD,\r\n    0x98BA: 0x4EC4,\r\n    0x98BB: 0x4EC6,\r\n    0x98BC: 0x4EC2,\r\n    0x98BD: 0x4ED7,\r\n    0x98BE: 0x4EDE,\r\n    0x98BF: 0x4EED,\r\n    0x98C0: 0x4EDF,\r\n    0x98C1: 0x4EF7,\r\n    0x98C2: 0x4F09,\r\n    0x98C3: 0x4F5A,\r\n    0x98C4: 0x4F30,\r\n    0x98C5: 0x4F5B,\r\n    0x98C6: 0x4F5D,\r\n    0x98C7: 0x4F57,\r\n    0x98C8: 0x4F47,\r\n    0x98C9: 0x4F76,\r\n    0x98CA: 0x4F88,\r\n    0x98CB: 0x4F8F,\r\n    0x98CC: 0x4F98,\r\n    0x98CD: 0x4F7B,\r\n    0x98CE: 0x4F69,\r\n    0x98CF: 0x4F70,\r\n    0x98D0: 0x4F91,\r\n    0x98D1: 0x4F6F,\r\n    0x98D2: 0x4F86,\r\n    0x98D3: 0x4F96,\r\n    0x98D4: 0x5118,\r\n    0x98D5: 0x4FD4,\r\n    0x98D6: 0x4FDF,\r\n    0x98D7: 0x4FCE,\r\n    0x98D8: 0x4FD8,\r\n    0x98D9: 0x4FDB,\r\n    0x98DA: 0x4FD1,\r\n    0x98DB: 0x4FDA,\r\n    0x98DC: 0x4FD0,\r\n    0x98DD: 0x4FE4,\r\n    0x98DE: 0x4FE5,\r\n    0x98DF: 0x501A,\r\n    0x98E0: 0x5028,\r\n    0x98E1: 0x5014,\r\n    0x98E2: 0x502A,\r\n    0x98E3: 0x5025,\r\n    0x98E4: 0x5005,\r\n    0x98E5: 0x4F1C,\r\n    0x98E6: 0x4FF6,\r\n    0x98E7: 0x5021,\r\n    0x98E8: 0x5029,\r\n    0x98E9: 0x502C,\r\n    0x98EA: 0x4FFE,\r\n    0x98EB: 0x4FEF,\r\n    0x98EC: 0x5011,\r\n    0x98ED: 0x5006,\r\n    0x98EE: 0x5043,\r\n    0x98EF: 0x5047,\r\n    0x98F0: 0x6703,\r\n    0x98F1: 0x5055,\r\n    0x98F2: 0x5050,\r\n    0x98F3: 0x5048,\r\n    0x98F4: 0x505A,\r\n    0x98F5: 0x5056,\r\n    0x98F6: 0x506C,\r\n    0x98F7: 0x5078,\r\n    0x98F8: 0x5080,\r\n    0x98F9: 0x509A,\r\n    0x98FA: 0x5085,\r\n    0x98FB: 0x50B4,\r\n    0x98FC: 0x50B2,\r\n    0x9940: 0x50C9,\r\n    0x9941: 0x50CA,\r\n    0x9942: 0x50B3,\r\n    0x9943: 0x50C2,\r\n    0x9944: 0x50D6,\r\n    0x9945: 0x50DE,\r\n    0x9946: 0x50E5,\r\n    0x9947: 0x50ED,\r\n    0x9948: 0x50E3,\r\n    0x9949: 0x50EE,\r\n    0x994A: 0x50F9,\r\n    0x994B: 0x50F5,\r\n    0x994C: 0x5109,\r\n    0x994D: 0x5101,\r\n    0x994E: 0x5102,\r\n    0x994F: 0x5116,\r\n    0x9950: 0x5115,\r\n    0x9951: 0x5114,\r\n    0x9952: 0x511A,\r\n    0x9953: 0x5121,\r\n    0x9954: 0x513A,\r\n    0x9955: 0x5137,\r\n    0x9956: 0x513C,\r\n    0x9957: 0x513B,\r\n    0x9958: 0x513F,\r\n    0x9959: 0x5140,\r\n    0x995A: 0x5152,\r\n    0x995B: 0x514C,\r\n    0x995C: 0x5154,\r\n    0x995D: 0x5162,\r\n    0x995E: 0x7AF8,\r\n    0x995F: 0x5169,\r\n    0x9960: 0x516A,\r\n    0x9961: 0x516E,\r\n    0x9962: 0x5180,\r\n    0x9963: 0x5182,\r\n    0x9964: 0x56D8,\r\n    0x9965: 0x518C,\r\n    0x9966: 0x5189,\r\n    0x9967: 0x518F,\r\n    0x9968: 0x5191,\r\n    0x9969: 0x5193,\r\n    0x996A: 0x5195,\r\n    0x996B: 0x5196,\r\n    0x996C: 0x51A4,\r\n    0x996D: 0x51A6,\r\n    0x996E: 0x51A2,\r\n    0x996F: 0x51A9,\r\n    0x9970: 0x51AA,\r\n    0x9971: 0x51AB,\r\n    0x9972: 0x51B3,\r\n    0x9973: 0x51B1,\r\n    0x9974: 0x51B2,\r\n    0x9975: 0x51B0,\r\n    0x9976: 0x51B5,\r\n    0x9977: 0x51BD,\r\n    0x9978: 0x51C5,\r\n    0x9979: 0x51C9,\r\n    0x997A: 0x51DB,\r\n    0x997B: 0x51E0,\r\n    0x997C: 0x8655,\r\n    0x997D: 0x51E9,\r\n    0x997E: 0x51ED,\r\n    0x9980: 0x51F0,\r\n    0x9981: 0x51F5,\r\n    0x9982: 0x51FE,\r\n    0x9983: 0x5204,\r\n    0x9984: 0x520B,\r\n    0x9985: 0x5214,\r\n    0x9986: 0x520E,\r\n    0x9987: 0x5227,\r\n    0x9988: 0x522A,\r\n    0x9989: 0x522E,\r\n    0x998A: 0x5233,\r\n    0x998B: 0x5239,\r\n    0x998C: 0x524F,\r\n    0x998D: 0x5244,\r\n    0x998E: 0x524B,\r\n    0x998F: 0x524C,\r\n    0x9990: 0x525E,\r\n    0x9991: 0x5254,\r\n    0x9992: 0x526A,\r\n    0x9993: 0x5274,\r\n    0x9994: 0x5269,\r\n    0x9995: 0x5273,\r\n    0x9996: 0x527F,\r\n    0x9997: 0x527D,\r\n    0x9998: 0x528D,\r\n    0x9999: 0x5294,\r\n    0x999A: 0x5292,\r\n    0x999B: 0x5271,\r\n    0x999C: 0x5288,\r\n    0x999D: 0x5291,\r\n    0x999E: 0x8FA8,\r\n    0x999F: 0x8FA7,\r\n    0x99A0: 0x52AC,\r\n    0x99A1: 0x52AD,\r\n    0x99A2: 0x52BC,\r\n    0x99A3: 0x52B5,\r\n    0x99A4: 0x52C1,\r\n    0x99A5: 0x52CD,\r\n    0x99A6: 0x52D7,\r\n    0x99A7: 0x52DE,\r\n    0x99A8: 0x52E3,\r\n    0x99A9: 0x52E6,\r\n    0x99AA: 0x98ED,\r\n    0x99AB: 0x52E0,\r\n    0x99AC: 0x52F3,\r\n    0x99AD: 0x52F5,\r\n    0x99AE: 0x52F8,\r\n    0x99AF: 0x52F9,\r\n    0x99B0: 0x5306,\r\n    0x99B1: 0x5308,\r\n    0x99B2: 0x7538,\r\n    0x99B3: 0x530D,\r\n    0x99B4: 0x5310,\r\n    0x99B5: 0x530F,\r\n    0x99B6: 0x5315,\r\n    0x99B7: 0x531A,\r\n    0x99B8: 0x5323,\r\n    0x99B9: 0x532F,\r\n    0x99BA: 0x5331,\r\n    0x99BB: 0x5333,\r\n    0x99BC: 0x5338,\r\n    0x99BD: 0x5340,\r\n    0x99BE: 0x5346,\r\n    0x99BF: 0x5345,\r\n    0x99C0: 0x4E17,\r\n    0x99C1: 0x5349,\r\n    0x99C2: 0x534D,\r\n    0x99C3: 0x51D6,\r\n    0x99C4: 0x535E,\r\n    0x99C5: 0x5369,\r\n    0x99C6: 0x536E,\r\n    0x99C7: 0x5918,\r\n    0x99C8: 0x537B,\r\n    0x99C9: 0x5377,\r\n    0x99CA: 0x5382,\r\n    0x99CB: 0x5396,\r\n    0x99CC: 0x53A0,\r\n    0x99CD: 0x53A6,\r\n    0x99CE: 0x53A5,\r\n    0x99CF: 0x53AE,\r\n    0x99D0: 0x53B0,\r\n    0x99D1: 0x53B6,\r\n    0x99D2: 0x53C3,\r\n    0x99D3: 0x7C12,\r\n    0x99D4: 0x96D9,\r\n    0x99D5: 0x53DF,\r\n    0x99D6: 0x66FC,\r\n    0x99D7: 0x71EE,\r\n    0x99D8: 0x53EE,\r\n    0x99D9: 0x53E8,\r\n    0x99DA: 0x53ED,\r\n    0x99DB: 0x53FA,\r\n    0x99DC: 0x5401,\r\n    0x99DD: 0x543D,\r\n    0x99DE: 0x5440,\r\n    0x99DF: 0x542C,\r\n    0x99E0: 0x542D,\r\n    0x99E1: 0x543C,\r\n    0x99E2: 0x542E,\r\n    0x99E3: 0x5436,\r\n    0x99E4: 0x5429,\r\n    0x99E5: 0x541D,\r\n    0x99E6: 0x544E,\r\n    0x99E7: 0x548F,\r\n    0x99E8: 0x5475,\r\n    0x99E9: 0x548E,\r\n    0x99EA: 0x545F,\r\n    0x99EB: 0x5471,\r\n    0x99EC: 0x5477,\r\n    0x99ED: 0x5470,\r\n    0x99EE: 0x5492,\r\n    0x99EF: 0x547B,\r\n    0x99F0: 0x5480,\r\n    0x99F1: 0x5476,\r\n    0x99F2: 0x5484,\r\n    0x99F3: 0x5490,\r\n    0x99F4: 0x5486,\r\n    0x99F5: 0x54C7,\r\n    0x99F6: 0x54A2,\r\n    0x99F7: 0x54B8,\r\n    0x99F8: 0x54A5,\r\n    0x99F9: 0x54AC,\r\n    0x99FA: 0x54C4,\r\n    0x99FB: 0x54C8,\r\n    0x99FC: 0x54A8,\r\n    0x9A40: 0x54AB,\r\n    0x9A41: 0x54C2,\r\n    0x9A42: 0x54A4,\r\n    0x9A43: 0x54BE,\r\n    0x9A44: 0x54BC,\r\n    0x9A45: 0x54D8,\r\n    0x9A46: 0x54E5,\r\n    0x9A47: 0x54E6,\r\n    0x9A48: 0x550F,\r\n    0x9A49: 0x5514,\r\n    0x9A4A: 0x54FD,\r\n    0x9A4B: 0x54EE,\r\n    0x9A4C: 0x54ED,\r\n    0x9A4D: 0x54FA,\r\n    0x9A4E: 0x54E2,\r\n    0x9A4F: 0x5539,\r\n    0x9A50: 0x5540,\r\n    0x9A51: 0x5563,\r\n    0x9A52: 0x554C,\r\n    0x9A53: 0x552E,\r\n    0x9A54: 0x555C,\r\n    0x9A55: 0x5545,\r\n    0x9A56: 0x5556,\r\n    0x9A57: 0x5557,\r\n    0x9A58: 0x5538,\r\n    0x9A59: 0x5533,\r\n    0x9A5A: 0x555D,\r\n    0x9A5B: 0x5599,\r\n    0x9A5C: 0x5580,\r\n    0x9A5D: 0x54AF,\r\n    0x9A5E: 0x558A,\r\n    0x9A5F: 0x559F,\r\n    0x9A60: 0x557B,\r\n    0x9A61: 0x557E,\r\n    0x9A62: 0x5598,\r\n    0x9A63: 0x559E,\r\n    0x9A64: 0x55AE,\r\n    0x9A65: 0x557C,\r\n    0x9A66: 0x5583,\r\n    0x9A67: 0x55A9,\r\n    0x9A68: 0x5587,\r\n    0x9A69: 0x55A8,\r\n    0x9A6A: 0x55DA,\r\n    0x9A6B: 0x55C5,\r\n    0x9A6C: 0x55DF,\r\n    0x9A6D: 0x55C4,\r\n    0x9A6E: 0x55DC,\r\n    0x9A6F: 0x55E4,\r\n    0x9A70: 0x55D4,\r\n    0x9A71: 0x5614,\r\n    0x9A72: 0x55F7,\r\n    0x9A73: 0x5616,\r\n    0x9A74: 0x55FE,\r\n    0x9A75: 0x55FD,\r\n    0x9A76: 0x561B,\r\n    0x9A77: 0x55F9,\r\n    0x9A78: 0x564E,\r\n    0x9A79: 0x5650,\r\n    0x9A7A: 0x71DF,\r\n    0x9A7B: 0x5634,\r\n    0x9A7C: 0x5636,\r\n    0x9A7D: 0x5632,\r\n    0x9A7E: 0x5638,\r\n    0x9A80: 0x566B,\r\n    0x9A81: 0x5664,\r\n    0x9A82: 0x562F,\r\n    0x9A83: 0x566C,\r\n    0x9A84: 0x566A,\r\n    0x9A85: 0x5686,\r\n    0x9A86: 0x5680,\r\n    0x9A87: 0x568A,\r\n    0x9A88: 0x56A0,\r\n    0x9A89: 0x5694,\r\n    0x9A8A: 0x568F,\r\n    0x9A8B: 0x56A5,\r\n    0x9A8C: 0x56AE,\r\n    0x9A8D: 0x56B6,\r\n    0x9A8E: 0x56B4,\r\n    0x9A8F: 0x56C2,\r\n    0x9A90: 0x56BC,\r\n    0x9A91: 0x56C1,\r\n    0x9A92: 0x56C3,\r\n    0x9A93: 0x56C0,\r\n    0x9A94: 0x56C8,\r\n    0x9A95: 0x56CE,\r\n    0x9A96: 0x56D1,\r\n    0x9A97: 0x56D3,\r\n    0x9A98: 0x56D7,\r\n    0x9A99: 0x56EE,\r\n    0x9A9A: 0x56F9,\r\n    0x9A9B: 0x5700,\r\n    0x9A9C: 0x56FF,\r\n    0x9A9D: 0x5704,\r\n    0x9A9E: 0x5709,\r\n    0x9A9F: 0x5708,\r\n    0x9AA0: 0x570B,\r\n    0x9AA1: 0x570D,\r\n    0x9AA2: 0x5713,\r\n    0x9AA3: 0x5718,\r\n    0x9AA4: 0x5716,\r\n    0x9AA5: 0x55C7,\r\n    0x9AA6: 0x571C,\r\n    0x9AA7: 0x5726,\r\n    0x9AA8: 0x5737,\r\n    0x9AA9: 0x5738,\r\n    0x9AAA: 0x574E,\r\n    0x9AAB: 0x573B,\r\n    0x9AAC: 0x5740,\r\n    0x9AAD: 0x574F,\r\n    0x9AAE: 0x5769,\r\n    0x9AAF: 0x57C0,\r\n    0x9AB0: 0x5788,\r\n    0x9AB1: 0x5761,\r\n    0x9AB2: 0x577F,\r\n    0x9AB3: 0x5789,\r\n    0x9AB4: 0x5793,\r\n    0x9AB5: 0x57A0,\r\n    0x9AB6: 0x57B3,\r\n    0x9AB7: 0x57A4,\r\n    0x9AB8: 0x57AA,\r\n    0x9AB9: 0x57B0,\r\n    0x9ABA: 0x57C3,\r\n    0x9ABB: 0x57C6,\r\n    0x9ABC: 0x57D4,\r\n    0x9ABD: 0x57D2,\r\n    0x9ABE: 0x57D3,\r\n    0x9ABF: 0x580A,\r\n    0x9AC0: 0x57D6,\r\n    0x9AC1: 0x57E3,\r\n    0x9AC2: 0x580B,\r\n    0x9AC3: 0x5819,\r\n    0x9AC4: 0x581D,\r\n    0x9AC5: 0x5872,\r\n    0x9AC6: 0x5821,\r\n    0x9AC7: 0x5862,\r\n    0x9AC8: 0x584B,\r\n    0x9AC9: 0x5870,\r\n    0x9ACA: 0x6BC0,\r\n    0x9ACB: 0x5852,\r\n    0x9ACC: 0x583D,\r\n    0x9ACD: 0x5879,\r\n    0x9ACE: 0x5885,\r\n    0x9ACF: 0x58B9,\r\n    0x9AD0: 0x589F,\r\n    0x9AD1: 0x58AB,\r\n    0x9AD2: 0x58BA,\r\n    0x9AD3: 0x58DE,\r\n    0x9AD4: 0x58BB,\r\n    0x9AD5: 0x58B8,\r\n    0x9AD6: 0x58AE,\r\n    0x9AD7: 0x58C5,\r\n    0x9AD8: 0x58D3,\r\n    0x9AD9: 0x58D1,\r\n    0x9ADA: 0x58D7,\r\n    0x9ADB: 0x58D9,\r\n    0x9ADC: 0x58D8,\r\n    0x9ADD: 0x58E5,\r\n    0x9ADE: 0x58DC,\r\n    0x9ADF: 0x58E4,\r\n    0x9AE0: 0x58DF,\r\n    0x9AE1: 0x58EF,\r\n    0x9AE2: 0x58FA,\r\n    0x9AE3: 0x58F9,\r\n    0x9AE4: 0x58FB,\r\n    0x9AE5: 0x58FC,\r\n    0x9AE6: 0x58FD,\r\n    0x9AE7: 0x5902,\r\n    0x9AE8: 0x590A,\r\n    0x9AE9: 0x5910,\r\n    0x9AEA: 0x591B,\r\n    0x9AEB: 0x68A6,\r\n    0x9AEC: 0x5925,\r\n    0x9AED: 0x592C,\r\n    0x9AEE: 0x592D,\r\n    0x9AEF: 0x5932,\r\n    0x9AF0: 0x5938,\r\n    0x9AF1: 0x593E,\r\n    0x9AF2: 0x7AD2,\r\n    0x9AF3: 0x5955,\r\n    0x9AF4: 0x5950,\r\n    0x9AF5: 0x594E,\r\n    0x9AF6: 0x595A,\r\n    0x9AF7: 0x5958,\r\n    0x9AF8: 0x5962,\r\n    0x9AF9: 0x5960,\r\n    0x9AFA: 0x5967,\r\n    0x9AFB: 0x596C,\r\n    0x9AFC: 0x5969,\r\n    0x9B40: 0x5978,\r\n    0x9B41: 0x5981,\r\n    0x9B42: 0x599D,\r\n    0x9B43: 0x4F5E,\r\n    0x9B44: 0x4FAB,\r\n    0x9B45: 0x59A3,\r\n    0x9B46: 0x59B2,\r\n    0x9B47: 0x59C6,\r\n    0x9B48: 0x59E8,\r\n    0x9B49: 0x59DC,\r\n    0x9B4A: 0x598D,\r\n    0x9B4B: 0x59D9,\r\n    0x9B4C: 0x59DA,\r\n    0x9B4D: 0x5A25,\r\n    0x9B4E: 0x5A1F,\r\n    0x9B4F: 0x5A11,\r\n    0x9B50: 0x5A1C,\r\n    0x9B51: 0x5A09,\r\n    0x9B52: 0x5A1A,\r\n    0x9B53: 0x5A40,\r\n    0x9B54: 0x5A6C,\r\n    0x9B55: 0x5A49,\r\n    0x9B56: 0x5A35,\r\n    0x9B57: 0x5A36,\r\n    0x9B58: 0x5A62,\r\n    0x9B59: 0x5A6A,\r\n    0x9B5A: 0x5A9A,\r\n    0x9B5B: 0x5ABC,\r\n    0x9B5C: 0x5ABE,\r\n    0x9B5D: 0x5ACB,\r\n    0x9B5E: 0x5AC2,\r\n    0x9B5F: 0x5ABD,\r\n    0x9B60: 0x5AE3,\r\n    0x9B61: 0x5AD7,\r\n    0x9B62: 0x5AE6,\r\n    0x9B63: 0x5AE9,\r\n    0x9B64: 0x5AD6,\r\n    0x9B65: 0x5AFA,\r\n    0x9B66: 0x5AFB,\r\n    0x9B67: 0x5B0C,\r\n    0x9B68: 0x5B0B,\r\n    0x9B69: 0x5B16,\r\n    0x9B6A: 0x5B32,\r\n    0x9B6B: 0x5AD0,\r\n    0x9B6C: 0x5B2A,\r\n    0x9B6D: 0x5B36,\r\n    0x9B6E: 0x5B3E,\r\n    0x9B6F: 0x5B43,\r\n    0x9B70: 0x5B45,\r\n    0x9B71: 0x5B40,\r\n    0x9B72: 0x5B51,\r\n    0x9B73: 0x5B55,\r\n    0x9B74: 0x5B5A,\r\n    0x9B75: 0x5B5B,\r\n    0x9B76: 0x5B65,\r\n    0x9B77: 0x5B69,\r\n    0x9B78: 0x5B70,\r\n    0x9B79: 0x5B73,\r\n    0x9B7A: 0x5B75,\r\n    0x9B7B: 0x5B78,\r\n    0x9B7C: 0x6588,\r\n    0x9B7D: 0x5B7A,\r\n    0x9B7E: 0x5B80,\r\n    0x9B80: 0x5B83,\r\n    0x9B81: 0x5BA6,\r\n    0x9B82: 0x5BB8,\r\n    0x9B83: 0x5BC3,\r\n    0x9B84: 0x5BC7,\r\n    0x9B85: 0x5BC9,\r\n    0x9B86: 0x5BD4,\r\n    0x9B87: 0x5BD0,\r\n    0x9B88: 0x5BE4,\r\n    0x9B89: 0x5BE6,\r\n    0x9B8A: 0x5BE2,\r\n    0x9B8B: 0x5BDE,\r\n    0x9B8C: 0x5BE5,\r\n    0x9B8D: 0x5BEB,\r\n    0x9B8E: 0x5BF0,\r\n    0x9B8F: 0x5BF6,\r\n    0x9B90: 0x5BF3,\r\n    0x9B91: 0x5C05,\r\n    0x9B92: 0x5C07,\r\n    0x9B93: 0x5C08,\r\n    0x9B94: 0x5C0D,\r\n    0x9B95: 0x5C13,\r\n    0x9B96: 0x5C20,\r\n    0x9B97: 0x5C22,\r\n    0x9B98: 0x5C28,\r\n    0x9B99: 0x5C38,\r\n    0x9B9A: 0x5C39,\r\n    0x9B9B: 0x5C41,\r\n    0x9B9C: 0x5C46,\r\n    0x9B9D: 0x5C4E,\r\n    0x9B9E: 0x5C53,\r\n    0x9B9F: 0x5C50,\r\n    0x9BA0: 0x5C4F,\r\n    0x9BA1: 0x5B71,\r\n    0x9BA2: 0x5C6C,\r\n    0x9BA3: 0x5C6E,\r\n    0x9BA4: 0x4E62,\r\n    0x9BA5: 0x5C76,\r\n    0x9BA6: 0x5C79,\r\n    0x9BA7: 0x5C8C,\r\n    0x9BA8: 0x5C91,\r\n    0x9BA9: 0x5C94,\r\n    0x9BAA: 0x599B,\r\n    0x9BAB: 0x5CAB,\r\n    0x9BAC: 0x5CBB,\r\n    0x9BAD: 0x5CB6,\r\n    0x9BAE: 0x5CBC,\r\n    0x9BAF: 0x5CB7,\r\n    0x9BB0: 0x5CC5,\r\n    0x9BB1: 0x5CBE,\r\n    0x9BB2: 0x5CC7,\r\n    0x9BB3: 0x5CD9,\r\n    0x9BB4: 0x5CE9,\r\n    0x9BB5: 0x5CFD,\r\n    0x9BB6: 0x5CFA,\r\n    0x9BB7: 0x5CED,\r\n    0x9BB8: 0x5D8C,\r\n    0x9BB9: 0x5CEA,\r\n    0x9BBA: 0x5D0B,\r\n    0x9BBB: 0x5D15,\r\n    0x9BBC: 0x5D17,\r\n    0x9BBD: 0x5D5C,\r\n    0x9BBE: 0x5D1F,\r\n    0x9BBF: 0x5D1B,\r\n    0x9BC0: 0x5D11,\r\n    0x9BC1: 0x5D14,\r\n    0x9BC2: 0x5D22,\r\n    0x9BC3: 0x5D1A,\r\n    0x9BC4: 0x5D19,\r\n    0x9BC5: 0x5D18,\r\n    0x9BC6: 0x5D4C,\r\n    0x9BC7: 0x5D52,\r\n    0x9BC8: 0x5D4E,\r\n    0x9BC9: 0x5D4B,\r\n    0x9BCA: 0x5D6C,\r\n    0x9BCB: 0x5D73,\r\n    0x9BCC: 0x5D76,\r\n    0x9BCD: 0x5D87,\r\n    0x9BCE: 0x5D84,\r\n    0x9BCF: 0x5D82,\r\n    0x9BD0: 0x5DA2,\r\n    0x9BD1: 0x5D9D,\r\n    0x9BD2: 0x5DAC,\r\n    0x9BD3: 0x5DAE,\r\n    0x9BD4: 0x5DBD,\r\n    0x9BD5: 0x5D90,\r\n    0x9BD6: 0x5DB7,\r\n    0x9BD7: 0x5DBC,\r\n    0x9BD8: 0x5DC9,\r\n    0x9BD9: 0x5DCD,\r\n    0x9BDA: 0x5DD3,\r\n    0x9BDB: 0x5DD2,\r\n    0x9BDC: 0x5DD6,\r\n    0x9BDD: 0x5DDB,\r\n    0x9BDE: 0x5DEB,\r\n    0x9BDF: 0x5DF2,\r\n    0x9BE0: 0x5DF5,\r\n    0x9BE1: 0x5E0B,\r\n    0x9BE2: 0x5E1A,\r\n    0x9BE3: 0x5E19,\r\n    0x9BE4: 0x5E11,\r\n    0x9BE5: 0x5E1B,\r\n    0x9BE6: 0x5E36,\r\n    0x9BE7: 0x5E37,\r\n    0x9BE8: 0x5E44,\r\n    0x9BE9: 0x5E43,\r\n    0x9BEA: 0x5E40,\r\n    0x9BEB: 0x5E4E,\r\n    0x9BEC: 0x5E57,\r\n    0x9BED: 0x5E54,\r\n    0x9BEE: 0x5E5F,\r\n    0x9BEF: 0x5E62,\r\n    0x9BF0: 0x5E64,\r\n    0x9BF1: 0x5E47,\r\n    0x9BF2: 0x5E75,\r\n    0x9BF3: 0x5E76,\r\n    0x9BF4: 0x5E7A,\r\n    0x9BF5: 0x9EBC,\r\n    0x9BF6: 0x5E7F,\r\n    0x9BF7: 0x5EA0,\r\n    0x9BF8: 0x5EC1,\r\n    0x9BF9: 0x5EC2,\r\n    0x9BFA: 0x5EC8,\r\n    0x9BFB: 0x5ED0,\r\n    0x9BFC: 0x5ECF,\r\n    0x9C40: 0x5ED6,\r\n    0x9C41: 0x5EE3,\r\n    0x9C42: 0x5EDD,\r\n    0x9C43: 0x5EDA,\r\n    0x9C44: 0x5EDB,\r\n    0x9C45: 0x5EE2,\r\n    0x9C46: 0x5EE1,\r\n    0x9C47: 0x5EE8,\r\n    0x9C48: 0x5EE9,\r\n    0x9C49: 0x5EEC,\r\n    0x9C4A: 0x5EF1,\r\n    0x9C4B: 0x5EF3,\r\n    0x9C4C: 0x5EF0,\r\n    0x9C4D: 0x5EF4,\r\n    0x9C4E: 0x5EF8,\r\n    0x9C4F: 0x5EFE,\r\n    0x9C50: 0x5F03,\r\n    0x9C51: 0x5F09,\r\n    0x9C52: 0x5F5D,\r\n    0x9C53: 0x5F5C,\r\n    0x9C54: 0x5F0B,\r\n    0x9C55: 0x5F11,\r\n    0x9C56: 0x5F16,\r\n    0x9C57: 0x5F29,\r\n    0x9C58: 0x5F2D,\r\n    0x9C59: 0x5F38,\r\n    0x9C5A: 0x5F41,\r\n    0x9C5B: 0x5F48,\r\n    0x9C5C: 0x5F4C,\r\n    0x9C5D: 0x5F4E,\r\n    0x9C5E: 0x5F2F,\r\n    0x9C5F: 0x5F51,\r\n    0x9C60: 0x5F56,\r\n    0x9C61: 0x5F57,\r\n    0x9C62: 0x5F59,\r\n    0x9C63: 0x5F61,\r\n    0x9C64: 0x5F6D,\r\n    0x9C65: 0x5F73,\r\n    0x9C66: 0x5F77,\r\n    0x9C67: 0x5F83,\r\n    0x9C68: 0x5F82,\r\n    0x9C69: 0x5F7F,\r\n    0x9C6A: 0x5F8A,\r\n    0x9C6B: 0x5F88,\r\n    0x9C6C: 0x5F91,\r\n    0x9C6D: 0x5F87,\r\n    0x9C6E: 0x5F9E,\r\n    0x9C6F: 0x5F99,\r\n    0x9C70: 0x5F98,\r\n    0x9C71: 0x5FA0,\r\n    0x9C72: 0x5FA8,\r\n    0x9C73: 0x5FAD,\r\n    0x9C74: 0x5FBC,\r\n    0x9C75: 0x5FD6,\r\n    0x9C76: 0x5FFB,\r\n    0x9C77: 0x5FE4,\r\n    0x9C78: 0x5FF8,\r\n    0x9C79: 0x5FF1,\r\n    0x9C7A: 0x5FDD,\r\n    0x9C7B: 0x60B3,\r\n    0x9C7C: 0x5FFF,\r\n    0x9C7D: 0x6021,\r\n    0x9C7E: 0x6060,\r\n    0x9C80: 0x6019,\r\n    0x9C81: 0x6010,\r\n    0x9C82: 0x6029,\r\n    0x9C83: 0x600E,\r\n    0x9C84: 0x6031,\r\n    0x9C85: 0x601B,\r\n    0x9C86: 0x6015,\r\n    0x9C87: 0x602B,\r\n    0x9C88: 0x6026,\r\n    0x9C89: 0x600F,\r\n    0x9C8A: 0x603A,\r\n    0x9C8B: 0x605A,\r\n    0x9C8C: 0x6041,\r\n    0x9C8D: 0x606A,\r\n    0x9C8E: 0x6077,\r\n    0x9C8F: 0x605F,\r\n    0x9C90: 0x604A,\r\n    0x9C91: 0x6046,\r\n    0x9C92: 0x604D,\r\n    0x9C93: 0x6063,\r\n    0x9C94: 0x6043,\r\n    0x9C95: 0x6064,\r\n    0x9C96: 0x6042,\r\n    0x9C97: 0x606C,\r\n    0x9C98: 0x606B,\r\n    0x9C99: 0x6059,\r\n    0x9C9A: 0x6081,\r\n    0x9C9B: 0x608D,\r\n    0x9C9C: 0x60E7,\r\n    0x9C9D: 0x6083,\r\n    0x9C9E: 0x609A,\r\n    0x9C9F: 0x6084,\r\n    0x9CA0: 0x609B,\r\n    0x9CA1: 0x6096,\r\n    0x9CA2: 0x6097,\r\n    0x9CA3: 0x6092,\r\n    0x9CA4: 0x60A7,\r\n    0x9CA5: 0x608B,\r\n    0x9CA6: 0x60E1,\r\n    0x9CA7: 0x60B8,\r\n    0x9CA8: 0x60E0,\r\n    0x9CA9: 0x60D3,\r\n    0x9CAA: 0x60B4,\r\n    0x9CAB: 0x5FF0,\r\n    0x9CAC: 0x60BD,\r\n    0x9CAD: 0x60C6,\r\n    0x9CAE: 0x60B5,\r\n    0x9CAF: 0x60D8,\r\n    0x9CB0: 0x614D,\r\n    0x9CB1: 0x6115,\r\n    0x9CB2: 0x6106,\r\n    0x9CB3: 0x60F6,\r\n    0x9CB4: 0x60F7,\r\n    0x9CB5: 0x6100,\r\n    0x9CB6: 0x60F4,\r\n    0x9CB7: 0x60FA,\r\n    0x9CB8: 0x6103,\r\n    0x9CB9: 0x6121,\r\n    0x9CBA: 0x60FB,\r\n    0x9CBB: 0x60F1,\r\n    0x9CBC: 0x610D,\r\n    0x9CBD: 0x610E,\r\n    0x9CBE: 0x6147,\r\n    0x9CBF: 0x613E,\r\n    0x9CC0: 0x6128,\r\n    0x9CC1: 0x6127,\r\n    0x9CC2: 0x614A,\r\n    0x9CC3: 0x613F,\r\n    0x9CC4: 0x613C,\r\n    0x9CC5: 0x612C,\r\n    0x9CC6: 0x6134,\r\n    0x9CC7: 0x613D,\r\n    0x9CC8: 0x6142,\r\n    0x9CC9: 0x6144,\r\n    0x9CCA: 0x6173,\r\n    0x9CCB: 0x6177,\r\n    0x9CCC: 0x6158,\r\n    0x9CCD: 0x6159,\r\n    0x9CCE: 0x615A,\r\n    0x9CCF: 0x616B,\r\n    0x9CD0: 0x6174,\r\n    0x9CD1: 0x616F,\r\n    0x9CD2: 0x6165,\r\n    0x9CD3: 0x6171,\r\n    0x9CD4: 0x615F,\r\n    0x9CD5: 0x615D,\r\n    0x9CD6: 0x6153,\r\n    0x9CD7: 0x6175,\r\n    0x9CD8: 0x6199,\r\n    0x9CD9: 0x6196,\r\n    0x9CDA: 0x6187,\r\n    0x9CDB: 0x61AC,\r\n    0x9CDC: 0x6194,\r\n    0x9CDD: 0x619A,\r\n    0x9CDE: 0x618A,\r\n    0x9CDF: 0x6191,\r\n    0x9CE0: 0x61AB,\r\n    0x9CE1: 0x61AE,\r\n    0x9CE2: 0x61CC,\r\n    0x9CE3: 0x61CA,\r\n    0x9CE4: 0x61C9,\r\n    0x9CE5: 0x61F7,\r\n    0x9CE6: 0x61C8,\r\n    0x9CE7: 0x61C3,\r\n    0x9CE8: 0x61C6,\r\n    0x9CE9: 0x61BA,\r\n    0x9CEA: 0x61CB,\r\n    0x9CEB: 0x7F79,\r\n    0x9CEC: 0x61CD,\r\n    0x9CED: 0x61E6,\r\n    0x9CEE: 0x61E3,\r\n    0x9CEF: 0x61F6,\r\n    0x9CF0: 0x61FA,\r\n    0x9CF1: 0x61F4,\r\n    0x9CF2: 0x61FF,\r\n    0x9CF3: 0x61FD,\r\n    0x9CF4: 0x61FC,\r\n    0x9CF5: 0x61FE,\r\n    0x9CF6: 0x6200,\r\n    0x9CF7: 0x6208,\r\n    0x9CF8: 0x6209,\r\n    0x9CF9: 0x620D,\r\n    0x9CFA: 0x620C,\r\n    0x9CFB: 0x6214,\r\n    0x9CFC: 0x621B,\r\n    0x9D40: 0x621E,\r\n    0x9D41: 0x6221,\r\n    0x9D42: 0x622A,\r\n    0x9D43: 0x622E,\r\n    0x9D44: 0x6230,\r\n    0x9D45: 0x6232,\r\n    0x9D46: 0x6233,\r\n    0x9D47: 0x6241,\r\n    0x9D48: 0x624E,\r\n    0x9D49: 0x625E,\r\n    0x9D4A: 0x6263,\r\n    0x9D4B: 0x625B,\r\n    0x9D4C: 0x6260,\r\n    0x9D4D: 0x6268,\r\n    0x9D4E: 0x627C,\r\n    0x9D4F: 0x6282,\r\n    0x9D50: 0x6289,\r\n    0x9D51: 0x627E,\r\n    0x9D52: 0x6292,\r\n    0x9D53: 0x6293,\r\n    0x9D54: 0x6296,\r\n    0x9D55: 0x62D4,\r\n    0x9D56: 0x6283,\r\n    0x9D57: 0x6294,\r\n    0x9D58: 0x62D7,\r\n    0x9D59: 0x62D1,\r\n    0x9D5A: 0x62BB,\r\n    0x9D5B: 0x62CF,\r\n    0x9D5C: 0x62FF,\r\n    0x9D5D: 0x62C6,\r\n    0x9D5E: 0x64D4,\r\n    0x9D5F: 0x62C8,\r\n    0x9D60: 0x62DC,\r\n    0x9D61: 0x62CC,\r\n    0x9D62: 0x62CA,\r\n    0x9D63: 0x62C2,\r\n    0x9D64: 0x62C7,\r\n    0x9D65: 0x629B,\r\n    0x9D66: 0x62C9,\r\n    0x9D67: 0x630C,\r\n    0x9D68: 0x62EE,\r\n    0x9D69: 0x62F1,\r\n    0x9D6A: 0x6327,\r\n    0x9D6B: 0x6302,\r\n    0x9D6C: 0x6308,\r\n    0x9D6D: 0x62EF,\r\n    0x9D6E: 0x62F5,\r\n    0x9D6F: 0x6350,\r\n    0x9D70: 0x633E,\r\n    0x9D71: 0x634D,\r\n    0x9D72: 0x641C,\r\n    0x9D73: 0x634F,\r\n    0x9D74: 0x6396,\r\n    0x9D75: 0x638E,\r\n    0x9D76: 0x6380,\r\n    0x9D77: 0x63AB,\r\n    0x9D78: 0x6376,\r\n    0x9D79: 0x63A3,\r\n    0x9D7A: 0x638F,\r\n    0x9D7B: 0x6389,\r\n    0x9D7C: 0x639F,\r\n    0x9D7D: 0x63B5,\r\n    0x9D7E: 0x636B,\r\n    0x9D80: 0x6369,\r\n    0x9D81: 0x63BE,\r\n    0x9D82: 0x63E9,\r\n    0x9D83: 0x63C0,\r\n    0x9D84: 0x63C6,\r\n    0x9D85: 0x63E3,\r\n    0x9D86: 0x63C9,\r\n    0x9D87: 0x63D2,\r\n    0x9D88: 0x63F6,\r\n    0x9D89: 0x63C4,\r\n    0x9D8A: 0x6416,\r\n    0x9D8B: 0x6434,\r\n    0x9D8C: 0x6406,\r\n    0x9D8D: 0x6413,\r\n    0x9D8E: 0x6426,\r\n    0x9D8F: 0x6436,\r\n    0x9D90: 0x651D,\r\n    0x9D91: 0x6417,\r\n    0x9D92: 0x6428,\r\n    0x9D93: 0x640F,\r\n    0x9D94: 0x6467,\r\n    0x9D95: 0x646F,\r\n    0x9D96: 0x6476,\r\n    0x9D97: 0x644E,\r\n    0x9D98: 0x652A,\r\n    0x9D99: 0x6495,\r\n    0x9D9A: 0x6493,\r\n    0x9D9B: 0x64A5,\r\n    0x9D9C: 0x64A9,\r\n    0x9D9D: 0x6488,\r\n    0x9D9E: 0x64BC,\r\n    0x9D9F: 0x64DA,\r\n    0x9DA0: 0x64D2,\r\n    0x9DA1: 0x64C5,\r\n    0x9DA2: 0x64C7,\r\n    0x9DA3: 0x64BB,\r\n    0x9DA4: 0x64D8,\r\n    0x9DA5: 0x64C2,\r\n    0x9DA6: 0x64F1,\r\n    0x9DA7: 0x64E7,\r\n    0x9DA8: 0x8209,\r\n    0x9DA9: 0x64E0,\r\n    0x9DAA: 0x64E1,\r\n    0x9DAB: 0x62AC,\r\n    0x9DAC: 0x64E3,\r\n    0x9DAD: 0x64EF,\r\n    0x9DAE: 0x652C,\r\n    0x9DAF: 0x64F6,\r\n    0x9DB0: 0x64F4,\r\n    0x9DB1: 0x64F2,\r\n    0x9DB2: 0x64FA,\r\n    0x9DB3: 0x6500,\r\n    0x9DB4: 0x64FD,\r\n    0x9DB5: 0x6518,\r\n    0x9DB6: 0x651C,\r\n    0x9DB7: 0x6505,\r\n    0x9DB8: 0x6524,\r\n    0x9DB9: 0x6523,\r\n    0x9DBA: 0x652B,\r\n    0x9DBB: 0x6534,\r\n    0x9DBC: 0x6535,\r\n    0x9DBD: 0x6537,\r\n    0x9DBE: 0x6536,\r\n    0x9DBF: 0x6538,\r\n    0x9DC0: 0x754B,\r\n    0x9DC1: 0x6548,\r\n    0x9DC2: 0x6556,\r\n    0x9DC3: 0x6555,\r\n    0x9DC4: 0x654D,\r\n    0x9DC5: 0x6558,\r\n    0x9DC6: 0x655E,\r\n    0x9DC7: 0x655D,\r\n    0x9DC8: 0x6572,\r\n    0x9DC9: 0x6578,\r\n    0x9DCA: 0x6582,\r\n    0x9DCB: 0x6583,\r\n    0x9DCC: 0x8B8A,\r\n    0x9DCD: 0x659B,\r\n    0x9DCE: 0x659F,\r\n    0x9DCF: 0x65AB,\r\n    0x9DD0: 0x65B7,\r\n    0x9DD1: 0x65C3,\r\n    0x9DD2: 0x65C6,\r\n    0x9DD3: 0x65C1,\r\n    0x9DD4: 0x65C4,\r\n    0x9DD5: 0x65CC,\r\n    0x9DD6: 0x65D2,\r\n    0x9DD7: 0x65DB,\r\n    0x9DD8: 0x65D9,\r\n    0x9DD9: 0x65E0,\r\n    0x9DDA: 0x65E1,\r\n    0x9DDB: 0x65F1,\r\n    0x9DDC: 0x6772,\r\n    0x9DDD: 0x660A,\r\n    0x9DDE: 0x6603,\r\n    0x9DDF: 0x65FB,\r\n    0x9DE0: 0x6773,\r\n    0x9DE1: 0x6635,\r\n    0x9DE2: 0x6636,\r\n    0x9DE3: 0x6634,\r\n    0x9DE4: 0x661C,\r\n    0x9DE5: 0x664F,\r\n    0x9DE6: 0x6644,\r\n    0x9DE7: 0x6649,\r\n    0x9DE8: 0x6641,\r\n    0x9DE9: 0x665E,\r\n    0x9DEA: 0x665D,\r\n    0x9DEB: 0x6664,\r\n    0x9DEC: 0x6667,\r\n    0x9DED: 0x6668,\r\n    0x9DEE: 0x665F,\r\n    0x9DEF: 0x6662,\r\n    0x9DF0: 0x6670,\r\n    0x9DF1: 0x6683,\r\n    0x9DF2: 0x6688,\r\n    0x9DF3: 0x668E,\r\n    0x9DF4: 0x6689,\r\n    0x9DF5: 0x6684,\r\n    0x9DF6: 0x6698,\r\n    0x9DF7: 0x669D,\r\n    0x9DF8: 0x66C1,\r\n    0x9DF9: 0x66B9,\r\n    0x9DFA: 0x66C9,\r\n    0x9DFB: 0x66BE,\r\n    0x9DFC: 0x66BC,\r\n    0x9E40: 0x66C4,\r\n    0x9E41: 0x66B8,\r\n    0x9E42: 0x66D6,\r\n    0x9E43: 0x66DA,\r\n    0x9E44: 0x66E0,\r\n    0x9E45: 0x663F,\r\n    0x9E46: 0x66E6,\r\n    0x9E47: 0x66E9,\r\n    0x9E48: 0x66F0,\r\n    0x9E49: 0x66F5,\r\n    0x9E4A: 0x66F7,\r\n    0x9E4B: 0x670F,\r\n    0x9E4C: 0x6716,\r\n    0x9E4D: 0x671E,\r\n    0x9E4E: 0x6726,\r\n    0x9E4F: 0x6727,\r\n    0x9E50: 0x9738,\r\n    0x9E51: 0x672E,\r\n    0x9E52: 0x673F,\r\n    0x9E53: 0x6736,\r\n    0x9E54: 0x6741,\r\n    0x9E55: 0x6738,\r\n    0x9E56: 0x6737,\r\n    0x9E57: 0x6746,\r\n    0x9E58: 0x675E,\r\n    0x9E59: 0x6760,\r\n    0x9E5A: 0x6759,\r\n    0x9E5B: 0x6763,\r\n    0x9E5C: 0x6764,\r\n    0x9E5D: 0x6789,\r\n    0x9E5E: 0x6770,\r\n    0x9E5F: 0x67A9,\r\n    0x9E60: 0x677C,\r\n    0x9E61: 0x676A,\r\n    0x9E62: 0x678C,\r\n    0x9E63: 0x678B,\r\n    0x9E64: 0x67A6,\r\n    0x9E65: 0x67A1,\r\n    0x9E66: 0x6785,\r\n    0x9E67: 0x67B7,\r\n    0x9E68: 0x67EF,\r\n    0x9E69: 0x67B4,\r\n    0x9E6A: 0x67EC,\r\n    0x9E6B: 0x67B3,\r\n    0x9E6C: 0x67E9,\r\n    0x9E6D: 0x67B8,\r\n    0x9E6E: 0x67E4,\r\n    0x9E6F: 0x67DE,\r\n    0x9E70: 0x67DD,\r\n    0x9E71: 0x67E2,\r\n    0x9E72: 0x67EE,\r\n    0x9E73: 0x67B9,\r\n    0x9E74: 0x67CE,\r\n    0x9E75: 0x67C6,\r\n    0x9E76: 0x67E7,\r\n    0x9E77: 0x6A9C,\r\n    0x9E78: 0x681E,\r\n    0x9E79: 0x6846,\r\n    0x9E7A: 0x6829,\r\n    0x9E7B: 0x6840,\r\n    0x9E7C: 0x684D,\r\n    0x9E7D: 0x6832,\r\n    0x9E7E: 0x684E,\r\n    0x9E80: 0x68B3,\r\n    0x9E81: 0x682B,\r\n    0x9E82: 0x6859,\r\n    0x9E83: 0x6863,\r\n    0x9E84: 0x6877,\r\n    0x9E85: 0x687F,\r\n    0x9E86: 0x689F,\r\n    0x9E87: 0x688F,\r\n    0x9E88: 0x68AD,\r\n    0x9E89: 0x6894,\r\n    0x9E8A: 0x689D,\r\n    0x9E8B: 0x689B,\r\n    0x9E8C: 0x6883,\r\n    0x9E8D: 0x6AAE,\r\n    0x9E8E: 0x68B9,\r\n    0x9E8F: 0x6874,\r\n    0x9E90: 0x68B5,\r\n    0x9E91: 0x68A0,\r\n    0x9E92: 0x68BA,\r\n    0x9E93: 0x690F,\r\n    0x9E94: 0x688D,\r\n    0x9E95: 0x687E,\r\n    0x9E96: 0x6901,\r\n    0x9E97: 0x68CA,\r\n    0x9E98: 0x6908,\r\n    0x9E99: 0x68D8,\r\n    0x9E9A: 0x6922,\r\n    0x9E9B: 0x6926,\r\n    0x9E9C: 0x68E1,\r\n    0x9E9D: 0x690C,\r\n    0x9E9E: 0x68CD,\r\n    0x9E9F: 0x68D4,\r\n    0x9EA0: 0x68E7,\r\n    0x9EA1: 0x68D5,\r\n    0x9EA2: 0x6936,\r\n    0x9EA3: 0x6912,\r\n    0x9EA4: 0x6904,\r\n    0x9EA5: 0x68D7,\r\n    0x9EA6: 0x68E3,\r\n    0x9EA7: 0x6925,\r\n    0x9EA8: 0x68F9,\r\n    0x9EA9: 0x68E0,\r\n    0x9EAA: 0x68EF,\r\n    0x9EAB: 0x6928,\r\n    0x9EAC: 0x692A,\r\n    0x9EAD: 0x691A,\r\n    0x9EAE: 0x6923,\r\n    0x9EAF: 0x6921,\r\n    0x9EB0: 0x68C6,\r\n    0x9EB1: 0x6979,\r\n    0x9EB2: 0x6977,\r\n    0x9EB3: 0x695C,\r\n    0x9EB4: 0x6978,\r\n    0x9EB5: 0x696B,\r\n    0x9EB6: 0x6954,\r\n    0x9EB7: 0x697E,\r\n    0x9EB8: 0x696E,\r\n    0x9EB9: 0x6939,\r\n    0x9EBA: 0x6974,\r\n    0x9EBB: 0x693D,\r\n    0x9EBC: 0x6959,\r\n    0x9EBD: 0x6930,\r\n    0x9EBE: 0x6961,\r\n    0x9EBF: 0x695E,\r\n    0x9EC0: 0x695D,\r\n    0x9EC1: 0x6981,\r\n    0x9EC2: 0x696A,\r\n    0x9EC3: 0x69B2,\r\n    0x9EC4: 0x69AE,\r\n    0x9EC5: 0x69D0,\r\n    0x9EC6: 0x69BF,\r\n    0x9EC7: 0x69C1,\r\n    0x9EC8: 0x69D3,\r\n    0x9EC9: 0x69BE,\r\n    0x9ECA: 0x69CE,\r\n    0x9ECB: 0x5BE8,\r\n    0x9ECC: 0x69CA,\r\n    0x9ECD: 0x69DD,\r\n    0x9ECE: 0x69BB,\r\n    0x9ECF: 0x69C3,\r\n    0x9ED0: 0x69A7,\r\n    0x9ED1: 0x6A2E,\r\n    0x9ED2: 0x6991,\r\n    0x9ED3: 0x69A0,\r\n    0x9ED4: 0x699C,\r\n    0x9ED5: 0x6995,\r\n    0x9ED6: 0x69B4,\r\n    0x9ED7: 0x69DE,\r\n    0x9ED8: 0x69E8,\r\n    0x9ED9: 0x6A02,\r\n    0x9EDA: 0x6A1B,\r\n    0x9EDB: 0x69FF,\r\n    0x9EDC: 0x6B0A,\r\n    0x9EDD: 0x69F9,\r\n    0x9EDE: 0x69F2,\r\n    0x9EDF: 0x69E7,\r\n    0x9EE0: 0x6A05,\r\n    0x9EE1: 0x69B1,\r\n    0x9EE2: 0x6A1E,\r\n    0x9EE3: 0x69ED,\r\n    0x9EE4: 0x6A14,\r\n    0x9EE5: 0x69EB,\r\n    0x9EE6: 0x6A0A,\r\n    0x9EE7: 0x6A12,\r\n    0x9EE8: 0x6AC1,\r\n    0x9EE9: 0x6A23,\r\n    0x9EEA: 0x6A13,\r\n    0x9EEB: 0x6A44,\r\n    0x9EEC: 0x6A0C,\r\n    0x9EED: 0x6A72,\r\n    0x9EEE: 0x6A36,\r\n    0x9EEF: 0x6A78,\r\n    0x9EF0: 0x6A47,\r\n    0x9EF1: 0x6A62,\r\n    0x9EF2: 0x6A59,\r\n    0x9EF3: 0x6A66,\r\n    0x9EF4: 0x6A48,\r\n    0x9EF5: 0x6A38,\r\n    0x9EF6: 0x6A22,\r\n    0x9EF7: 0x6A90,\r\n    0x9EF8: 0x6A8D,\r\n    0x9EF9: 0x6AA0,\r\n    0x9EFA: 0x6A84,\r\n    0x9EFB: 0x6AA2,\r\n    0x9EFC: 0x6AA3,\r\n    0x9F40: 0x6A97,\r\n    0x9F41: 0x8617,\r\n    0x9F42: 0x6ABB,\r\n    0x9F43: 0x6AC3,\r\n    0x9F44: 0x6AC2,\r\n    0x9F45: 0x6AB8,\r\n    0x9F46: 0x6AB3,\r\n    0x9F47: 0x6AAC,\r\n    0x9F48: 0x6ADE,\r\n    0x9F49: 0x6AD1,\r\n    0x9F4A: 0x6ADF,\r\n    0x9F4B: 0x6AAA,\r\n    0x9F4C: 0x6ADA,\r\n    0x9F4D: 0x6AEA,\r\n    0x9F4E: 0x6AFB,\r\n    0x9F4F: 0x6B05,\r\n    0x9F50: 0x8616,\r\n    0x9F51: 0x6AFA,\r\n    0x9F52: 0x6B12,\r\n    0x9F53: 0x6B16,\r\n    0x9F54: 0x9B31,\r\n    0x9F55: 0x6B1F,\r\n    0x9F56: 0x6B38,\r\n    0x9F57: 0x6B37,\r\n    0x9F58: 0x76DC,\r\n    0x9F59: 0x6B39,\r\n    0x9F5A: 0x98EE,\r\n    0x9F5B: 0x6B47,\r\n    0x9F5C: 0x6B43,\r\n    0x9F5D: 0x6B49,\r\n    0x9F5E: 0x6B50,\r\n    0x9F5F: 0x6B59,\r\n    0x9F60: 0x6B54,\r\n    0x9F61: 0x6B5B,\r\n    0x9F62: 0x6B5F,\r\n    0x9F63: 0x6B61,\r\n    0x9F64: 0x6B78,\r\n    0x9F65: 0x6B79,\r\n    0x9F66: 0x6B7F,\r\n    0x9F67: 0x6B80,\r\n    0x9F68: 0x6B84,\r\n    0x9F69: 0x6B83,\r\n    0x9F6A: 0x6B8D,\r\n    0x9F6B: 0x6B98,\r\n    0x9F6C: 0x6B95,\r\n    0x9F6D: 0x6B9E,\r\n    0x9F6E: 0x6BA4,\r\n    0x9F6F: 0x6BAA,\r\n    0x9F70: 0x6BAB,\r\n    0x9F71: 0x6BAF,\r\n    0x9F72: 0x6BB2,\r\n    0x9F73: 0x6BB1,\r\n    0x9F74: 0x6BB3,\r\n    0x9F75: 0x6BB7,\r\n    0x9F76: 0x6BBC,\r\n    0x9F77: 0x6BC6,\r\n    0x9F78: 0x6BCB,\r\n    0x9F79: 0x6BD3,\r\n    0x9F7A: 0x6BDF,\r\n    0x9F7B: 0x6BEC,\r\n    0x9F7C: 0x6BEB,\r\n    0x9F7D: 0x6BF3,\r\n    0x9F7E: 0x6BEF,\r\n    0x9F80: 0x9EBE,\r\n    0x9F81: 0x6C08,\r\n    0x9F82: 0x6C13,\r\n    0x9F83: 0x6C14,\r\n    0x9F84: 0x6C1B,\r\n    0x9F85: 0x6C24,\r\n    0x9F86: 0x6C23,\r\n    0x9F87: 0x6C5E,\r\n    0x9F88: 0x6C55,\r\n    0x9F89: 0x6C62,\r\n    0x9F8A: 0x6C6A,\r\n    0x9F8B: 0x6C82,\r\n    0x9F8C: 0x6C8D,\r\n    0x9F8D: 0x6C9A,\r\n    0x9F8E: 0x6C81,\r\n    0x9F8F: 0x6C9B,\r\n    0x9F90: 0x6C7E,\r\n    0x9F91: 0x6C68,\r\n    0x9F92: 0x6C73,\r\n    0x9F93: 0x6C92,\r\n    0x9F94: 0x6C90,\r\n    0x9F95: 0x6CC4,\r\n    0x9F96: 0x6CF1,\r\n    0x9F97: 0x6CD3,\r\n    0x9F98: 0x6CBD,\r\n    0x9F99: 0x6CD7,\r\n    0x9F9A: 0x6CC5,\r\n    0x9F9B: 0x6CDD,\r\n    0x9F9C: 0x6CAE,\r\n    0x9F9D: 0x6CB1,\r\n    0x9F9E: 0x6CBE,\r\n    0x9F9F: 0x6CBA,\r\n    0x9FA0: 0x6CDB,\r\n    0x9FA1: 0x6CEF,\r\n    0x9FA2: 0x6CD9,\r\n    0x9FA3: 0x6CEA,\r\n    0x9FA4: 0x6D1F,\r\n    0x9FA5: 0x884D,\r\n    0x9FA6: 0x6D36,\r\n    0x9FA7: 0x6D2B,\r\n    0x9FA8: 0x6D3D,\r\n    0x9FA9: 0x6D38,\r\n    0x9FAA: 0x6D19,\r\n    0x9FAB: 0x6D35,\r\n    0x9FAC: 0x6D33,\r\n    0x9FAD: 0x6D12,\r\n    0x9FAE: 0x6D0C,\r\n    0x9FAF: 0x6D63,\r\n    0x9FB0: 0x6D93,\r\n    0x9FB1: 0x6D64,\r\n    0x9FB2: 0x6D5A,\r\n    0x9FB3: 0x6D79,\r\n    0x9FB4: 0x6D59,\r\n    0x9FB5: 0x6D8E,\r\n    0x9FB6: 0x6D95,\r\n    0x9FB7: 0x6FE4,\r\n    0x9FB8: 0x6D85,\r\n    0x9FB9: 0x6DF9,\r\n    0x9FBA: 0x6E15,\r\n    0x9FBB: 0x6E0A,\r\n    0x9FBC: 0x6DB5,\r\n    0x9FBD: 0x6DC7,\r\n    0x9FBE: 0x6DE6,\r\n    0x9FBF: 0x6DB8,\r\n    0x9FC0: 0x6DC6,\r\n    0x9FC1: 0x6DEC,\r\n    0x9FC2: 0x6DDE,\r\n    0x9FC3: 0x6DCC,\r\n    0x9FC4: 0x6DE8,\r\n    0x9FC5: 0x6DD2,\r\n    0x9FC6: 0x6DC5,\r\n    0x9FC7: 0x6DFA,\r\n    0x9FC8: 0x6DD9,\r\n    0x9FC9: 0x6DE4,\r\n    0x9FCA: 0x6DD5,\r\n    0x9FCB: 0x6DEA,\r\n    0x9FCC: 0x6DEE,\r\n    0x9FCD: 0x6E2D,\r\n    0x9FCE: 0x6E6E,\r\n    0x9FCF: 0x6E2E,\r\n    0x9FD0: 0x6E19,\r\n    0x9FD1: 0x6E72,\r\n    0x9FD2: 0x6E5F,\r\n    0x9FD3: 0x6E3E,\r\n    0x9FD4: 0x6E23,\r\n    0x9FD5: 0x6E6B,\r\n    0x9FD6: 0x6E2B,\r\n    0x9FD7: 0x6E76,\r\n    0x9FD8: 0x6E4D,\r\n    0x9FD9: 0x6E1F,\r\n    0x9FDA: 0x6E43,\r\n    0x9FDB: 0x6E3A,\r\n    0x9FDC: 0x6E4E,\r\n    0x9FDD: 0x6E24,\r\n    0x9FDE: 0x6EFF,\r\n    0x9FDF: 0x6E1D,\r\n    0x9FE0: 0x6E38,\r\n    0x9FE1: 0x6E82,\r\n    0x9FE2: 0x6EAA,\r\n    0x9FE3: 0x6E98,\r\n    0x9FE4: 0x6EC9,\r\n    0x9FE5: 0x6EB7,\r\n    0x9FE6: 0x6ED3,\r\n    0x9FE7: 0x6EBD,\r\n    0x9FE8: 0x6EAF,\r\n    0x9FE9: 0x6EC4,\r\n    0x9FEA: 0x6EB2,\r\n    0x9FEB: 0x6ED4,\r\n    0x9FEC: 0x6ED5,\r\n    0x9FED: 0x6E8F,\r\n    0x9FEE: 0x6EA5,\r\n    0x9FEF: 0x6EC2,\r\n    0x9FF0: 0x6E9F,\r\n    0x9FF1: 0x6F41,\r\n    0x9FF2: 0x6F11,\r\n    0x9FF3: 0x704C,\r\n    0x9FF4: 0x6EEC,\r\n    0x9FF5: 0x6EF8,\r\n    0x9FF6: 0x6EFE,\r\n    0x9FF7: 0x6F3F,\r\n    0x9FF8: 0x6EF2,\r\n    0x9FF9: 0x6F31,\r\n    0x9FFA: 0x6EEF,\r\n    0x9FFB: 0x6F32,\r\n    0x9FFC: 0x6ECC,\r\n    0xA1: 0xFF61,\r\n    0xA2: 0xFF62,\r\n    0xA3: 0xFF63,\r\n    0xA4: 0xFF64,\r\n    0xA5: 0xFF65,\r\n    0xA6: 0xFF66,\r\n    0xA7: 0xFF67,\r\n    0xA8: 0xFF68,\r\n    0xA9: 0xFF69,\r\n    0xAA: 0xFF6A,\r\n    0xAB: 0xFF6B,\r\n    0xAC: 0xFF6C,\r\n    0xAD: 0xFF6D,\r\n    0xAE: 0xFF6E,\r\n    0xAF: 0xFF6F,\r\n    0xB0: 0xFF70,\r\n    0xB1: 0xFF71,\r\n    0xB2: 0xFF72,\r\n    0xB3: 0xFF73,\r\n    0xB4: 0xFF74,\r\n    0xB5: 0xFF75,\r\n    0xB6: 0xFF76,\r\n    0xB7: 0xFF77,\r\n    0xB8: 0xFF78,\r\n    0xB9: 0xFF79,\r\n    0xBA: 0xFF7A,\r\n    0xBB: 0xFF7B,\r\n    0xBC: 0xFF7C,\r\n    0xBD: 0xFF7D,\r\n    0xBE: 0xFF7E,\r\n    0xBF: 0xFF7F,\r\n    0xC0: 0xFF80,\r\n    0xC1: 0xFF81,\r\n    0xC2: 0xFF82,\r\n    0xC3: 0xFF83,\r\n    0xC4: 0xFF84,\r\n    0xC5: 0xFF85,\r\n    0xC6: 0xFF86,\r\n    0xC7: 0xFF87,\r\n    0xC8: 0xFF88,\r\n    0xC9: 0xFF89,\r\n    0xCA: 0xFF8A,\r\n    0xCB: 0xFF8B,\r\n    0xCC: 0xFF8C,\r\n    0xCD: 0xFF8D,\r\n    0xCE: 0xFF8E,\r\n    0xCF: 0xFF8F,\r\n    0xD0: 0xFF90,\r\n    0xD1: 0xFF91,\r\n    0xD2: 0xFF92,\r\n    0xD3: 0xFF93,\r\n    0xD4: 0xFF94,\r\n    0xD5: 0xFF95,\r\n    0xD6: 0xFF96,\r\n    0xD7: 0xFF97,\r\n    0xD8: 0xFF98,\r\n    0xD9: 0xFF99,\r\n    0xDA: 0xFF9A,\r\n    0xDB: 0xFF9B,\r\n    0xDC: 0xFF9C,\r\n    0xDD: 0xFF9D,\r\n    0xDE: 0xFF9E,\r\n    0xDF: 0xFF9F,\r\n    0xE040: 0x6F3E,\r\n    0xE041: 0x6F13,\r\n    0xE042: 0x6EF7,\r\n    0xE043: 0x6F86,\r\n    0xE044: 0x6F7A,\r\n    0xE045: 0x6F78,\r\n    0xE046: 0x6F81,\r\n    0xE047: 0x6F80,\r\n    0xE048: 0x6F6F,\r\n    0xE049: 0x6F5B,\r\n    0xE04A: 0x6FF3,\r\n    0xE04B: 0x6F6D,\r\n    0xE04C: 0x6F82,\r\n    0xE04D: 0x6F7C,\r\n    0xE04E: 0x6F58,\r\n    0xE04F: 0x6F8E,\r\n    0xE050: 0x6F91,\r\n    0xE051: 0x6FC2,\r\n    0xE052: 0x6F66,\r\n    0xE053: 0x6FB3,\r\n    0xE054: 0x6FA3,\r\n    0xE055: 0x6FA1,\r\n    0xE056: 0x6FA4,\r\n    0xE057: 0x6FB9,\r\n    0xE058: 0x6FC6,\r\n    0xE059: 0x6FAA,\r\n    0xE05A: 0x6FDF,\r\n    0xE05B: 0x6FD5,\r\n    0xE05C: 0x6FEC,\r\n    0xE05D: 0x6FD4,\r\n    0xE05E: 0x6FD8,\r\n    0xE05F: 0x6FF1,\r\n    0xE060: 0x6FEE,\r\n    0xE061: 0x6FDB,\r\n    0xE062: 0x7009,\r\n    0xE063: 0x700B,\r\n    0xE064: 0x6FFA,\r\n    0xE065: 0x7011,\r\n    0xE066: 0x7001,\r\n    0xE067: 0x700F,\r\n    0xE068: 0x6FFE,\r\n    0xE069: 0x701B,\r\n    0xE06A: 0x701A,\r\n    0xE06B: 0x6F74,\r\n    0xE06C: 0x701D,\r\n    0xE06D: 0x7018,\r\n    0xE06E: 0x701F,\r\n    0xE06F: 0x7030,\r\n    0xE070: 0x703E,\r\n    0xE071: 0x7032,\r\n    0xE072: 0x7051,\r\n    0xE073: 0x7063,\r\n    0xE074: 0x7099,\r\n    0xE075: 0x7092,\r\n    0xE076: 0x70AF,\r\n    0xE077: 0x70F1,\r\n    0xE078: 0x70AC,\r\n    0xE079: 0x70B8,\r\n    0xE07A: 0x70B3,\r\n    0xE07B: 0x70AE,\r\n    0xE07C: 0x70DF,\r\n    0xE07D: 0x70CB,\r\n    0xE07E: 0x70DD,\r\n    0xE080: 0x70D9,\r\n    0xE081: 0x7109,\r\n    0xE082: 0x70FD,\r\n    0xE083: 0x711C,\r\n    0xE084: 0x7119,\r\n    0xE085: 0x7165,\r\n    0xE086: 0x7155,\r\n    0xE087: 0x7188,\r\n    0xE088: 0x7166,\r\n    0xE089: 0x7162,\r\n    0xE08A: 0x714C,\r\n    0xE08B: 0x7156,\r\n    0xE08C: 0x716C,\r\n    0xE08D: 0x718F,\r\n    0xE08E: 0x71FB,\r\n    0xE08F: 0x7184,\r\n    0xE090: 0x7195,\r\n    0xE091: 0x71A8,\r\n    0xE092: 0x71AC,\r\n    0xE093: 0x71D7,\r\n    0xE094: 0x71B9,\r\n    0xE095: 0x71BE,\r\n    0xE096: 0x71D2,\r\n    0xE097: 0x71C9,\r\n    0xE098: 0x71D4,\r\n    0xE099: 0x71CE,\r\n    0xE09A: 0x71E0,\r\n    0xE09B: 0x71EC,\r\n    0xE09C: 0x71E7,\r\n    0xE09D: 0x71F5,\r\n    0xE09E: 0x71FC,\r\n    0xE09F: 0x71F9,\r\n    0xE0A0: 0x71FF,\r\n    0xE0A1: 0x720D,\r\n    0xE0A2: 0x7210,\r\n    0xE0A3: 0x721B,\r\n    0xE0A4: 0x7228,\r\n    0xE0A5: 0x722D,\r\n    0xE0A6: 0x722C,\r\n    0xE0A7: 0x7230,\r\n    0xE0A8: 0x7232,\r\n    0xE0A9: 0x723B,\r\n    0xE0AA: 0x723C,\r\n    0xE0AB: 0x723F,\r\n    0xE0AC: 0x7240,\r\n    0xE0AD: 0x7246,\r\n    0xE0AE: 0x724B,\r\n    0xE0AF: 0x7258,\r\n    0xE0B0: 0x7274,\r\n    0xE0B1: 0x727E,\r\n    0xE0B2: 0x7282,\r\n    0xE0B3: 0x7281,\r\n    0xE0B4: 0x7287,\r\n    0xE0B5: 0x7292,\r\n    0xE0B6: 0x7296,\r\n    0xE0B7: 0x72A2,\r\n    0xE0B8: 0x72A7,\r\n    0xE0B9: 0x72B9,\r\n    0xE0BA: 0x72B2,\r\n    0xE0BB: 0x72C3,\r\n    0xE0BC: 0x72C6,\r\n    0xE0BD: 0x72C4,\r\n    0xE0BE: 0x72CE,\r\n    0xE0BF: 0x72D2,\r\n    0xE0C0: 0x72E2,\r\n    0xE0C1: 0x72E0,\r\n    0xE0C2: 0x72E1,\r\n    0xE0C3: 0x72F9,\r\n    0xE0C4: 0x72F7,\r\n    0xE0C5: 0x500F,\r\n    0xE0C6: 0x7317,\r\n    0xE0C7: 0x730A,\r\n    0xE0C8: 0x731C,\r\n    0xE0C9: 0x7316,\r\n    0xE0CA: 0x731D,\r\n    0xE0CB: 0x7334,\r\n    0xE0CC: 0x732F,\r\n    0xE0CD: 0x7329,\r\n    0xE0CE: 0x7325,\r\n    0xE0CF: 0x733E,\r\n    0xE0D0: 0x734E,\r\n    0xE0D1: 0x734F,\r\n    0xE0D2: 0x9ED8,\r\n    0xE0D3: 0x7357,\r\n    0xE0D4: 0x736A,\r\n    0xE0D5: 0x7368,\r\n    0xE0D6: 0x7370,\r\n    0xE0D7: 0x7378,\r\n    0xE0D8: 0x7375,\r\n    0xE0D9: 0x737B,\r\n    0xE0DA: 0x737A,\r\n    0xE0DB: 0x73C8,\r\n    0xE0DC: 0x73B3,\r\n    0xE0DD: 0x73CE,\r\n    0xE0DE: 0x73BB,\r\n    0xE0DF: 0x73C0,\r\n    0xE0E0: 0x73E5,\r\n    0xE0E1: 0x73EE,\r\n    0xE0E2: 0x73DE,\r\n    0xE0E3: 0x74A2,\r\n    0xE0E4: 0x7405,\r\n    0xE0E5: 0x746F,\r\n    0xE0E6: 0x7425,\r\n    0xE0E7: 0x73F8,\r\n    0xE0E8: 0x7432,\r\n    0xE0E9: 0x743A,\r\n    0xE0EA: 0x7455,\r\n    0xE0EB: 0x743F,\r\n    0xE0EC: 0x745F,\r\n    0xE0ED: 0x7459,\r\n    0xE0EE: 0x7441,\r\n    0xE0EF: 0x745C,\r\n    0xE0F0: 0x7469,\r\n    0xE0F1: 0x7470,\r\n    0xE0F2: 0x7463,\r\n    0xE0F3: 0x746A,\r\n    0xE0F4: 0x7476,\r\n    0xE0F5: 0x747E,\r\n    0xE0F6: 0x748B,\r\n    0xE0F7: 0x749E,\r\n    0xE0F8: 0x74A7,\r\n    0xE0F9: 0x74CA,\r\n    0xE0FA: 0x74CF,\r\n    0xE0FB: 0x74D4,\r\n    0xE0FC: 0x73F1,\r\n    0xE140: 0x74E0,\r\n    0xE141: 0x74E3,\r\n    0xE142: 0x74E7,\r\n    0xE143: 0x74E9,\r\n    0xE144: 0x74EE,\r\n    0xE145: 0x74F2,\r\n    0xE146: 0x74F0,\r\n    0xE147: 0x74F1,\r\n    0xE148: 0x74F8,\r\n    0xE149: 0x74F7,\r\n    0xE14A: 0x7504,\r\n    0xE14B: 0x7503,\r\n    0xE14C: 0x7505,\r\n    0xE14D: 0x750C,\r\n    0xE14E: 0x750E,\r\n    0xE14F: 0x750D,\r\n    0xE150: 0x7515,\r\n    0xE151: 0x7513,\r\n    0xE152: 0x751E,\r\n    0xE153: 0x7526,\r\n    0xE154: 0x752C,\r\n    0xE155: 0x753C,\r\n    0xE156: 0x7544,\r\n    0xE157: 0x754D,\r\n    0xE158: 0x754A,\r\n    0xE159: 0x7549,\r\n    0xE15A: 0x755B,\r\n    0xE15B: 0x7546,\r\n    0xE15C: 0x755A,\r\n    0xE15D: 0x7569,\r\n    0xE15E: 0x7564,\r\n    0xE15F: 0x7567,\r\n    0xE160: 0x756B,\r\n    0xE161: 0x756D,\r\n    0xE162: 0x7578,\r\n    0xE163: 0x7576,\r\n    0xE164: 0x7586,\r\n    0xE165: 0x7587,\r\n    0xE166: 0x7574,\r\n    0xE167: 0x758A,\r\n    0xE168: 0x7589,\r\n    0xE169: 0x7582,\r\n    0xE16A: 0x7594,\r\n    0xE16B: 0x759A,\r\n    0xE16C: 0x759D,\r\n    0xE16D: 0x75A5,\r\n    0xE16E: 0x75A3,\r\n    0xE16F: 0x75C2,\r\n    0xE170: 0x75B3,\r\n    0xE171: 0x75C3,\r\n    0xE172: 0x75B5,\r\n    0xE173: 0x75BD,\r\n    0xE174: 0x75B8,\r\n    0xE175: 0x75BC,\r\n    0xE176: 0x75B1,\r\n    0xE177: 0x75CD,\r\n    0xE178: 0x75CA,\r\n    0xE179: 0x75D2,\r\n    0xE17A: 0x75D9,\r\n    0xE17B: 0x75E3,\r\n    0xE17C: 0x75DE,\r\n    0xE17D: 0x75FE,\r\n    0xE17E: 0x75FF,\r\n    0xE180: 0x75FC,\r\n    0xE181: 0x7601,\r\n    0xE182: 0x75F0,\r\n    0xE183: 0x75FA,\r\n    0xE184: 0x75F2,\r\n    0xE185: 0x75F3,\r\n    0xE186: 0x760B,\r\n    0xE187: 0x760D,\r\n    0xE188: 0x7609,\r\n    0xE189: 0x761F,\r\n    0xE18A: 0x7627,\r\n    0xE18B: 0x7620,\r\n    0xE18C: 0x7621,\r\n    0xE18D: 0x7622,\r\n    0xE18E: 0x7624,\r\n    0xE18F: 0x7634,\r\n    0xE190: 0x7630,\r\n    0xE191: 0x763B,\r\n    0xE192: 0x7647,\r\n    0xE193: 0x7648,\r\n    0xE194: 0x7646,\r\n    0xE195: 0x765C,\r\n    0xE196: 0x7658,\r\n    0xE197: 0x7661,\r\n    0xE198: 0x7662,\r\n    0xE199: 0x7668,\r\n    0xE19A: 0x7669,\r\n    0xE19B: 0x766A,\r\n    0xE19C: 0x7667,\r\n    0xE19D: 0x766C,\r\n    0xE19E: 0x7670,\r\n    0xE19F: 0x7672,\r\n    0xE1A0: 0x7676,\r\n    0xE1A1: 0x7678,\r\n    0xE1A2: 0x767C,\r\n    0xE1A3: 0x7680,\r\n    0xE1A4: 0x7683,\r\n    0xE1A5: 0x7688,\r\n    0xE1A6: 0x768B,\r\n    0xE1A7: 0x768E,\r\n    0xE1A8: 0x7696,\r\n    0xE1A9: 0x7693,\r\n    0xE1AA: 0x7699,\r\n    0xE1AB: 0x769A,\r\n    0xE1AC: 0x76B0,\r\n    0xE1AD: 0x76B4,\r\n    0xE1AE: 0x76B8,\r\n    0xE1AF: 0x76B9,\r\n    0xE1B0: 0x76BA,\r\n    0xE1B1: 0x76C2,\r\n    0xE1B2: 0x76CD,\r\n    0xE1B3: 0x76D6,\r\n    0xE1B4: 0x76D2,\r\n    0xE1B5: 0x76DE,\r\n    0xE1B6: 0x76E1,\r\n    0xE1B7: 0x76E5,\r\n    0xE1B8: 0x76E7,\r\n    0xE1B9: 0x76EA,\r\n    0xE1BA: 0x862F,\r\n    0xE1BB: 0x76FB,\r\n    0xE1BC: 0x7708,\r\n    0xE1BD: 0x7707,\r\n    0xE1BE: 0x7704,\r\n    0xE1BF: 0x7729,\r\n    0xE1C0: 0x7724,\r\n    0xE1C1: 0x771E,\r\n    0xE1C2: 0x7725,\r\n    0xE1C3: 0x7726,\r\n    0xE1C4: 0x771B,\r\n    0xE1C5: 0x7737,\r\n    0xE1C6: 0x7738,\r\n    0xE1C7: 0x7747,\r\n    0xE1C8: 0x775A,\r\n    0xE1C9: 0x7768,\r\n    0xE1CA: 0x776B,\r\n    0xE1CB: 0x775B,\r\n    0xE1CC: 0x7765,\r\n    0xE1CD: 0x777F,\r\n    0xE1CE: 0x777E,\r\n    0xE1CF: 0x7779,\r\n    0xE1D0: 0x778E,\r\n    0xE1D1: 0x778B,\r\n    0xE1D2: 0x7791,\r\n    0xE1D3: 0x77A0,\r\n    0xE1D4: 0x779E,\r\n    0xE1D5: 0x77B0,\r\n    0xE1D6: 0x77B6,\r\n    0xE1D7: 0x77B9,\r\n    0xE1D8: 0x77BF,\r\n    0xE1D9: 0x77BC,\r\n    0xE1DA: 0x77BD,\r\n    0xE1DB: 0x77BB,\r\n    0xE1DC: 0x77C7,\r\n    0xE1DD: 0x77CD,\r\n    0xE1DE: 0x77D7,\r\n    0xE1DF: 0x77DA,\r\n    0xE1E0: 0x77DC,\r\n    0xE1E1: 0x77E3,\r\n    0xE1E2: 0x77EE,\r\n    0xE1E3: 0x77FC,\r\n    0xE1E4: 0x780C,\r\n    0xE1E5: 0x7812,\r\n    0xE1E6: 0x7926,\r\n    0xE1E7: 0x7820,\r\n    0xE1E8: 0x792A,\r\n    0xE1E9: 0x7845,\r\n    0xE1EA: 0x788E,\r\n    0xE1EB: 0x7874,\r\n    0xE1EC: 0x7886,\r\n    0xE1ED: 0x787C,\r\n    0xE1EE: 0x789A,\r\n    0xE1EF: 0x788C,\r\n    0xE1F0: 0x78A3,\r\n    0xE1F1: 0x78B5,\r\n    0xE1F2: 0x78AA,\r\n    0xE1F3: 0x78AF,\r\n    0xE1F4: 0x78D1,\r\n    0xE1F5: 0x78C6,\r\n    0xE1F6: 0x78CB,\r\n    0xE1F7: 0x78D4,\r\n    0xE1F8: 0x78BE,\r\n    0xE1F9: 0x78BC,\r\n    0xE1FA: 0x78C5,\r\n    0xE1FB: 0x78CA,\r\n    0xE1FC: 0x78EC,\r\n    0xE240: 0x78E7,\r\n    0xE241: 0x78DA,\r\n    0xE242: 0x78FD,\r\n    0xE243: 0x78F4,\r\n    0xE244: 0x7907,\r\n    0xE245: 0x7912,\r\n    0xE246: 0x7911,\r\n    0xE247: 0x7919,\r\n    0xE248: 0x792C,\r\n    0xE249: 0x792B,\r\n    0xE24A: 0x7940,\r\n    0xE24B: 0x7960,\r\n    0xE24C: 0x7957,\r\n    0xE24D: 0x795F,\r\n    0xE24E: 0x795A,\r\n    0xE24F: 0x7955,\r\n    0xE250: 0x7953,\r\n    0xE251: 0x797A,\r\n    0xE252: 0x797F,\r\n    0xE253: 0x798A,\r\n    0xE254: 0x799D,\r\n    0xE255: 0x79A7,\r\n    0xE256: 0x9F4B,\r\n    0xE257: 0x79AA,\r\n    0xE258: 0x79AE,\r\n    0xE259: 0x79B3,\r\n    0xE25A: 0x79B9,\r\n    0xE25B: 0x79BA,\r\n    0xE25C: 0x79C9,\r\n    0xE25D: 0x79D5,\r\n    0xE25E: 0x79E7,\r\n    0xE25F: 0x79EC,\r\n    0xE260: 0x79E1,\r\n    0xE261: 0x79E3,\r\n    0xE262: 0x7A08,\r\n    0xE263: 0x7A0D,\r\n    0xE264: 0x7A18,\r\n    0xE265: 0x7A19,\r\n    0xE266: 0x7A20,\r\n    0xE267: 0x7A1F,\r\n    0xE268: 0x7980,\r\n    0xE269: 0x7A31,\r\n    0xE26A: 0x7A3B,\r\n    0xE26B: 0x7A3E,\r\n    0xE26C: 0x7A37,\r\n    0xE26D: 0x7A43,\r\n    0xE26E: 0x7A57,\r\n    0xE26F: 0x7A49,\r\n    0xE270: 0x7A61,\r\n    0xE271: 0x7A62,\r\n    0xE272: 0x7A69,\r\n    0xE273: 0x9F9D,\r\n    0xE274: 0x7A70,\r\n    0xE275: 0x7A79,\r\n    0xE276: 0x7A7D,\r\n    0xE277: 0x7A88,\r\n    0xE278: 0x7A97,\r\n    0xE279: 0x7A95,\r\n    0xE27A: 0x7A98,\r\n    0xE27B: 0x7A96,\r\n    0xE27C: 0x7AA9,\r\n    0xE27D: 0x7AC8,\r\n    0xE27E: 0x7AB0,\r\n    0xE280: 0x7AB6,\r\n    0xE281: 0x7AC5,\r\n    0xE282: 0x7AC4,\r\n    0xE283: 0x7ABF,\r\n    0xE284: 0x9083,\r\n    0xE285: 0x7AC7,\r\n    0xE286: 0x7ACA,\r\n    0xE287: 0x7ACD,\r\n    0xE288: 0x7ACF,\r\n    0xE289: 0x7AD5,\r\n    0xE28A: 0x7AD3,\r\n    0xE28B: 0x7AD9,\r\n    0xE28C: 0x7ADA,\r\n    0xE28D: 0x7ADD,\r\n    0xE28E: 0x7AE1,\r\n    0xE28F: 0x7AE2,\r\n    0xE290: 0x7AE6,\r\n    0xE291: 0x7AED,\r\n    0xE292: 0x7AF0,\r\n    0xE293: 0x7B02,\r\n    0xE294: 0x7B0F,\r\n    0xE295: 0x7B0A,\r\n    0xE296: 0x7B06,\r\n    0xE297: 0x7B33,\r\n    0xE298: 0x7B18,\r\n    0xE299: 0x7B19,\r\n    0xE29A: 0x7B1E,\r\n    0xE29B: 0x7B35,\r\n    0xE29C: 0x7B28,\r\n    0xE29D: 0x7B36,\r\n    0xE29E: 0x7B50,\r\n    0xE29F: 0x7B7A,\r\n    0xE2A0: 0x7B04,\r\n    0xE2A1: 0x7B4D,\r\n    0xE2A2: 0x7B0B,\r\n    0xE2A3: 0x7B4C,\r\n    0xE2A4: 0x7B45,\r\n    0xE2A5: 0x7B75,\r\n    0xE2A6: 0x7B65,\r\n    0xE2A7: 0x7B74,\r\n    0xE2A8: 0x7B67,\r\n    0xE2A9: 0x7B70,\r\n    0xE2AA: 0x7B71,\r\n    0xE2AB: 0x7B6C,\r\n    0xE2AC: 0x7B6E,\r\n    0xE2AD: 0x7B9D,\r\n    0xE2AE: 0x7B98,\r\n    0xE2AF: 0x7B9F,\r\n    0xE2B0: 0x7B8D,\r\n    0xE2B1: 0x7B9C,\r\n    0xE2B2: 0x7B9A,\r\n    0xE2B3: 0x7B8B,\r\n    0xE2B4: 0x7B92,\r\n    0xE2B5: 0x7B8F,\r\n    0xE2B6: 0x7B5D,\r\n    0xE2B7: 0x7B99,\r\n    0xE2B8: 0x7BCB,\r\n    0xE2B9: 0x7BC1,\r\n    0xE2BA: 0x7BCC,\r\n    0xE2BB: 0x7BCF,\r\n    0xE2BC: 0x7BB4,\r\n    0xE2BD: 0x7BC6,\r\n    0xE2BE: 0x7BDD,\r\n    0xE2BF: 0x7BE9,\r\n    0xE2C0: 0x7C11,\r\n    0xE2C1: 0x7C14,\r\n    0xE2C2: 0x7BE6,\r\n    0xE2C3: 0x7BE5,\r\n    0xE2C4: 0x7C60,\r\n    0xE2C5: 0x7C00,\r\n    0xE2C6: 0x7C07,\r\n    0xE2C7: 0x7C13,\r\n    0xE2C8: 0x7BF3,\r\n    0xE2C9: 0x7BF7,\r\n    0xE2CA: 0x7C17,\r\n    0xE2CB: 0x7C0D,\r\n    0xE2CC: 0x7BF6,\r\n    0xE2CD: 0x7C23,\r\n    0xE2CE: 0x7C27,\r\n    0xE2CF: 0x7C2A,\r\n    0xE2D0: 0x7C1F,\r\n    0xE2D1: 0x7C37,\r\n    0xE2D2: 0x7C2B,\r\n    0xE2D3: 0x7C3D,\r\n    0xE2D4: 0x7C4C,\r\n    0xE2D5: 0x7C43,\r\n    0xE2D6: 0x7C54,\r\n    0xE2D7: 0x7C4F,\r\n    0xE2D8: 0x7C40,\r\n    0xE2D9: 0x7C50,\r\n    0xE2DA: 0x7C58,\r\n    0xE2DB: 0x7C5F,\r\n    0xE2DC: 0x7C64,\r\n    0xE2DD: 0x7C56,\r\n    0xE2DE: 0x7C65,\r\n    0xE2DF: 0x7C6C,\r\n    0xE2E0: 0x7C75,\r\n    0xE2E1: 0x7C83,\r\n    0xE2E2: 0x7C90,\r\n    0xE2E3: 0x7CA4,\r\n    0xE2E4: 0x7CAD,\r\n    0xE2E5: 0x7CA2,\r\n    0xE2E6: 0x7CAB,\r\n    0xE2E7: 0x7CA1,\r\n    0xE2E8: 0x7CA8,\r\n    0xE2E9: 0x7CB3,\r\n    0xE2EA: 0x7CB2,\r\n    0xE2EB: 0x7CB1,\r\n    0xE2EC: 0x7CAE,\r\n    0xE2ED: 0x7CB9,\r\n    0xE2EE: 0x7CBD,\r\n    0xE2EF: 0x7CC0,\r\n    0xE2F0: 0x7CC5,\r\n    0xE2F1: 0x7CC2,\r\n    0xE2F2: 0x7CD8,\r\n    0xE2F3: 0x7CD2,\r\n    0xE2F4: 0x7CDC,\r\n    0xE2F5: 0x7CE2,\r\n    0xE2F6: 0x9B3B,\r\n    0xE2F7: 0x7CEF,\r\n    0xE2F8: 0x7CF2,\r\n    0xE2F9: 0x7CF4,\r\n    0xE2FA: 0x7CF6,\r\n    0xE2FB: 0x7CFA,\r\n    0xE2FC: 0x7D06,\r\n    0xE340: 0x7D02,\r\n    0xE341: 0x7D1C,\r\n    0xE342: 0x7D15,\r\n    0xE343: 0x7D0A,\r\n    0xE344: 0x7D45,\r\n    0xE345: 0x7D4B,\r\n    0xE346: 0x7D2E,\r\n    0xE347: 0x7D32,\r\n    0xE348: 0x7D3F,\r\n    0xE349: 0x7D35,\r\n    0xE34A: 0x7D46,\r\n    0xE34B: 0x7D73,\r\n    0xE34C: 0x7D56,\r\n    0xE34D: 0x7D4E,\r\n    0xE34E: 0x7D72,\r\n    0xE34F: 0x7D68,\r\n    0xE350: 0x7D6E,\r\n    0xE351: 0x7D4F,\r\n    0xE352: 0x7D63,\r\n    0xE353: 0x7D93,\r\n    0xE354: 0x7D89,\r\n    0xE355: 0x7D5B,\r\n    0xE356: 0x7D8F,\r\n    0xE357: 0x7D7D,\r\n    0xE358: 0x7D9B,\r\n    0xE359: 0x7DBA,\r\n    0xE35A: 0x7DAE,\r\n    0xE35B: 0x7DA3,\r\n    0xE35C: 0x7DB5,\r\n    0xE35D: 0x7DC7,\r\n    0xE35E: 0x7DBD,\r\n    0xE35F: 0x7DAB,\r\n    0xE360: 0x7E3D,\r\n    0xE361: 0x7DA2,\r\n    0xE362: 0x7DAF,\r\n    0xE363: 0x7DDC,\r\n    0xE364: 0x7DB8,\r\n    0xE365: 0x7D9F,\r\n    0xE366: 0x7DB0,\r\n    0xE367: 0x7DD8,\r\n    0xE368: 0x7DDD,\r\n    0xE369: 0x7DE4,\r\n    0xE36A: 0x7DDE,\r\n    0xE36B: 0x7DFB,\r\n    0xE36C: 0x7DF2,\r\n    0xE36D: 0x7DE1,\r\n    0xE36E: 0x7E05,\r\n    0xE36F: 0x7E0A,\r\n    0xE370: 0x7E23,\r\n    0xE371: 0x7E21,\r\n    0xE372: 0x7E12,\r\n    0xE373: 0x7E31,\r\n    0xE374: 0x7E1F,\r\n    0xE375: 0x7E09,\r\n    0xE376: 0x7E0B,\r\n    0xE377: 0x7E22,\r\n    0xE378: 0x7E46,\r\n    0xE379: 0x7E66,\r\n    0xE37A: 0x7E3B,\r\n    0xE37B: 0x7E35,\r\n    0xE37C: 0x7E39,\r\n    0xE37D: 0x7E43,\r\n    0xE37E: 0x7E37,\r\n    0xE380: 0x7E32,\r\n    0xE381: 0x7E3A,\r\n    0xE382: 0x7E67,\r\n    0xE383: 0x7E5D,\r\n    0xE384: 0x7E56,\r\n    0xE385: 0x7E5E,\r\n    0xE386: 0x7E59,\r\n    0xE387: 0x7E5A,\r\n    0xE388: 0x7E79,\r\n    0xE389: 0x7E6A,\r\n    0xE38A: 0x7E69,\r\n    0xE38B: 0x7E7C,\r\n    0xE38C: 0x7E7B,\r\n    0xE38D: 0x7E83,\r\n    0xE38E: 0x7DD5,\r\n    0xE38F: 0x7E7D,\r\n    0xE390: 0x8FAE,\r\n    0xE391: 0x7E7F,\r\n    0xE392: 0x7E88,\r\n    0xE393: 0x7E89,\r\n    0xE394: 0x7E8C,\r\n    0xE395: 0x7E92,\r\n    0xE396: 0x7E90,\r\n    0xE397: 0x7E93,\r\n    0xE398: 0x7E94,\r\n    0xE399: 0x7E96,\r\n    0xE39A: 0x7E8E,\r\n    0xE39B: 0x7E9B,\r\n    0xE39C: 0x7E9C,\r\n    0xE39D: 0x7F38,\r\n    0xE39E: 0x7F3A,\r\n    0xE39F: 0x7F45,\r\n    0xE3A0: 0x7F4C,\r\n    0xE3A1: 0x7F4D,\r\n    0xE3A2: 0x7F4E,\r\n    0xE3A3: 0x7F50,\r\n    0xE3A4: 0x7F51,\r\n    0xE3A5: 0x7F55,\r\n    0xE3A6: 0x7F54,\r\n    0xE3A7: 0x7F58,\r\n    0xE3A8: 0x7F5F,\r\n    0xE3A9: 0x7F60,\r\n    0xE3AA: 0x7F68,\r\n    0xE3AB: 0x7F69,\r\n    0xE3AC: 0x7F67,\r\n    0xE3AD: 0x7F78,\r\n    0xE3AE: 0x7F82,\r\n    0xE3AF: 0x7F86,\r\n    0xE3B0: 0x7F83,\r\n    0xE3B1: 0x7F88,\r\n    0xE3B2: 0x7F87,\r\n    0xE3B3: 0x7F8C,\r\n    0xE3B4: 0x7F94,\r\n    0xE3B5: 0x7F9E,\r\n    0xE3B6: 0x7F9D,\r\n    0xE3B7: 0x7F9A,\r\n    0xE3B8: 0x7FA3,\r\n    0xE3B9: 0x7FAF,\r\n    0xE3BA: 0x7FB2,\r\n    0xE3BB: 0x7FB9,\r\n    0xE3BC: 0x7FAE,\r\n    0xE3BD: 0x7FB6,\r\n    0xE3BE: 0x7FB8,\r\n    0xE3BF: 0x8B71,\r\n    0xE3C0: 0x7FC5,\r\n    0xE3C1: 0x7FC6,\r\n    0xE3C2: 0x7FCA,\r\n    0xE3C3: 0x7FD5,\r\n    0xE3C4: 0x7FD4,\r\n    0xE3C5: 0x7FE1,\r\n    0xE3C6: 0x7FE6,\r\n    0xE3C7: 0x7FE9,\r\n    0xE3C8: 0x7FF3,\r\n    0xE3C9: 0x7FF9,\r\n    0xE3CA: 0x98DC,\r\n    0xE3CB: 0x8006,\r\n    0xE3CC: 0x8004,\r\n    0xE3CD: 0x800B,\r\n    0xE3CE: 0x8012,\r\n    0xE3CF: 0x8018,\r\n    0xE3D0: 0x8019,\r\n    0xE3D1: 0x801C,\r\n    0xE3D2: 0x8021,\r\n    0xE3D3: 0x8028,\r\n    0xE3D4: 0x803F,\r\n    0xE3D5: 0x803B,\r\n    0xE3D6: 0x804A,\r\n    0xE3D7: 0x8046,\r\n    0xE3D8: 0x8052,\r\n    0xE3D9: 0x8058,\r\n    0xE3DA: 0x805A,\r\n    0xE3DB: 0x805F,\r\n    0xE3DC: 0x8062,\r\n    0xE3DD: 0x8068,\r\n    0xE3DE: 0x8073,\r\n    0xE3DF: 0x8072,\r\n    0xE3E0: 0x8070,\r\n    0xE3E1: 0x8076,\r\n    0xE3E2: 0x8079,\r\n    0xE3E3: 0x807D,\r\n    0xE3E4: 0x807F,\r\n    0xE3E5: 0x8084,\r\n    0xE3E6: 0x8086,\r\n    0xE3E7: 0x8085,\r\n    0xE3E8: 0x809B,\r\n    0xE3E9: 0x8093,\r\n    0xE3EA: 0x809A,\r\n    0xE3EB: 0x80AD,\r\n    0xE3EC: 0x5190,\r\n    0xE3ED: 0x80AC,\r\n    0xE3EE: 0x80DB,\r\n    0xE3EF: 0x80E5,\r\n    0xE3F0: 0x80D9,\r\n    0xE3F1: 0x80DD,\r\n    0xE3F2: 0x80C4,\r\n    0xE3F3: 0x80DA,\r\n    0xE3F4: 0x80D6,\r\n    0xE3F5: 0x8109,\r\n    0xE3F6: 0x80EF,\r\n    0xE3F7: 0x80F1,\r\n    0xE3F8: 0x811B,\r\n    0xE3F9: 0x8129,\r\n    0xE3FA: 0x8123,\r\n    0xE3FB: 0x812F,\r\n    0xE3FC: 0x814B,\r\n    0xE440: 0x968B,\r\n    0xE441: 0x8146,\r\n    0xE442: 0x813E,\r\n    0xE443: 0x8153,\r\n    0xE444: 0x8151,\r\n    0xE445: 0x80FC,\r\n    0xE446: 0x8171,\r\n    0xE447: 0x816E,\r\n    0xE448: 0x8165,\r\n    0xE449: 0x8166,\r\n    0xE44A: 0x8174,\r\n    0xE44B: 0x8183,\r\n    0xE44C: 0x8188,\r\n    0xE44D: 0x818A,\r\n    0xE44E: 0x8180,\r\n    0xE44F: 0x8182,\r\n    0xE450: 0x81A0,\r\n    0xE451: 0x8195,\r\n    0xE452: 0x81A4,\r\n    0xE453: 0x81A3,\r\n    0xE454: 0x815F,\r\n    0xE455: 0x8193,\r\n    0xE456: 0x81A9,\r\n    0xE457: 0x81B0,\r\n    0xE458: 0x81B5,\r\n    0xE459: 0x81BE,\r\n    0xE45A: 0x81B8,\r\n    0xE45B: 0x81BD,\r\n    0xE45C: 0x81C0,\r\n    0xE45D: 0x81C2,\r\n    0xE45E: 0x81BA,\r\n    0xE45F: 0x81C9,\r\n    0xE460: 0x81CD,\r\n    0xE461: 0x81D1,\r\n    0xE462: 0x81D9,\r\n    0xE463: 0x81D8,\r\n    0xE464: 0x81C8,\r\n    0xE465: 0x81DA,\r\n    0xE466: 0x81DF,\r\n    0xE467: 0x81E0,\r\n    0xE468: 0x81E7,\r\n    0xE469: 0x81FA,\r\n    0xE46A: 0x81FB,\r\n    0xE46B: 0x81FE,\r\n    0xE46C: 0x8201,\r\n    0xE46D: 0x8202,\r\n    0xE46E: 0x8205,\r\n    0xE46F: 0x8207,\r\n    0xE470: 0x820A,\r\n    0xE471: 0x820D,\r\n    0xE472: 0x8210,\r\n    0xE473: 0x8216,\r\n    0xE474: 0x8229,\r\n    0xE475: 0x822B,\r\n    0xE476: 0x8238,\r\n    0xE477: 0x8233,\r\n    0xE478: 0x8240,\r\n    0xE479: 0x8259,\r\n    0xE47A: 0x8258,\r\n    0xE47B: 0x825D,\r\n    0xE47C: 0x825A,\r\n    0xE47D: 0x825F,\r\n    0xE47E: 0x8264,\r\n    0xE480: 0x8262,\r\n    0xE481: 0x8268,\r\n    0xE482: 0x826A,\r\n    0xE483: 0x826B,\r\n    0xE484: 0x822E,\r\n    0xE485: 0x8271,\r\n    0xE486: 0x8277,\r\n    0xE487: 0x8278,\r\n    0xE488: 0x827E,\r\n    0xE489: 0x828D,\r\n    0xE48A: 0x8292,\r\n    0xE48B: 0x82AB,\r\n    0xE48C: 0x829F,\r\n    0xE48D: 0x82BB,\r\n    0xE48E: 0x82AC,\r\n    0xE48F: 0x82E1,\r\n    0xE490: 0x82E3,\r\n    0xE491: 0x82DF,\r\n    0xE492: 0x82D2,\r\n    0xE493: 0x82F4,\r\n    0xE494: 0x82F3,\r\n    0xE495: 0x82FA,\r\n    0xE496: 0x8393,\r\n    0xE497: 0x8303,\r\n    0xE498: 0x82FB,\r\n    0xE499: 0x82F9,\r\n    0xE49A: 0x82DE,\r\n    0xE49B: 0x8306,\r\n    0xE49C: 0x82DC,\r\n    0xE49D: 0x8309,\r\n    0xE49E: 0x82D9,\r\n    0xE49F: 0x8335,\r\n    0xE4A0: 0x8334,\r\n    0xE4A1: 0x8316,\r\n    0xE4A2: 0x8332,\r\n    0xE4A3: 0x8331,\r\n    0xE4A4: 0x8340,\r\n    0xE4A5: 0x8339,\r\n    0xE4A6: 0x8350,\r\n    0xE4A7: 0x8345,\r\n    0xE4A8: 0x832F,\r\n    0xE4A9: 0x832B,\r\n    0xE4AA: 0x8317,\r\n    0xE4AB: 0x8318,\r\n    0xE4AC: 0x8385,\r\n    0xE4AD: 0x839A,\r\n    0xE4AE: 0x83AA,\r\n    0xE4AF: 0x839F,\r\n    0xE4B0: 0x83A2,\r\n    0xE4B1: 0x8396,\r\n    0xE4B2: 0x8323,\r\n    0xE4B3: 0x838E,\r\n    0xE4B4: 0x8387,\r\n    0xE4B5: 0x838A,\r\n    0xE4B6: 0x837C,\r\n    0xE4B7: 0x83B5,\r\n    0xE4B8: 0x8373,\r\n    0xE4B9: 0x8375,\r\n    0xE4BA: 0x83A0,\r\n    0xE4BB: 0x8389,\r\n    0xE4BC: 0x83A8,\r\n    0xE4BD: 0x83F4,\r\n    0xE4BE: 0x8413,\r\n    0xE4BF: 0x83EB,\r\n    0xE4C0: 0x83CE,\r\n    0xE4C1: 0x83FD,\r\n    0xE4C2: 0x8403,\r\n    0xE4C3: 0x83D8,\r\n    0xE4C4: 0x840B,\r\n    0xE4C5: 0x83C1,\r\n    0xE4C6: 0x83F7,\r\n    0xE4C7: 0x8407,\r\n    0xE4C8: 0x83E0,\r\n    0xE4C9: 0x83F2,\r\n    0xE4CA: 0x840D,\r\n    0xE4CB: 0x8422,\r\n    0xE4CC: 0x8420,\r\n    0xE4CD: 0x83BD,\r\n    0xE4CE: 0x8438,\r\n    0xE4CF: 0x8506,\r\n    0xE4D0: 0x83FB,\r\n    0xE4D1: 0x846D,\r\n    0xE4D2: 0x842A,\r\n    0xE4D3: 0x843C,\r\n    0xE4D4: 0x855A,\r\n    0xE4D5: 0x8484,\r\n    0xE4D6: 0x8477,\r\n    0xE4D7: 0x846B,\r\n    0xE4D8: 0x84AD,\r\n    0xE4D9: 0x846E,\r\n    0xE4DA: 0x8482,\r\n    0xE4DB: 0x8469,\r\n    0xE4DC: 0x8446,\r\n    0xE4DD: 0x842C,\r\n    0xE4DE: 0x846F,\r\n    0xE4DF: 0x8479,\r\n    0xE4E0: 0x8435,\r\n    0xE4E1: 0x84CA,\r\n    0xE4E2: 0x8462,\r\n    0xE4E3: 0x84B9,\r\n    0xE4E4: 0x84BF,\r\n    0xE4E5: 0x849F,\r\n    0xE4E6: 0x84D9,\r\n    0xE4E7: 0x84CD,\r\n    0xE4E8: 0x84BB,\r\n    0xE4E9: 0x84DA,\r\n    0xE4EA: 0x84D0,\r\n    0xE4EB: 0x84C1,\r\n    0xE4EC: 0x84C6,\r\n    0xE4ED: 0x84D6,\r\n    0xE4EE: 0x84A1,\r\n    0xE4EF: 0x8521,\r\n    0xE4F0: 0x84FF,\r\n    0xE4F1: 0x84F4,\r\n    0xE4F2: 0x8517,\r\n    0xE4F3: 0x8518,\r\n    0xE4F4: 0x852C,\r\n    0xE4F5: 0x851F,\r\n    0xE4F6: 0x8515,\r\n    0xE4F7: 0x8514,\r\n    0xE4F8: 0x84FC,\r\n    0xE4F9: 0x8540,\r\n    0xE4FA: 0x8563,\r\n    0xE4FB: 0x8558,\r\n    0xE4FC: 0x8548,\r\n    0xE540: 0x8541,\r\n    0xE541: 0x8602,\r\n    0xE542: 0x854B,\r\n    0xE543: 0x8555,\r\n    0xE544: 0x8580,\r\n    0xE545: 0x85A4,\r\n    0xE546: 0x8588,\r\n    0xE547: 0x8591,\r\n    0xE548: 0x858A,\r\n    0xE549: 0x85A8,\r\n    0xE54A: 0x856D,\r\n    0xE54B: 0x8594,\r\n    0xE54C: 0x859B,\r\n    0xE54D: 0x85EA,\r\n    0xE54E: 0x8587,\r\n    0xE54F: 0x859C,\r\n    0xE550: 0x8577,\r\n    0xE551: 0x857E,\r\n    0xE552: 0x8590,\r\n    0xE553: 0x85C9,\r\n    0xE554: 0x85BA,\r\n    0xE555: 0x85CF,\r\n    0xE556: 0x85B9,\r\n    0xE557: 0x85D0,\r\n    0xE558: 0x85D5,\r\n    0xE559: 0x85DD,\r\n    0xE55A: 0x85E5,\r\n    0xE55B: 0x85DC,\r\n    0xE55C: 0x85F9,\r\n    0xE55D: 0x860A,\r\n    0xE55E: 0x8613,\r\n    0xE55F: 0x860B,\r\n    0xE560: 0x85FE,\r\n    0xE561: 0x85FA,\r\n    0xE562: 0x8606,\r\n    0xE563: 0x8622,\r\n    0xE564: 0x861A,\r\n    0xE565: 0x8630,\r\n    0xE566: 0x863F,\r\n    0xE567: 0x864D,\r\n    0xE568: 0x4E55,\r\n    0xE569: 0x8654,\r\n    0xE56A: 0x865F,\r\n    0xE56B: 0x8667,\r\n    0xE56C: 0x8671,\r\n    0xE56D: 0x8693,\r\n    0xE56E: 0x86A3,\r\n    0xE56F: 0x86A9,\r\n    0xE570: 0x86AA,\r\n    0xE571: 0x868B,\r\n    0xE572: 0x868C,\r\n    0xE573: 0x86B6,\r\n    0xE574: 0x86AF,\r\n    0xE575: 0x86C4,\r\n    0xE576: 0x86C6,\r\n    0xE577: 0x86B0,\r\n    0xE578: 0x86C9,\r\n    0xE579: 0x8823,\r\n    0xE57A: 0x86AB,\r\n    0xE57B: 0x86D4,\r\n    0xE57C: 0x86DE,\r\n    0xE57D: 0x86E9,\r\n    0xE57E: 0x86EC,\r\n    0xE580: 0x86DF,\r\n    0xE581: 0x86DB,\r\n    0xE582: 0x86EF,\r\n    0xE583: 0x8712,\r\n    0xE584: 0x8706,\r\n    0xE585: 0x8708,\r\n    0xE586: 0x8700,\r\n    0xE587: 0x8703,\r\n    0xE588: 0x86FB,\r\n    0xE589: 0x8711,\r\n    0xE58A: 0x8709,\r\n    0xE58B: 0x870D,\r\n    0xE58C: 0x86F9,\r\n    0xE58D: 0x870A,\r\n    0xE58E: 0x8734,\r\n    0xE58F: 0x873F,\r\n    0xE590: 0x8737,\r\n    0xE591: 0x873B,\r\n    0xE592: 0x8725,\r\n    0xE593: 0x8729,\r\n    0xE594: 0x871A,\r\n    0xE595: 0x8760,\r\n    0xE596: 0x875F,\r\n    0xE597: 0x8778,\r\n    0xE598: 0x874C,\r\n    0xE599: 0x874E,\r\n    0xE59A: 0x8774,\r\n    0xE59B: 0x8757,\r\n    0xE59C: 0x8768,\r\n    0xE59D: 0x876E,\r\n    0xE59E: 0x8759,\r\n    0xE59F: 0x8753,\r\n    0xE5A0: 0x8763,\r\n    0xE5A1: 0x876A,\r\n    0xE5A2: 0x8805,\r\n    0xE5A3: 0x87A2,\r\n    0xE5A4: 0x879F,\r\n    0xE5A5: 0x8782,\r\n    0xE5A6: 0x87AF,\r\n    0xE5A7: 0x87CB,\r\n    0xE5A8: 0x87BD,\r\n    0xE5A9: 0x87C0,\r\n    0xE5AA: 0x87D0,\r\n    0xE5AB: 0x96D6,\r\n    0xE5AC: 0x87AB,\r\n    0xE5AD: 0x87C4,\r\n    0xE5AE: 0x87B3,\r\n    0xE5AF: 0x87C7,\r\n    0xE5B0: 0x87C6,\r\n    0xE5B1: 0x87BB,\r\n    0xE5B2: 0x87EF,\r\n    0xE5B3: 0x87F2,\r\n    0xE5B4: 0x87E0,\r\n    0xE5B5: 0x880F,\r\n    0xE5B6: 0x880D,\r\n    0xE5B7: 0x87FE,\r\n    0xE5B8: 0x87F6,\r\n    0xE5B9: 0x87F7,\r\n    0xE5BA: 0x880E,\r\n    0xE5BB: 0x87D2,\r\n    0xE5BC: 0x8811,\r\n    0xE5BD: 0x8816,\r\n    0xE5BE: 0x8815,\r\n    0xE5BF: 0x8822,\r\n    0xE5C0: 0x8821,\r\n    0xE5C1: 0x8831,\r\n    0xE5C2: 0x8836,\r\n    0xE5C3: 0x8839,\r\n    0xE5C4: 0x8827,\r\n    0xE5C5: 0x883B,\r\n    0xE5C6: 0x8844,\r\n    0xE5C7: 0x8842,\r\n    0xE5C8: 0x8852,\r\n    0xE5C9: 0x8859,\r\n    0xE5CA: 0x885E,\r\n    0xE5CB: 0x8862,\r\n    0xE5CC: 0x886B,\r\n    0xE5CD: 0x8881,\r\n    0xE5CE: 0x887E,\r\n    0xE5CF: 0x889E,\r\n    0xE5D0: 0x8875,\r\n    0xE5D1: 0x887D,\r\n    0xE5D2: 0x88B5,\r\n    0xE5D3: 0x8872,\r\n    0xE5D4: 0x8882,\r\n    0xE5D5: 0x8897,\r\n    0xE5D6: 0x8892,\r\n    0xE5D7: 0x88AE,\r\n    0xE5D8: 0x8899,\r\n    0xE5D9: 0x88A2,\r\n    0xE5DA: 0x888D,\r\n    0xE5DB: 0x88A4,\r\n    0xE5DC: 0x88B0,\r\n    0xE5DD: 0x88BF,\r\n    0xE5DE: 0x88B1,\r\n    0xE5DF: 0x88C3,\r\n    0xE5E0: 0x88C4,\r\n    0xE5E1: 0x88D4,\r\n    0xE5E2: 0x88D8,\r\n    0xE5E3: 0x88D9,\r\n    0xE5E4: 0x88DD,\r\n    0xE5E5: 0x88F9,\r\n    0xE5E6: 0x8902,\r\n    0xE5E7: 0x88FC,\r\n    0xE5E8: 0x88F4,\r\n    0xE5E9: 0x88E8,\r\n    0xE5EA: 0x88F2,\r\n    0xE5EB: 0x8904,\r\n    0xE5EC: 0x890C,\r\n    0xE5ED: 0x890A,\r\n    0xE5EE: 0x8913,\r\n    0xE5EF: 0x8943,\r\n    0xE5F0: 0x891E,\r\n    0xE5F1: 0x8925,\r\n    0xE5F2: 0x892A,\r\n    0xE5F3: 0x892B,\r\n    0xE5F4: 0x8941,\r\n    0xE5F5: 0x8944,\r\n    0xE5F6: 0x893B,\r\n    0xE5F7: 0x8936,\r\n    0xE5F8: 0x8938,\r\n    0xE5F9: 0x894C,\r\n    0xE5FA: 0x891D,\r\n    0xE5FB: 0x8960,\r\n    0xE5FC: 0x895E,\r\n    0xE640: 0x8966,\r\n    0xE641: 0x8964,\r\n    0xE642: 0x896D,\r\n    0xE643: 0x896A,\r\n    0xE644: 0x896F,\r\n    0xE645: 0x8974,\r\n    0xE646: 0x8977,\r\n    0xE647: 0x897E,\r\n    0xE648: 0x8983,\r\n    0xE649: 0x8988,\r\n    0xE64A: 0x898A,\r\n    0xE64B: 0x8993,\r\n    0xE64C: 0x8998,\r\n    0xE64D: 0x89A1,\r\n    0xE64E: 0x89A9,\r\n    0xE64F: 0x89A6,\r\n    0xE650: 0x89AC,\r\n    0xE651: 0x89AF,\r\n    0xE652: 0x89B2,\r\n    0xE653: 0x89BA,\r\n    0xE654: 0x89BD,\r\n    0xE655: 0x89BF,\r\n    0xE656: 0x89C0,\r\n    0xE657: 0x89DA,\r\n    0xE658: 0x89DC,\r\n    0xE659: 0x89DD,\r\n    0xE65A: 0x89E7,\r\n    0xE65B: 0x89F4,\r\n    0xE65C: 0x89F8,\r\n    0xE65D: 0x8A03,\r\n    0xE65E: 0x8A16,\r\n    0xE65F: 0x8A10,\r\n    0xE660: 0x8A0C,\r\n    0xE661: 0x8A1B,\r\n    0xE662: 0x8A1D,\r\n    0xE663: 0x8A25,\r\n    0xE664: 0x8A36,\r\n    0xE665: 0x8A41,\r\n    0xE666: 0x8A5B,\r\n    0xE667: 0x8A52,\r\n    0xE668: 0x8A46,\r\n    0xE669: 0x8A48,\r\n    0xE66A: 0x8A7C,\r\n    0xE66B: 0x8A6D,\r\n    0xE66C: 0x8A6C,\r\n    0xE66D: 0x8A62,\r\n    0xE66E: 0x8A85,\r\n    0xE66F: 0x8A82,\r\n    0xE670: 0x8A84,\r\n    0xE671: 0x8AA8,\r\n    0xE672: 0x8AA1,\r\n    0xE673: 0x8A91,\r\n    0xE674: 0x8AA5,\r\n    0xE675: 0x8AA6,\r\n    0xE676: 0x8A9A,\r\n    0xE677: 0x8AA3,\r\n    0xE678: 0x8AC4,\r\n    0xE679: 0x8ACD,\r\n    0xE67A: 0x8AC2,\r\n    0xE67B: 0x8ADA,\r\n    0xE67C: 0x8AEB,\r\n    0xE67D: 0x8AF3,\r\n    0xE67E: 0x8AE7,\r\n    0xE680: 0x8AE4,\r\n    0xE681: 0x8AF1,\r\n    0xE682: 0x8B14,\r\n    0xE683: 0x8AE0,\r\n    0xE684: 0x8AE2,\r\n    0xE685: 0x8AF7,\r\n    0xE686: 0x8ADE,\r\n    0xE687: 0x8ADB,\r\n    0xE688: 0x8B0C,\r\n    0xE689: 0x8B07,\r\n    0xE68A: 0x8B1A,\r\n    0xE68B: 0x8AE1,\r\n    0xE68C: 0x8B16,\r\n    0xE68D: 0x8B10,\r\n    0xE68E: 0x8B17,\r\n    0xE68F: 0x8B20,\r\n    0xE690: 0x8B33,\r\n    0xE691: 0x97AB,\r\n    0xE692: 0x8B26,\r\n    0xE693: 0x8B2B,\r\n    0xE694: 0x8B3E,\r\n    0xE695: 0x8B28,\r\n    0xE696: 0x8B41,\r\n    0xE697: 0x8B4C,\r\n    0xE698: 0x8B4F,\r\n    0xE699: 0x8B4E,\r\n    0xE69A: 0x8B49,\r\n    0xE69B: 0x8B56,\r\n    0xE69C: 0x8B5B,\r\n    0xE69D: 0x8B5A,\r\n    0xE69E: 0x8B6B,\r\n    0xE69F: 0x8B5F,\r\n    0xE6A0: 0x8B6C,\r\n    0xE6A1: 0x8B6F,\r\n    0xE6A2: 0x8B74,\r\n    0xE6A3: 0x8B7D,\r\n    0xE6A4: 0x8B80,\r\n    0xE6A5: 0x8B8C,\r\n    0xE6A6: 0x8B8E,\r\n    0xE6A7: 0x8B92,\r\n    0xE6A8: 0x8B93,\r\n    0xE6A9: 0x8B96,\r\n    0xE6AA: 0x8B99,\r\n    0xE6AB: 0x8B9A,\r\n    0xE6AC: 0x8C3A,\r\n    0xE6AD: 0x8C41,\r\n    0xE6AE: 0x8C3F,\r\n    0xE6AF: 0x8C48,\r\n    0xE6B0: 0x8C4C,\r\n    0xE6B1: 0x8C4E,\r\n    0xE6B2: 0x8C50,\r\n    0xE6B3: 0x8C55,\r\n    0xE6B4: 0x8C62,\r\n    0xE6B5: 0x8C6C,\r\n    0xE6B6: 0x8C78,\r\n    0xE6B7: 0x8C7A,\r\n    0xE6B8: 0x8C82,\r\n    0xE6B9: 0x8C89,\r\n    0xE6BA: 0x8C85,\r\n    0xE6BB: 0x8C8A,\r\n    0xE6BC: 0x8C8D,\r\n    0xE6BD: 0x8C8E,\r\n    0xE6BE: 0x8C94,\r\n    0xE6BF: 0x8C7C,\r\n    0xE6C0: 0x8C98,\r\n    0xE6C1: 0x621D,\r\n    0xE6C2: 0x8CAD,\r\n    0xE6C3: 0x8CAA,\r\n    0xE6C4: 0x8CBD,\r\n    0xE6C5: 0x8CB2,\r\n    0xE6C6: 0x8CB3,\r\n    0xE6C7: 0x8CAE,\r\n    0xE6C8: 0x8CB6,\r\n    0xE6C9: 0x8CC8,\r\n    0xE6CA: 0x8CC1,\r\n    0xE6CB: 0x8CE4,\r\n    0xE6CC: 0x8CE3,\r\n    0xE6CD: 0x8CDA,\r\n    0xE6CE: 0x8CFD,\r\n    0xE6CF: 0x8CFA,\r\n    0xE6D0: 0x8CFB,\r\n    0xE6D1: 0x8D04,\r\n    0xE6D2: 0x8D05,\r\n    0xE6D3: 0x8D0A,\r\n    0xE6D4: 0x8D07,\r\n    0xE6D5: 0x8D0F,\r\n    0xE6D6: 0x8D0D,\r\n    0xE6D7: 0x8D10,\r\n    0xE6D8: 0x9F4E,\r\n    0xE6D9: 0x8D13,\r\n    0xE6DA: 0x8CCD,\r\n    0xE6DB: 0x8D14,\r\n    0xE6DC: 0x8D16,\r\n    0xE6DD: 0x8D67,\r\n    0xE6DE: 0x8D6D,\r\n    0xE6DF: 0x8D71,\r\n    0xE6E0: 0x8D73,\r\n    0xE6E1: 0x8D81,\r\n    0xE6E2: 0x8D99,\r\n    0xE6E3: 0x8DC2,\r\n    0xE6E4: 0x8DBE,\r\n    0xE6E5: 0x8DBA,\r\n    0xE6E6: 0x8DCF,\r\n    0xE6E7: 0x8DDA,\r\n    0xE6E8: 0x8DD6,\r\n    0xE6E9: 0x8DCC,\r\n    0xE6EA: 0x8DDB,\r\n    0xE6EB: 0x8DCB,\r\n    0xE6EC: 0x8DEA,\r\n    0xE6ED: 0x8DEB,\r\n    0xE6EE: 0x8DDF,\r\n    0xE6EF: 0x8DE3,\r\n    0xE6F0: 0x8DFC,\r\n    0xE6F1: 0x8E08,\r\n    0xE6F2: 0x8E09,\r\n    0xE6F3: 0x8DFF,\r\n    0xE6F4: 0x8E1D,\r\n    0xE6F5: 0x8E1E,\r\n    0xE6F6: 0x8E10,\r\n    0xE6F7: 0x8E1F,\r\n    0xE6F8: 0x8E42,\r\n    0xE6F9: 0x8E35,\r\n    0xE6FA: 0x8E30,\r\n    0xE6FB: 0x8E34,\r\n    0xE6FC: 0x8E4A,\r\n    0xE740: 0x8E47,\r\n    0xE741: 0x8E49,\r\n    0xE742: 0x8E4C,\r\n    0xE743: 0x8E50,\r\n    0xE744: 0x8E48,\r\n    0xE745: 0x8E59,\r\n    0xE746: 0x8E64,\r\n    0xE747: 0x8E60,\r\n    0xE748: 0x8E2A,\r\n    0xE749: 0x8E63,\r\n    0xE74A: 0x8E55,\r\n    0xE74B: 0x8E76,\r\n    0xE74C: 0x8E72,\r\n    0xE74D: 0x8E7C,\r\n    0xE74E: 0x8E81,\r\n    0xE74F: 0x8E87,\r\n    0xE750: 0x8E85,\r\n    0xE751: 0x8E84,\r\n    0xE752: 0x8E8B,\r\n    0xE753: 0x8E8A,\r\n    0xE754: 0x8E93,\r\n    0xE755: 0x8E91,\r\n    0xE756: 0x8E94,\r\n    0xE757: 0x8E99,\r\n    0xE758: 0x8EAA,\r\n    0xE759: 0x8EA1,\r\n    0xE75A: 0x8EAC,\r\n    0xE75B: 0x8EB0,\r\n    0xE75C: 0x8EC6,\r\n    0xE75D: 0x8EB1,\r\n    0xE75E: 0x8EBE,\r\n    0xE75F: 0x8EC5,\r\n    0xE760: 0x8EC8,\r\n    0xE761: 0x8ECB,\r\n    0xE762: 0x8EDB,\r\n    0xE763: 0x8EE3,\r\n    0xE764: 0x8EFC,\r\n    0xE765: 0x8EFB,\r\n    0xE766: 0x8EEB,\r\n    0xE767: 0x8EFE,\r\n    0xE768: 0x8F0A,\r\n    0xE769: 0x8F05,\r\n    0xE76A: 0x8F15,\r\n    0xE76B: 0x8F12,\r\n    0xE76C: 0x8F19,\r\n    0xE76D: 0x8F13,\r\n    0xE76E: 0x8F1C,\r\n    0xE76F: 0x8F1F,\r\n    0xE770: 0x8F1B,\r\n    0xE771: 0x8F0C,\r\n    0xE772: 0x8F26,\r\n    0xE773: 0x8F33,\r\n    0xE774: 0x8F3B,\r\n    0xE775: 0x8F39,\r\n    0xE776: 0x8F45,\r\n    0xE777: 0x8F42,\r\n    0xE778: 0x8F3E,\r\n    0xE779: 0x8F4C,\r\n    0xE77A: 0x8F49,\r\n    0xE77B: 0x8F46,\r\n    0xE77C: 0x8F4E,\r\n    0xE77D: 0x8F57,\r\n    0xE77E: 0x8F5C,\r\n    0xE780: 0x8F62,\r\n    0xE781: 0x8F63,\r\n    0xE782: 0x8F64,\r\n    0xE783: 0x8F9C,\r\n    0xE784: 0x8F9F,\r\n    0xE785: 0x8FA3,\r\n    0xE786: 0x8FAD,\r\n    0xE787: 0x8FAF,\r\n    0xE788: 0x8FB7,\r\n    0xE789: 0x8FDA,\r\n    0xE78A: 0x8FE5,\r\n    0xE78B: 0x8FE2,\r\n    0xE78C: 0x8FEA,\r\n    0xE78D: 0x8FEF,\r\n    0xE78E: 0x9087,\r\n    0xE78F: 0x8FF4,\r\n    0xE790: 0x9005,\r\n    0xE791: 0x8FF9,\r\n    0xE792: 0x8FFA,\r\n    0xE793: 0x9011,\r\n    0xE794: 0x9015,\r\n    0xE795: 0x9021,\r\n    0xE796: 0x900D,\r\n    0xE797: 0x901E,\r\n    0xE798: 0x9016,\r\n    0xE799: 0x900B,\r\n    0xE79A: 0x9027,\r\n    0xE79B: 0x9036,\r\n    0xE79C: 0x9035,\r\n    0xE79D: 0x9039,\r\n    0xE79E: 0x8FF8,\r\n    0xE79F: 0x904F,\r\n    0xE7A0: 0x9050,\r\n    0xE7A1: 0x9051,\r\n    0xE7A2: 0x9052,\r\n    0xE7A3: 0x900E,\r\n    0xE7A4: 0x9049,\r\n    0xE7A5: 0x903E,\r\n    0xE7A6: 0x9056,\r\n    0xE7A7: 0x9058,\r\n    0xE7A8: 0x905E,\r\n    0xE7A9: 0x9068,\r\n    0xE7AA: 0x906F,\r\n    0xE7AB: 0x9076,\r\n    0xE7AC: 0x96A8,\r\n    0xE7AD: 0x9072,\r\n    0xE7AE: 0x9082,\r\n    0xE7AF: 0x907D,\r\n    0xE7B0: 0x9081,\r\n    0xE7B1: 0x9080,\r\n    0xE7B2: 0x908A,\r\n    0xE7B3: 0x9089,\r\n    0xE7B4: 0x908F,\r\n    0xE7B5: 0x90A8,\r\n    0xE7B6: 0x90AF,\r\n    0xE7B7: 0x90B1,\r\n    0xE7B8: 0x90B5,\r\n    0xE7B9: 0x90E2,\r\n    0xE7BA: 0x90E4,\r\n    0xE7BB: 0x6248,\r\n    0xE7BC: 0x90DB,\r\n    0xE7BD: 0x9102,\r\n    0xE7BE: 0x9112,\r\n    0xE7BF: 0x9119,\r\n    0xE7C0: 0x9132,\r\n    0xE7C1: 0x9130,\r\n    0xE7C2: 0x914A,\r\n    0xE7C3: 0x9156,\r\n    0xE7C4: 0x9158,\r\n    0xE7C5: 0x9163,\r\n    0xE7C6: 0x9165,\r\n    0xE7C7: 0x9169,\r\n    0xE7C8: 0x9173,\r\n    0xE7C9: 0x9172,\r\n    0xE7CA: 0x918B,\r\n    0xE7CB: 0x9189,\r\n    0xE7CC: 0x9182,\r\n    0xE7CD: 0x91A2,\r\n    0xE7CE: 0x91AB,\r\n    0xE7CF: 0x91AF,\r\n    0xE7D0: 0x91AA,\r\n    0xE7D1: 0x91B5,\r\n    0xE7D2: 0x91B4,\r\n    0xE7D3: 0x91BA,\r\n    0xE7D4: 0x91C0,\r\n    0xE7D5: 0x91C1,\r\n    0xE7D6: 0x91C9,\r\n    0xE7D7: 0x91CB,\r\n    0xE7D8: 0x91D0,\r\n    0xE7D9: 0x91D6,\r\n    0xE7DA: 0x91DF,\r\n    0xE7DB: 0x91E1,\r\n    0xE7DC: 0x91DB,\r\n    0xE7DD: 0x91FC,\r\n    0xE7DE: 0x91F5,\r\n    0xE7DF: 0x91F6,\r\n    0xE7E0: 0x921E,\r\n    0xE7E1: 0x91FF,\r\n    0xE7E2: 0x9214,\r\n    0xE7E3: 0x922C,\r\n    0xE7E4: 0x9215,\r\n    0xE7E5: 0x9211,\r\n    0xE7E6: 0x925E,\r\n    0xE7E7: 0x9257,\r\n    0xE7E8: 0x9245,\r\n    0xE7E9: 0x9249,\r\n    0xE7EA: 0x9264,\r\n    0xE7EB: 0x9248,\r\n    0xE7EC: 0x9295,\r\n    0xE7ED: 0x923F,\r\n    0xE7EE: 0x924B,\r\n    0xE7EF: 0x9250,\r\n    0xE7F0: 0x929C,\r\n    0xE7F1: 0x9296,\r\n    0xE7F2: 0x9293,\r\n    0xE7F3: 0x929B,\r\n    0xE7F4: 0x925A,\r\n    0xE7F5: 0x92CF,\r\n    0xE7F6: 0x92B9,\r\n    0xE7F7: 0x92B7,\r\n    0xE7F8: 0x92E9,\r\n    0xE7F9: 0x930F,\r\n    0xE7FA: 0x92FA,\r\n    0xE7FB: 0x9344,\r\n    0xE7FC: 0x932E,\r\n    0xE840: 0x9319,\r\n    0xE841: 0x9322,\r\n    0xE842: 0x931A,\r\n    0xE843: 0x9323,\r\n    0xE844: 0x933A,\r\n    0xE845: 0x9335,\r\n    0xE846: 0x933B,\r\n    0xE847: 0x935C,\r\n    0xE848: 0x9360,\r\n    0xE849: 0x937C,\r\n    0xE84A: 0x936E,\r\n    0xE84B: 0x9356,\r\n    0xE84C: 0x93B0,\r\n    0xE84D: 0x93AC,\r\n    0xE84E: 0x93AD,\r\n    0xE84F: 0x9394,\r\n    0xE850: 0x93B9,\r\n    0xE851: 0x93D6,\r\n    0xE852: 0x93D7,\r\n    0xE853: 0x93E8,\r\n    0xE854: 0x93E5,\r\n    0xE855: 0x93D8,\r\n    0xE856: 0x93C3,\r\n    0xE857: 0x93DD,\r\n    0xE858: 0x93D0,\r\n    0xE859: 0x93C8,\r\n    0xE85A: 0x93E4,\r\n    0xE85B: 0x941A,\r\n    0xE85C: 0x9414,\r\n    0xE85D: 0x9413,\r\n    0xE85E: 0x9403,\r\n    0xE85F: 0x9407,\r\n    0xE860: 0x9410,\r\n    0xE861: 0x9436,\r\n    0xE862: 0x942B,\r\n    0xE863: 0x9435,\r\n    0xE864: 0x9421,\r\n    0xE865: 0x943A,\r\n    0xE866: 0x9441,\r\n    0xE867: 0x9452,\r\n    0xE868: 0x9444,\r\n    0xE869: 0x945B,\r\n    0xE86A: 0x9460,\r\n    0xE86B: 0x9462,\r\n    0xE86C: 0x945E,\r\n    0xE86D: 0x946A,\r\n    0xE86E: 0x9229,\r\n    0xE86F: 0x9470,\r\n    0xE870: 0x9475,\r\n    0xE871: 0x9477,\r\n    0xE872: 0x947D,\r\n    0xE873: 0x945A,\r\n    0xE874: 0x947C,\r\n    0xE875: 0x947E,\r\n    0xE876: 0x9481,\r\n    0xE877: 0x947F,\r\n    0xE878: 0x9582,\r\n    0xE879: 0x9587,\r\n    0xE87A: 0x958A,\r\n    0xE87B: 0x9594,\r\n    0xE87C: 0x9596,\r\n    0xE87D: 0x9598,\r\n    0xE87E: 0x9599,\r\n    0xE880: 0x95A0,\r\n    0xE881: 0x95A8,\r\n    0xE882: 0x95A7,\r\n    0xE883: 0x95AD,\r\n    0xE884: 0x95BC,\r\n    0xE885: 0x95BB,\r\n    0xE886: 0x95B9,\r\n    0xE887: 0x95BE,\r\n    0xE888: 0x95CA,\r\n    0xE889: 0x6FF6,\r\n    0xE88A: 0x95C3,\r\n    0xE88B: 0x95CD,\r\n    0xE88C: 0x95CC,\r\n    0xE88D: 0x95D5,\r\n    0xE88E: 0x95D4,\r\n    0xE88F: 0x95D6,\r\n    0xE890: 0x95DC,\r\n    0xE891: 0x95E1,\r\n    0xE892: 0x95E5,\r\n    0xE893: 0x95E2,\r\n    0xE894: 0x9621,\r\n    0xE895: 0x9628,\r\n    0xE896: 0x962E,\r\n    0xE897: 0x962F,\r\n    0xE898: 0x9642,\r\n    0xE899: 0x964C,\r\n    0xE89A: 0x964F,\r\n    0xE89B: 0x964B,\r\n    0xE89C: 0x9677,\r\n    0xE89D: 0x965C,\r\n    0xE89E: 0x965E,\r\n    0xE89F: 0x965D,\r\n    0xE8A0: 0x965F,\r\n    0xE8A1: 0x9666,\r\n    0xE8A2: 0x9672,\r\n    0xE8A3: 0x966C,\r\n    0xE8A4: 0x968D,\r\n    0xE8A5: 0x9698,\r\n    0xE8A6: 0x9695,\r\n    0xE8A7: 0x9697,\r\n    0xE8A8: 0x96AA,\r\n    0xE8A9: 0x96A7,\r\n    0xE8AA: 0x96B1,\r\n    0xE8AB: 0x96B2,\r\n    0xE8AC: 0x96B0,\r\n    0xE8AD: 0x96B4,\r\n    0xE8AE: 0x96B6,\r\n    0xE8AF: 0x96B8,\r\n    0xE8B0: 0x96B9,\r\n    0xE8B1: 0x96CE,\r\n    0xE8B2: 0x96CB,\r\n    0xE8B3: 0x96C9,\r\n    0xE8B4: 0x96CD,\r\n    0xE8B5: 0x894D,\r\n    0xE8B6: 0x96DC,\r\n    0xE8B7: 0x970D,\r\n    0xE8B8: 0x96D5,\r\n    0xE8B9: 0x96F9,\r\n    0xE8BA: 0x9704,\r\n    0xE8BB: 0x9706,\r\n    0xE8BC: 0x9708,\r\n    0xE8BD: 0x9713,\r\n    0xE8BE: 0x970E,\r\n    0xE8BF: 0x9711,\r\n    0xE8C0: 0x970F,\r\n    0xE8C1: 0x9716,\r\n    0xE8C2: 0x9719,\r\n    0xE8C3: 0x9724,\r\n    0xE8C4: 0x972A,\r\n    0xE8C5: 0x9730,\r\n    0xE8C6: 0x9739,\r\n    0xE8C7: 0x973D,\r\n    0xE8C8: 0x973E,\r\n    0xE8C9: 0x9744,\r\n    0xE8CA: 0x9746,\r\n    0xE8CB: 0x9748,\r\n    0xE8CC: 0x9742,\r\n    0xE8CD: 0x9749,\r\n    0xE8CE: 0x975C,\r\n    0xE8CF: 0x9760,\r\n    0xE8D0: 0x9764,\r\n    0xE8D1: 0x9766,\r\n    0xE8D2: 0x9768,\r\n    0xE8D3: 0x52D2,\r\n    0xE8D4: 0x976B,\r\n    0xE8D5: 0x9771,\r\n    0xE8D6: 0x9779,\r\n    0xE8D7: 0x9785,\r\n    0xE8D8: 0x977C,\r\n    0xE8D9: 0x9781,\r\n    0xE8DA: 0x977A,\r\n    0xE8DB: 0x9786,\r\n    0xE8DC: 0x978B,\r\n    0xE8DD: 0x978F,\r\n    0xE8DE: 0x9790,\r\n    0xE8DF: 0x979C,\r\n    0xE8E0: 0x97A8,\r\n    0xE8E1: 0x97A6,\r\n    0xE8E2: 0x97A3,\r\n    0xE8E3: 0x97B3,\r\n    0xE8E4: 0x97B4,\r\n    0xE8E5: 0x97C3,\r\n    0xE8E6: 0x97C6,\r\n    0xE8E7: 0x97C8,\r\n    0xE8E8: 0x97CB,\r\n    0xE8E9: 0x97DC,\r\n    0xE8EA: 0x97ED,\r\n    0xE8EB: 0x9F4F,\r\n    0xE8EC: 0x97F2,\r\n    0xE8ED: 0x7ADF,\r\n    0xE8EE: 0x97F6,\r\n    0xE8EF: 0x97F5,\r\n    0xE8F0: 0x980F,\r\n    0xE8F1: 0x980C,\r\n    0xE8F2: 0x9838,\r\n    0xE8F3: 0x9824,\r\n    0xE8F4: 0x9821,\r\n    0xE8F5: 0x9837,\r\n    0xE8F6: 0x983D,\r\n    0xE8F7: 0x9846,\r\n    0xE8F8: 0x984F,\r\n    0xE8F9: 0x984B,\r\n    0xE8FA: 0x986B,\r\n    0xE8FB: 0x986F,\r\n    0xE8FC: 0x9870,\r\n    0xE940: 0x9871,\r\n    0xE941: 0x9874,\r\n    0xE942: 0x9873,\r\n    0xE943: 0x98AA,\r\n    0xE944: 0x98AF,\r\n    0xE945: 0x98B1,\r\n    0xE946: 0x98B6,\r\n    0xE947: 0x98C4,\r\n    0xE948: 0x98C3,\r\n    0xE949: 0x98C6,\r\n    0xE94A: 0x98E9,\r\n    0xE94B: 0x98EB,\r\n    0xE94C: 0x9903,\r\n    0xE94D: 0x9909,\r\n    0xE94E: 0x9912,\r\n    0xE94F: 0x9914,\r\n    0xE950: 0x9918,\r\n    0xE951: 0x9921,\r\n    0xE952: 0x991D,\r\n    0xE953: 0x991E,\r\n    0xE954: 0x9924,\r\n    0xE955: 0x9920,\r\n    0xE956: 0x992C,\r\n    0xE957: 0x992E,\r\n    0xE958: 0x993D,\r\n    0xE959: 0x993E,\r\n    0xE95A: 0x9942,\r\n    0xE95B: 0x9949,\r\n    0xE95C: 0x9945,\r\n    0xE95D: 0x9950,\r\n    0xE95E: 0x994B,\r\n    0xE95F: 0x9951,\r\n    0xE960: 0x9952,\r\n    0xE961: 0x994C,\r\n    0xE962: 0x9955,\r\n    0xE963: 0x9997,\r\n    0xE964: 0x9998,\r\n    0xE965: 0x99A5,\r\n    0xE966: 0x99AD,\r\n    0xE967: 0x99AE,\r\n    0xE968: 0x99BC,\r\n    0xE969: 0x99DF,\r\n    0xE96A: 0x99DB,\r\n    0xE96B: 0x99DD,\r\n    0xE96C: 0x99D8,\r\n    0xE96D: 0x99D1,\r\n    0xE96E: 0x99ED,\r\n    0xE96F: 0x99EE,\r\n    0xE970: 0x99F1,\r\n    0xE971: 0x99F2,\r\n    0xE972: 0x99FB,\r\n    0xE973: 0x99F8,\r\n    0xE974: 0x9A01,\r\n    0xE975: 0x9A0F,\r\n    0xE976: 0x9A05,\r\n    0xE977: 0x99E2,\r\n    0xE978: 0x9A19,\r\n    0xE979: 0x9A2B,\r\n    0xE97A: 0x9A37,\r\n    0xE97B: 0x9A45,\r\n    0xE97C: 0x9A42,\r\n    0xE97D: 0x9A40,\r\n    0xE97E: 0x9A43,\r\n    0xE980: 0x9A3E,\r\n    0xE981: 0x9A55,\r\n    0xE982: 0x9A4D,\r\n    0xE983: 0x9A5B,\r\n    0xE984: 0x9A57,\r\n    0xE985: 0x9A5F,\r\n    0xE986: 0x9A62,\r\n    0xE987: 0x9A65,\r\n    0xE988: 0x9A64,\r\n    0xE989: 0x9A69,\r\n    0xE98A: 0x9A6B,\r\n    0xE98B: 0x9A6A,\r\n    0xE98C: 0x9AAD,\r\n    0xE98D: 0x9AB0,\r\n    0xE98E: 0x9ABC,\r\n    0xE98F: 0x9AC0,\r\n    0xE990: 0x9ACF,\r\n    0xE991: 0x9AD1,\r\n    0xE992: 0x9AD3,\r\n    0xE993: 0x9AD4,\r\n    0xE994: 0x9ADE,\r\n    0xE995: 0x9ADF,\r\n    0xE996: 0x9AE2,\r\n    0xE997: 0x9AE3,\r\n    0xE998: 0x9AE6,\r\n    0xE999: 0x9AEF,\r\n    0xE99A: 0x9AEB,\r\n    0xE99B: 0x9AEE,\r\n    0xE99C: 0x9AF4,\r\n    0xE99D: 0x9AF1,\r\n    0xE99E: 0x9AF7,\r\n    0xE99F: 0x9AFB,\r\n    0xE9A0: 0x9B06,\r\n    0xE9A1: 0x9B18,\r\n    0xE9A2: 0x9B1A,\r\n    0xE9A3: 0x9B1F,\r\n    0xE9A4: 0x9B22,\r\n    0xE9A5: 0x9B23,\r\n    0xE9A6: 0x9B25,\r\n    0xE9A7: 0x9B27,\r\n    0xE9A8: 0x9B28,\r\n    0xE9A9: 0x9B29,\r\n    0xE9AA: 0x9B2A,\r\n    0xE9AB: 0x9B2E,\r\n    0xE9AC: 0x9B2F,\r\n    0xE9AD: 0x9B32,\r\n    0xE9AE: 0x9B44,\r\n    0xE9AF: 0x9B43,\r\n    0xE9B0: 0x9B4F,\r\n    0xE9B1: 0x9B4D,\r\n    0xE9B2: 0x9B4E,\r\n    0xE9B3: 0x9B51,\r\n    0xE9B4: 0x9B58,\r\n    0xE9B5: 0x9B74,\r\n    0xE9B6: 0x9B93,\r\n    0xE9B7: 0x9B83,\r\n    0xE9B8: 0x9B91,\r\n    0xE9B9: 0x9B96,\r\n    0xE9BA: 0x9B97,\r\n    0xE9BB: 0x9B9F,\r\n    0xE9BC: 0x9BA0,\r\n    0xE9BD: 0x9BA8,\r\n    0xE9BE: 0x9BB4,\r\n    0xE9BF: 0x9BC0,\r\n    0xE9C0: 0x9BCA,\r\n    0xE9C1: 0x9BB9,\r\n    0xE9C2: 0x9BC6,\r\n    0xE9C3: 0x9BCF,\r\n    0xE9C4: 0x9BD1,\r\n    0xE9C5: 0x9BD2,\r\n    0xE9C6: 0x9BE3,\r\n    0xE9C7: 0x9BE2,\r\n    0xE9C8: 0x9BE4,\r\n    0xE9C9: 0x9BD4,\r\n    0xE9CA: 0x9BE1,\r\n    0xE9CB: 0x9C3A,\r\n    0xE9CC: 0x9BF2,\r\n    0xE9CD: 0x9BF1,\r\n    0xE9CE: 0x9BF0,\r\n    0xE9CF: 0x9C15,\r\n    0xE9D0: 0x9C14,\r\n    0xE9D1: 0x9C09,\r\n    0xE9D2: 0x9C13,\r\n    0xE9D3: 0x9C0C,\r\n    0xE9D4: 0x9C06,\r\n    0xE9D5: 0x9C08,\r\n    0xE9D6: 0x9C12,\r\n    0xE9D7: 0x9C0A,\r\n    0xE9D8: 0x9C04,\r\n    0xE9D9: 0x9C2E,\r\n    0xE9DA: 0x9C1B,\r\n    0xE9DB: 0x9C25,\r\n    0xE9DC: 0x9C24,\r\n    0xE9DD: 0x9C21,\r\n    0xE9DE: 0x9C30,\r\n    0xE9DF: 0x9C47,\r\n    0xE9E0: 0x9C32,\r\n    0xE9E1: 0x9C46,\r\n    0xE9E2: 0x9C3E,\r\n    0xE9E3: 0x9C5A,\r\n    0xE9E4: 0x9C60,\r\n    0xE9E5: 0x9C67,\r\n    0xE9E6: 0x9C76,\r\n    0xE9E7: 0x9C78,\r\n    0xE9E8: 0x9CE7,\r\n    0xE9E9: 0x9CEC,\r\n    0xE9EA: 0x9CF0,\r\n    0xE9EB: 0x9D09,\r\n    0xE9EC: 0x9D08,\r\n    0xE9ED: 0x9CEB,\r\n    0xE9EE: 0x9D03,\r\n    0xE9EF: 0x9D06,\r\n    0xE9F0: 0x9D2A,\r\n    0xE9F1: 0x9D26,\r\n    0xE9F2: 0x9DAF,\r\n    0xE9F3: 0x9D23,\r\n    0xE9F4: 0x9D1F,\r\n    0xE9F5: 0x9D44,\r\n    0xE9F6: 0x9D15,\r\n    0xE9F7: 0x9D12,\r\n    0xE9F8: 0x9D41,\r\n    0xE9F9: 0x9D3F,\r\n    0xE9FA: 0x9D3E,\r\n    0xE9FB: 0x9D46,\r\n    0xE9FC: 0x9D48,\r\n    0xEA40: 0x9D5D,\r\n    0xEA41: 0x9D5E,\r\n    0xEA42: 0x9D64,\r\n    0xEA43: 0x9D51,\r\n    0xEA44: 0x9D50,\r\n    0xEA45: 0x9D59,\r\n    0xEA46: 0x9D72,\r\n    0xEA47: 0x9D89,\r\n    0xEA48: 0x9D87,\r\n    0xEA49: 0x9DAB,\r\n    0xEA4A: 0x9D6F,\r\n    0xEA4B: 0x9D7A,\r\n    0xEA4C: 0x9D9A,\r\n    0xEA4D: 0x9DA4,\r\n    0xEA4E: 0x9DA9,\r\n    0xEA4F: 0x9DB2,\r\n    0xEA50: 0x9DC4,\r\n    0xEA51: 0x9DC1,\r\n    0xEA52: 0x9DBB,\r\n    0xEA53: 0x9DB8,\r\n    0xEA54: 0x9DBA,\r\n    0xEA55: 0x9DC6,\r\n    0xEA56: 0x9DCF,\r\n    0xEA57: 0x9DC2,\r\n    0xEA58: 0x9DD9,\r\n    0xEA59: 0x9DD3,\r\n    0xEA5A: 0x9DF8,\r\n    0xEA5B: 0x9DE6,\r\n    0xEA5C: 0x9DED,\r\n    0xEA5D: 0x9DEF,\r\n    0xEA5E: 0x9DFD,\r\n    0xEA5F: 0x9E1A,\r\n    0xEA60: 0x9E1B,\r\n    0xEA61: 0x9E1E,\r\n    0xEA62: 0x9E75,\r\n    0xEA63: 0x9E79,\r\n    0xEA64: 0x9E7D,\r\n    0xEA65: 0x9E81,\r\n    0xEA66: 0x9E88,\r\n    0xEA67: 0x9E8B,\r\n    0xEA68: 0x9E8C,\r\n    0xEA69: 0x9E92,\r\n    0xEA6A: 0x9E95,\r\n    0xEA6B: 0x9E91,\r\n    0xEA6C: 0x9E9D,\r\n    0xEA6D: 0x9EA5,\r\n    0xEA6E: 0x9EA9,\r\n    0xEA6F: 0x9EB8,\r\n    0xEA70: 0x9EAA,\r\n    0xEA71: 0x9EAD,\r\n    0xEA72: 0x9761,\r\n    0xEA73: 0x9ECC,\r\n    0xEA74: 0x9ECE,\r\n    0xEA75: 0x9ECF,\r\n    0xEA76: 0x9ED0,\r\n    0xEA77: 0x9ED4,\r\n    0xEA78: 0x9EDC,\r\n    0xEA79: 0x9EDE,\r\n    0xEA7A: 0x9EDD,\r\n    0xEA7B: 0x9EE0,\r\n    0xEA7C: 0x9EE5,\r\n    0xEA7D: 0x9EE8,\r\n    0xEA7E: 0x9EEF,\r\n    0xEA80: 0x9EF4,\r\n    0xEA81: 0x9EF6,\r\n    0xEA82: 0x9EF7,\r\n    0xEA83: 0x9EF9,\r\n    0xEA84: 0x9EFB,\r\n    0xEA85: 0x9EFC,\r\n    0xEA86: 0x9EFD,\r\n    0xEA87: 0x9F07,\r\n    0xEA88: 0x9F08,\r\n    0xEA89: 0x76B7,\r\n    0xEA8A: 0x9F15,\r\n    0xEA8B: 0x9F21,\r\n    0xEA8C: 0x9F2C,\r\n    0xEA8D: 0x9F3E,\r\n    0xEA8E: 0x9F4A,\r\n    0xEA8F: 0x9F52,\r\n    0xEA90: 0x9F54,\r\n    0xEA91: 0x9F63,\r\n    0xEA92: 0x9F5F,\r\n    0xEA93: 0x9F60,\r\n    0xEA94: 0x9F61,\r\n    0xEA95: 0x9F66,\r\n    0xEA96: 0x9F67,\r\n    0xEA97: 0x9F6C,\r\n    0xEA98: 0x9F6A,\r\n    0xEA99: 0x9F77,\r\n    0xEA9A: 0x9F72,\r\n    0xEA9B: 0x9F76,\r\n    0xEA9C: 0x9F95,\r\n    0xEA9D: 0x9F9C,\r\n    0xEA9E: 0x9FA0,\r\n    0xEA9F: 0x582F,\r\n    0xEAA0: 0x69C7,\r\n    0xEAA1: 0x9059,\r\n    0xEAA2: 0x7464,\r\n    0xEAA3: 0x51DC,\r\n    0xEAA4: 0x7199,\r\n};\r\n\r\n\r\n/***/ }),\r\n/* 9 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GenericGF_1 = __webpack_require__(1);\r\nvar GenericGFPoly_1 = __webpack_require__(2);\r\nfunction runEuclideanAlgorithm(field, a, b, R) {\r\n    var _a;\r\n    // Assume a's degree is >= b's\r\n    if (a.degree() < b.degree()) {\r\n        _a = [b, a], a = _a[0], b = _a[1];\r\n    }\r\n    var rLast = a;\r\n    var r = b;\r\n    var tLast = field.zero;\r\n    var t = field.one;\r\n    // Run Euclidean algorithm until r's degree is less than R/2\r\n    while (r.degree() >= R / 2) {\r\n        var rLastLast = rLast;\r\n        var tLastLast = tLast;\r\n        rLast = r;\r\n        tLast = t;\r\n        // Divide rLastLast by rLast, with quotient in q and remainder in r\r\n        if (rLast.isZero()) {\r\n            // Euclidean algorithm already terminated?\r\n            return null;\r\n        }\r\n        r = rLastLast;\r\n        var q = field.zero;\r\n        var denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\r\n        var dltInverse = field.inverse(denominatorLeadingTerm);\r\n        while (r.degree() >= rLast.degree() && !r.isZero()) {\r\n            var degreeDiff = r.degree() - rLast.degree();\r\n            var scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\r\n            q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\r\n            r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\r\n        }\r\n        t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\r\n        if (r.degree() >= rLast.degree()) {\r\n            return null;\r\n        }\r\n    }\r\n    var sigmaTildeAtZero = t.getCoefficient(0);\r\n    if (sigmaTildeAtZero === 0) {\r\n        return null;\r\n    }\r\n    var inverse = field.inverse(sigmaTildeAtZero);\r\n    return [t.multiply(inverse), r.multiply(inverse)];\r\n}\r\nfunction findErrorLocations(field, errorLocator) {\r\n    // This is a direct application of Chien's search\r\n    var numErrors = errorLocator.degree();\r\n    if (numErrors === 1) {\r\n        return [errorLocator.getCoefficient(1)];\r\n    }\r\n    var result = new Array(numErrors);\r\n    var errorCount = 0;\r\n    for (var i = 1; i < field.size && errorCount < numErrors; i++) {\r\n        if (errorLocator.evaluateAt(i) === 0) {\r\n            result[errorCount] = field.inverse(i);\r\n            errorCount++;\r\n        }\r\n    }\r\n    if (errorCount !== numErrors) {\r\n        return null;\r\n    }\r\n    return result;\r\n}\r\nfunction findErrorMagnitudes(field, errorEvaluator, errorLocations) {\r\n    // This is directly applying Forney's Formula\r\n    var s = errorLocations.length;\r\n    var result = new Array(s);\r\n    for (var i = 0; i < s; i++) {\r\n        var xiInverse = field.inverse(errorLocations[i]);\r\n        var denominator = 1;\r\n        for (var j = 0; j < s; j++) {\r\n            if (i !== j) {\r\n                denominator = field.multiply(denominator, GenericGF_1.addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\r\n            }\r\n        }\r\n        result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\r\n        if (field.generatorBase !== 0) {\r\n            result[i] = field.multiply(result[i], xiInverse);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction decode(bytes, twoS) {\r\n    var outputBytes = new Uint8ClampedArray(bytes.length);\r\n    outputBytes.set(bytes);\r\n    var field = new GenericGF_1.default(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\r\n    var poly = new GenericGFPoly_1.default(field, outputBytes);\r\n    var syndromeCoefficients = new Uint8ClampedArray(twoS);\r\n    var error = false;\r\n    for (var s = 0; s < twoS; s++) {\r\n        var evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\r\n        syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\r\n        if (evaluation !== 0) {\r\n            error = true;\r\n        }\r\n    }\r\n    if (!error) {\r\n        return outputBytes;\r\n    }\r\n    var syndrome = new GenericGFPoly_1.default(field, syndromeCoefficients);\r\n    var sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\r\n    if (sigmaOmega === null) {\r\n        return null;\r\n    }\r\n    var errorLocations = findErrorLocations(field, sigmaOmega[0]);\r\n    if (errorLocations == null) {\r\n        return null;\r\n    }\r\n    var errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\r\n    for (var i = 0; i < errorLocations.length; i++) {\r\n        var position = outputBytes.length - 1 - field.log(errorLocations[i]);\r\n        if (position < 0) {\r\n            return null;\r\n        }\r\n        outputBytes[position] = GenericGF_1.addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\r\n    }\r\n    return outputBytes;\r\n}\r\nexports.decode = decode;\r\n\r\n\r\n/***/ }),\r\n/* 10 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSIONS = [\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 1,\r\n        alignmentPatternCenters: [],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 7,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 10,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 13,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 17,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 2,\r\n        alignmentPatternCenters: [6, 18],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 10,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 16,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 3,\r\n        alignmentPatternCenters: [6, 22],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 15,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 4,\r\n        alignmentPatternCenters: [6, 26],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 20,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 16,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 5,\r\n        alignmentPatternCenters: [6, 30],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 11 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 12 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: null,\r\n        versionNumber: 6,\r\n        alignmentPatternCenters: [6, 34],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 16,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x07C94,\r\n        versionNumber: 7,\r\n        alignmentPatternCenters: [6, 22, 38],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 20,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 14 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x085BC,\r\n        versionNumber: 8,\r\n        alignmentPatternCenters: [6, 24, 42],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 38 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 39 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 18 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 19 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 14 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x09A99,\r\n        versionNumber: 9,\r\n        alignmentPatternCenters: [6, 26, 46],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 36 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 20,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0A4D3,\r\n        versionNumber: 10,\r\n        alignmentPatternCenters: [6, 28, 50],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 18,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 68 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 69 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 43 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 44 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 19 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0BBF6,\r\n        versionNumber: 11,\r\n        alignmentPatternCenters: [6, 30, 54],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 20,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 50 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 51 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 23 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 12 },\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 13 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0C762,\r\n        versionNumber: 12,\r\n        alignmentPatternCenters: [6, 32, 58],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 92 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 93 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 36 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 20 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 21 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 14 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0D847,\r\n        versionNumber: 13,\r\n        alignmentPatternCenters: [6, 34, 62],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 37 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 38 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 20 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 21 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 12, dataCodewordsPerBlock: 11 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0E60D,\r\n        versionNumber: 14,\r\n        alignmentPatternCenters: [6, 26, 46, 66],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 115 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 40 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 20,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 13 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x0F928,\r\n        versionNumber: 15,\r\n        alignmentPatternCenters: [6, 26, 48, 70],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 22,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 87 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 88 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 42 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 13 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x10B78,\r\n        versionNumber: 16,\r\n        alignmentPatternCenters: [6, 26, 50, 74],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 98 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 99 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 45 },\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [\r\n                    { numBlocks: 15, dataCodewordsPerBlock: 19 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1145D,\r\n        versionNumber: 17,\r\n        alignmentPatternCenters: [6, 30, 54, 78],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 107 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 22 },\r\n                    { numBlocks: 15, dataCodewordsPerBlock: 23 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 15 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x12A17,\r\n        versionNumber: 18,\r\n        alignmentPatternCenters: [6, 30, 56, 82],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 120 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 121 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 9, dataCodewordsPerBlock: 43 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 44 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x13532,\r\n        versionNumber: 19,\r\n        alignmentPatternCenters: [6, 30, 58, 86],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 113 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 114 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 44 },\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 45 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 21 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 9, dataCodewordsPerBlock: 13 },\r\n                    { numBlocks: 16, dataCodewordsPerBlock: 14 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x149A6,\r\n        versionNumber: 20,\r\n        alignmentPatternCenters: [6, 34, 62, 90],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 107 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 41 },\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 42 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 15, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x15683,\r\n        versionNumber: 21,\r\n        alignmentPatternCenters: [6, 28, 50, 72, 94],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 116 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 117 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x168C9,\r\n        versionNumber: 22,\r\n        alignmentPatternCenters: [6, 26, 50, 74, 98],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 111 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 112 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 24,\r\n                ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x177EC,\r\n        versionNumber: 23,\r\n        alignmentPatternCenters: [6, 30, 54, 74, 102],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 121 },\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 122 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 16, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x18EC4,\r\n        versionNumber: 24,\r\n        alignmentPatternCenters: [6, 28, 54, 80, 106],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 117 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 45 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 30, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x191E1,\r\n        versionNumber: 25,\r\n        alignmentPatternCenters: [6, 32, 58, 84, 110],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 26,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 106 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 107 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1AFAB,\r\n        versionNumber: 26,\r\n        alignmentPatternCenters: [6, 30, 58, 86, 114],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 114 },\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 115 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 28, dataCodewordsPerBlock: 22 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 33, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1B08E,\r\n        versionNumber: 27,\r\n        alignmentPatternCenters: [6, 34, 62, 90, 118],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 122 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 22, dataCodewordsPerBlock: 45 },\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 8, dataCodewordsPerBlock: 23 },\r\n                    { numBlocks: 26, dataCodewordsPerBlock: 24 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 12, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1CC1A,\r\n        versionNumber: 28,\r\n        alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 117 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 118 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 45 },\r\n                    { numBlocks: 23, dataCodewordsPerBlock: 46 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 31, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 31, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1D33F,\r\n        versionNumber: 29,\r\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 116 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 117 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 21, dataCodewordsPerBlock: 45 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 46 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\r\n                    { numBlocks: 37, dataCodewordsPerBlock: 24 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 26, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1ED75,\r\n        versionNumber: 30,\r\n        alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 5, dataCodewordsPerBlock: 115 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 116 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 25, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 25, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x1F250,\r\n        versionNumber: 31,\r\n        alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\r\n                    { numBlocks: 3, dataCodewordsPerBlock: 116 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 29, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 42, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x209D5,\r\n        versionNumber: 32,\r\n        alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 35, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 35, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x216F0,\r\n        versionNumber: 33,\r\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 115 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 21, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 29, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x228BA,\r\n        versionNumber: 34,\r\n        alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 116 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 44, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 59, dataCodewordsPerBlock: 16 },\r\n                    { numBlocks: 1, dataCodewordsPerBlock: 17 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x2379F,\r\n        versionNumber: 35,\r\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 12, dataCodewordsPerBlock: 121 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 122 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 12, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 26, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 39, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 41, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x24B0B,\r\n        versionNumber: 36,\r\n        alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 121 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 122 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 34, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 46, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 64, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x2542E,\r\n        versionNumber: 37,\r\n        alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 17, dataCodewordsPerBlock: 122 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 29, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 49, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 24, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x26A64,\r\n        versionNumber: 38,\r\n        alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 122 },\r\n                    { numBlocks: 18, dataCodewordsPerBlock: 123 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 13, dataCodewordsPerBlock: 46 },\r\n                    { numBlocks: 32, dataCodewordsPerBlock: 47 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 48, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 42, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 32, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x27541,\r\n        versionNumber: 39,\r\n        alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 20, dataCodewordsPerBlock: 117 },\r\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 40, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 7, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 43, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 10, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 67, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        infoBits: 0x28C69,\r\n        versionNumber: 40,\r\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\r\n        errorCorrectionLevels: [\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 19, dataCodewordsPerBlock: 118 },\r\n                    { numBlocks: 6, dataCodewordsPerBlock: 119 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 28,\r\n                ecBlocks: [\r\n                    { numBlocks: 18, dataCodewordsPerBlock: 47 },\r\n                    { numBlocks: 31, dataCodewordsPerBlock: 48 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 34, dataCodewordsPerBlock: 24 },\r\n                    { numBlocks: 34, dataCodewordsPerBlock: 25 },\r\n                ],\r\n            },\r\n            {\r\n                ecCodewordsPerBlock: 30,\r\n                ecBlocks: [\r\n                    { numBlocks: 20, dataCodewordsPerBlock: 15 },\r\n                    { numBlocks: 61, dataCodewordsPerBlock: 16 },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n\r\n/***/ }),\r\n/* 11 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitMatrix_1 = __webpack_require__(0);\r\nfunction squareToQuadrilateral(p1, p2, p3, p4) {\r\n    var dx3 = p1.x - p2.x + p3.x - p4.x;\r\n    var dy3 = p1.y - p2.y + p3.y - p4.y;\r\n    if (dx3 === 0 && dy3 === 0) { // Affine\r\n        return {\r\n            a11: p2.x - p1.x,\r\n            a12: p2.y - p1.y,\r\n            a13: 0,\r\n            a21: p3.x - p2.x,\r\n            a22: p3.y - p2.y,\r\n            a23: 0,\r\n            a31: p1.x,\r\n            a32: p1.y,\r\n            a33: 1,\r\n        };\r\n    }\r\n    else {\r\n        var dx1 = p2.x - p3.x;\r\n        var dx2 = p4.x - p3.x;\r\n        var dy1 = p2.y - p3.y;\r\n        var dy2 = p4.y - p3.y;\r\n        var denominator = dx1 * dy2 - dx2 * dy1;\r\n        var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\r\n        var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\r\n        return {\r\n            a11: p2.x - p1.x + a13 * p2.x,\r\n            a12: p2.y - p1.y + a13 * p2.y,\r\n            a13: a13,\r\n            a21: p4.x - p1.x + a23 * p4.x,\r\n            a22: p4.y - p1.y + a23 * p4.y,\r\n            a23: a23,\r\n            a31: p1.x,\r\n            a32: p1.y,\r\n            a33: 1,\r\n        };\r\n    }\r\n}\r\nfunction quadrilateralToSquare(p1, p2, p3, p4) {\r\n    // Here, the adjoint serves as the inverse:\r\n    var sToQ = squareToQuadrilateral(p1, p2, p3, p4);\r\n    return {\r\n        a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\r\n        a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\r\n        a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\r\n        a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\r\n        a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\r\n        a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\r\n        a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\r\n        a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\r\n        a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\r\n    };\r\n}\r\nfunction times(a, b) {\r\n    return {\r\n        a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\r\n        a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\r\n        a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\r\n        a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\r\n        a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\r\n        a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\r\n        a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\r\n        a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\r\n        a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\r\n    };\r\n}\r\nfunction extract(image, location) {\r\n    var qToS = quadrilateralToSquare({ x: 3.5, y: 3.5 }, { x: location.dimension - 3.5, y: 3.5 }, { x: location.dimension - 6.5, y: location.dimension - 6.5 }, { x: 3.5, y: location.dimension - 3.5 });\r\n    var sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\r\n    var transform = times(sToQ, qToS);\r\n    var matrix = BitMatrix_1.BitMatrix.createEmpty(location.dimension, location.dimension);\r\n    var mappingFunction = function (x, y) {\r\n        var denominator = transform.a13 * x + transform.a23 * y + transform.a33;\r\n        return {\r\n            x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\r\n            y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\r\n        };\r\n    };\r\n    for (var y = 0; y < location.dimension; y++) {\r\n        for (var x = 0; x < location.dimension; x++) {\r\n            var xValue = x + 0.5;\r\n            var yValue = y + 0.5;\r\n            var sourcePixel = mappingFunction(xValue, yValue);\r\n            matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\r\n        }\r\n    }\r\n    return {\r\n        matrix: matrix,\r\n        mappingFunction: mappingFunction,\r\n    };\r\n}\r\nexports.extract = extract;\r\n\r\n\r\n/***/ }),\r\n/* 12 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MAX_FINDERPATTERNS_TO_SEARCH = 4;\r\nvar MIN_QUAD_RATIO = 0.5;\r\nvar MAX_QUAD_RATIO = 1.5;\r\nvar distance = function (a, b) { return Math.sqrt(Math.pow((b.x - a.x), 2) + Math.pow((b.y - a.y), 2)); };\r\nfunction sum(values) {\r\n    return values.reduce(function (a, b) { return a + b; });\r\n}\r\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\r\nfunction reorderFinderPatterns(pattern1, pattern2, pattern3) {\r\n    var _a, _b, _c, _d;\r\n    // Find distances between pattern centers\r\n    var oneTwoDistance = distance(pattern1, pattern2);\r\n    var twoThreeDistance = distance(pattern2, pattern3);\r\n    var oneThreeDistance = distance(pattern1, pattern3);\r\n    var bottomLeft;\r\n    var topLeft;\r\n    var topRight;\r\n    // Assume one closest to other two is B; A and C will just be guesses at first\r\n    if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\r\n        _a = [pattern2, pattern1, pattern3], bottomLeft = _a[0], topLeft = _a[1], topRight = _a[2];\r\n    }\r\n    else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\r\n        _b = [pattern1, pattern2, pattern3], bottomLeft = _b[0], topLeft = _b[1], topRight = _b[2];\r\n    }\r\n    else {\r\n        _c = [pattern1, pattern3, pattern2], bottomLeft = _c[0], topLeft = _c[1], topRight = _c[2];\r\n    }\r\n    // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\r\n    // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\r\n    // we've got it flipped around and should swap topRight and bottomLeft.\r\n    if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\r\n        _d = [topRight, bottomLeft], bottomLeft = _d[0], topRight = _d[1];\r\n    }\r\n    return { bottomLeft: bottomLeft, topLeft: topLeft, topRight: topRight };\r\n}\r\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\r\nfunction computeDimension(topLeft, topRight, bottomLeft, matrix) {\r\n    var moduleSize = (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\r\n        sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\r\n        sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\r\n        sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) / 4;\r\n    if (moduleSize < 1) {\r\n        throw new Error(\"Invalid module size\");\r\n    }\r\n    var topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\r\n    var sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\r\n    var dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\r\n    switch (dimension % 4) {\r\n        case 0:\r\n            dimension++;\r\n            break;\r\n        case 2:\r\n            dimension--;\r\n            break;\r\n    }\r\n    return { dimension: dimension, moduleSize: moduleSize };\r\n}\r\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\r\n// Returns an array of elements, representing the pixel size of the black white run.\r\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\r\nfunction countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\r\n    var switchPoints = [{ x: Math.floor(origin.x), y: Math.floor(origin.y) }];\r\n    var steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\r\n    var fromX;\r\n    var fromY;\r\n    var toX;\r\n    var toY;\r\n    if (steep) {\r\n        fromX = Math.floor(origin.y);\r\n        fromY = Math.floor(origin.x);\r\n        toX = Math.floor(end.y);\r\n        toY = Math.floor(end.x);\r\n    }\r\n    else {\r\n        fromX = Math.floor(origin.x);\r\n        fromY = Math.floor(origin.y);\r\n        toX = Math.floor(end.x);\r\n        toY = Math.floor(end.y);\r\n    }\r\n    var dx = Math.abs(toX - fromX);\r\n    var dy = Math.abs(toY - fromY);\r\n    var error = Math.floor(-dx / 2);\r\n    var xStep = fromX < toX ? 1 : -1;\r\n    var yStep = fromY < toY ? 1 : -1;\r\n    var currentPixel = true;\r\n    // Loop up until x == toX, but not beyond\r\n    for (var x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\r\n        // Does current pixel mean we have moved white to black or vice versa?\r\n        // Scanning black in state 0,2 and white in state 1, so if we find the wrong\r\n        // color, advance to next state or end if we are in state 2 already\r\n        var realX = steep ? y : x;\r\n        var realY = steep ? x : y;\r\n        if (matrix.get(realX, realY) !== currentPixel) {\r\n            currentPixel = !currentPixel;\r\n            switchPoints.push({ x: realX, y: realY });\r\n            if (switchPoints.length === length + 1) {\r\n                break;\r\n            }\r\n        }\r\n        error += dy;\r\n        if (error > 0) {\r\n            if (y === toY) {\r\n                break;\r\n            }\r\n            y += yStep;\r\n            error -= dx;\r\n        }\r\n    }\r\n    var distances = [];\r\n    for (var i = 0; i < length; i++) {\r\n        if (switchPoints[i] && switchPoints[i + 1]) {\r\n            distances.push(distance(switchPoints[i], switchPoints[i + 1]));\r\n        }\r\n        else {\r\n            distances.push(0);\r\n        }\r\n    }\r\n    return distances;\r\n}\r\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\r\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\r\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\r\nfunction countBlackWhiteRun(origin, end, matrix, length) {\r\n    var _a;\r\n    var rise = end.y - origin.y;\r\n    var run = end.x - origin.x;\r\n    var towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\r\n    var awayFromEnd = countBlackWhiteRunTowardsPoint(origin, { x: origin.x - run, y: origin.y - rise }, matrix, Math.ceil(length / 2));\r\n    var middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\r\n    return (_a = awayFromEnd.concat(middleValue)).concat.apply(_a, towardsEnd);\r\n}\r\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\r\n// that is the amount the run diverges from the expected ratio\r\nfunction scoreBlackWhiteRun(sequence, ratios) {\r\n    var averageSize = sum(sequence) / sum(ratios);\r\n    var error = 0;\r\n    ratios.forEach(function (ratio, i) {\r\n        error += Math.pow((sequence[i] - ratio * averageSize), 2);\r\n    });\r\n    return { averageSize: averageSize, error: error };\r\n}\r\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\r\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\r\n// against that.\r\nfunction scorePattern(point, ratios, matrix) {\r\n    try {\r\n        var horizontalRun = countBlackWhiteRun(point, { x: -1, y: point.y }, matrix, ratios.length);\r\n        var verticalRun = countBlackWhiteRun(point, { x: point.x, y: -1 }, matrix, ratios.length);\r\n        var topLeftPoint = {\r\n            x: Math.max(0, point.x - point.y) - 1,\r\n            y: Math.max(0, point.y - point.x) - 1,\r\n        };\r\n        var topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\r\n        var bottomLeftPoint = {\r\n            x: Math.min(matrix.width, point.x + point.y) + 1,\r\n            y: Math.min(matrix.height, point.y + point.x) + 1,\r\n        };\r\n        var bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\r\n        var horzError = scoreBlackWhiteRun(horizontalRun, ratios);\r\n        var vertError = scoreBlackWhiteRun(verticalRun, ratios);\r\n        var diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\r\n        var diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\r\n        var ratioError = Math.sqrt(horzError.error * horzError.error +\r\n            vertError.error * vertError.error +\r\n            diagDownError.error * diagDownError.error +\r\n            diagUpError.error * diagUpError.error);\r\n        var avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\r\n        var sizeError = (Math.pow((horzError.averageSize - avgSize), 2) +\r\n            Math.pow((vertError.averageSize - avgSize), 2) +\r\n            Math.pow((diagDownError.averageSize - avgSize), 2) +\r\n            Math.pow((diagUpError.averageSize - avgSize), 2)) / avgSize;\r\n        return ratioError + sizeError;\r\n    }\r\n    catch (_a) {\r\n        return Infinity;\r\n    }\r\n}\r\nfunction recenterLocation(matrix, p) {\r\n    var leftX = Math.round(p.x);\r\n    while (matrix.get(leftX, Math.round(p.y))) {\r\n        leftX--;\r\n    }\r\n    var rightX = Math.round(p.x);\r\n    while (matrix.get(rightX, Math.round(p.y))) {\r\n        rightX++;\r\n    }\r\n    var x = (leftX + rightX) / 2;\r\n    var topY = Math.round(p.y);\r\n    while (matrix.get(Math.round(x), topY)) {\r\n        topY--;\r\n    }\r\n    var bottomY = Math.round(p.y);\r\n    while (matrix.get(Math.round(x), bottomY)) {\r\n        bottomY++;\r\n    }\r\n    var y = (topY + bottomY) / 2;\r\n    return { x: x, y: y };\r\n}\r\nfunction locate(matrix) {\r\n    var finderPatternQuads = [];\r\n    var activeFinderPatternQuads = [];\r\n    var alignmentPatternQuads = [];\r\n    var activeAlignmentPatternQuads = [];\r\n    var _loop_1 = function (y) {\r\n        var length_1 = 0;\r\n        var lastBit = false;\r\n        var scans = [0, 0, 0, 0, 0];\r\n        var _loop_2 = function (x) {\r\n            var v = matrix.get(x, y);\r\n            if (v === lastBit) {\r\n                length_1++;\r\n            }\r\n            else {\r\n                scans = [scans[1], scans[2], scans[3], scans[4], length_1];\r\n                length_1 = 1;\r\n                lastBit = v;\r\n                // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\r\n                var averageFinderPatternBlocksize = sum(scans) / 7;\r\n                var validFinderPattern = Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\r\n                    Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\r\n                    Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\r\n                    Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\r\n                    Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\r\n                    !v; // And make sure the current pixel is white since finder patterns are bordered in white\r\n                // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\r\n                var averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\r\n                var validAlignmentPattern = Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\r\n                    Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\r\n                    Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\r\n                    v; // Is the current pixel black since alignment patterns are bordered in black\r\n                if (validFinderPattern) {\r\n                    // Compute the start and end x values of the large center black square\r\n                    var endX_1 = x - scans[3] - scans[4];\r\n                    var startX_1 = endX_1 - scans[2];\r\n                    var line = { startX: startX_1, endX: endX_1, y: y };\r\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\r\n                    // that line as the starting point.\r\n                    var matchingQuads = activeFinderPatternQuads.filter(function (q) {\r\n                        return (startX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\r\n                            (endX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\r\n                            (startX_1 <= q.bottom.startX && endX_1 >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\r\n                                (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO));\r\n                    });\r\n                    if (matchingQuads.length > 0) {\r\n                        matchingQuads[0].bottom = line;\r\n                    }\r\n                    else {\r\n                        activeFinderPatternQuads.push({ top: line, bottom: line });\r\n                    }\r\n                }\r\n                if (validAlignmentPattern) {\r\n                    // Compute the start and end x values of the center black square\r\n                    var endX_2 = x - scans[4];\r\n                    var startX_2 = endX_2 - scans[3];\r\n                    var line = { startX: startX_2, y: y, endX: endX_2 };\r\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\r\n                    // that line as the starting point.\r\n                    var matchingQuads = activeAlignmentPatternQuads.filter(function (q) {\r\n                        return (startX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\r\n                            (endX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\r\n                            (startX_2 <= q.bottom.startX && endX_2 >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\r\n                                (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO));\r\n                    });\r\n                    if (matchingQuads.length > 0) {\r\n                        matchingQuads[0].bottom = line;\r\n                    }\r\n                    else {\r\n                        activeAlignmentPatternQuads.push({ top: line, bottom: line });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        for (var x = -1; x <= matrix.width; x++) {\r\n            _loop_2(x);\r\n        }\r\n        finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) { return q.bottom.y !== y && q.bottom.y - q.top.y >= 2; }));\r\n        activeFinderPatternQuads = activeFinderPatternQuads.filter(function (q) { return q.bottom.y === y; });\r\n        alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads.filter(function (q) { return q.bottom.y !== y; }));\r\n        activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(function (q) { return q.bottom.y === y; });\r\n    };\r\n    for (var y = 0; y <= matrix.height; y++) {\r\n        _loop_1(y);\r\n    }\r\n    finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) { return q.bottom.y - q.top.y >= 2; }));\r\n    alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads);\r\n    var finderPatternGroups = finderPatternQuads\r\n        .filter(function (q) { return q.bottom.y - q.top.y >= 2; }) // All quads must be at least 2px tall since the center square is larger than a block\r\n        .map(function (q) {\r\n        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\r\n        var y = (q.top.y + q.bottom.y + 1) / 2;\r\n        if (!matrix.get(Math.round(x), Math.round(y))) {\r\n            return;\r\n        }\r\n        var lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\r\n        var size = sum(lengths) / lengths.length;\r\n        var score = scorePattern({ x: Math.round(x), y: Math.round(y) }, [1, 1, 3, 1, 1], matrix);\r\n        return { score: score, x: x, y: y, size: size };\r\n    })\r\n        .filter(function (q) { return !!q; }) // Filter out any rejected quads from above\r\n        .sort(function (a, b) { return a.score - b.score; })\r\n        // Now take the top finder pattern options and try to find 2 other options with a similar size.\r\n        .map(function (point, i, finderPatterns) {\r\n        if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\r\n            return null;\r\n        }\r\n        var otherPoints = finderPatterns\r\n            .filter(function (p, ii) { return i !== ii; })\r\n            .map(function (p) { return ({ x: p.x, y: p.y, score: p.score + (Math.pow((p.size - point.size), 2)) / point.size, size: p.size }); })\r\n            .sort(function (a, b) { return a.score - b.score; });\r\n        if (otherPoints.length < 2) {\r\n            return null;\r\n        }\r\n        var score = point.score + otherPoints[0].score + otherPoints[1].score;\r\n        return { points: [point].concat(otherPoints.slice(0, 2)), score: score };\r\n    })\r\n        .filter(function (q) { return !!q; }) // Filter out any rejected finder patterns from above\r\n        .sort(function (a, b) { return a.score - b.score; });\r\n    if (finderPatternGroups.length === 0) {\r\n        return null;\r\n    }\r\n    var _a = reorderFinderPatterns(finderPatternGroups[0].points[0], finderPatternGroups[0].points[1], finderPatternGroups[0].points[2]), topRight = _a.topRight, topLeft = _a.topLeft, bottomLeft = _a.bottomLeft;\r\n    var alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\r\n    var result = [];\r\n    if (alignment) {\r\n        result.push({\r\n            alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\r\n            bottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\r\n            dimension: alignment.dimension,\r\n            topLeft: { x: topLeft.x, y: topLeft.y },\r\n            topRight: { x: topRight.x, y: topRight.y },\r\n        });\r\n    }\r\n    // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\r\n    // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\r\n    // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\r\n    // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\r\n    // attempts at decoding harder images.\r\n    var midTopRight = recenterLocation(matrix, topRight);\r\n    var midTopLeft = recenterLocation(matrix, topLeft);\r\n    var midBottomLeft = recenterLocation(matrix, bottomLeft);\r\n    var centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\r\n    if (centeredAlignment) {\r\n        result.push({\r\n            alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\r\n            bottomLeft: { x: midBottomLeft.x, y: midBottomLeft.y },\r\n            topLeft: { x: midTopLeft.x, y: midTopLeft.y },\r\n            topRight: { x: midTopRight.x, y: midTopRight.y },\r\n            dimension: centeredAlignment.dimension,\r\n        });\r\n    }\r\n    if (result.length === 0) {\r\n        return null;\r\n    }\r\n    return result;\r\n}\r\nexports.locate = locate;\r\nfunction findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft) {\r\n    var _a;\r\n    // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\r\n    // We'll use these to help find the alignment pattern but also later when we do the extraction.\r\n    var dimension;\r\n    var moduleSize;\r\n    try {\r\n        (_a = computeDimension(topLeft, topRight, bottomLeft, matrix), dimension = _a.dimension, moduleSize = _a.moduleSize);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    // Now find the alignment pattern\r\n    var bottomRightFinderPattern = {\r\n        x: topRight.x - topLeft.x + bottomLeft.x,\r\n        y: topRight.y - topLeft.y + bottomLeft.y,\r\n    };\r\n    var modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\r\n    var correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\r\n    var expectedAlignmentPattern = {\r\n        x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\r\n        y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\r\n    };\r\n    var alignmentPatterns = alignmentPatternQuads\r\n        .map(function (q) {\r\n        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\r\n        var y = (q.top.y + q.bottom.y + 1) / 2;\r\n        if (!matrix.get(Math.floor(x), Math.floor(y))) {\r\n            return;\r\n        }\r\n        var lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, (q.bottom.y - q.top.y + 1)];\r\n        var size = sum(lengths) / lengths.length;\r\n        var sizeScore = scorePattern({ x: Math.floor(x), y: Math.floor(y) }, [1, 1, 1], matrix);\r\n        var score = sizeScore + distance({ x: x, y: y }, expectedAlignmentPattern);\r\n        return { x: x, y: y, score: score };\r\n    })\r\n        .filter(function (v) { return !!v; })\r\n        .sort(function (a, b) { return a.score - b.score; });\r\n    // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\r\n    // so we can only use our best guess.\r\n    var alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\r\n    return { alignmentPattern: alignmentPattern, dimension: dimension };\r\n}\r\n\r\n\r\n/***/ })\r\n/******/ ])[\"default\"];\r\n});"],"mappings":"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AAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACdd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,MAAM;MACd,MAAM,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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}