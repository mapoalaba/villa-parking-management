{"ast":null,"code":"var _jsxFileName = \"/Users/mac/project/villa-parking-management/frontend/src/components/DraggableResizableItem.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { Resizable } from 're-resizable';\nimport { ItemTypes } from './ItemTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableResizableItem = ({\n  id,\n  type,\n  left,\n  top,\n  width,\n  height,\n  moveSpace,\n  resizeSpace,\n  deleteSpace\n}) => {\n  _s();\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes[type.toUpperCase()],\n    hover(item, monitor) {\n      if (!ref.current) return;\n      const dragId = item.id;\n      const hoverId = id;\n      if (dragId === hoverId) return;\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n      if (!clientOffset) return;\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      if (dragId < hoverId && hoverClientY < hoverMiddleY) return;\n      if (dragId > hoverId && hoverClientY > hoverMiddleY) return;\n      moveSpace(dragId, hoverId);\n      item.index = hoverId;\n    }\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes[type.toUpperCase()],\n    item: {\n      id,\n      left,\n      top,\n      type\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    }),\n    end: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      if (!delta) return;\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n      moveSpace(item.id, newLeft, newTop);\n    }\n  });\n  drag(drop(ref));\n  const handleResizeStop = (e, direction, ref, d) => {\n    resizeSpace(id, ref.offsetWidth, ref.offsetHeight);\n  };\n  const handleDelete = () => {\n    deleteSpace(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      position: 'absolute',\n      left,\n      top,\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'move'\n    },\n    children: /*#__PURE__*/_jsxDEV(Resizable, {\n      size: {\n        width,\n        height\n      },\n      onResizeStop: handleResizeStop,\n      style: {\n        border: '1px solid black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'relative'\n        },\n        children: [type, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          style: {\n            position: 'absolute',\n            top: 0,\n            right: 0\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableResizableItem, \"SYYd1my1HJmIW9rZNaWEabF/XNs=\", false, function () {\n  return [useDrop, useDrag];\n});\n_c = DraggableResizableItem;\nexport default DraggableResizableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableResizableItem\");","map":{"version":3,"names":["React","useRef","useDrag","useDrop","Resizable","ItemTypes","jsxDEV","_jsxDEV","DraggableResizableItem","id","type","left","top","width","height","moveSpace","resizeSpace","deleteSpace","_s","ref","drop","accept","toUpperCase","hover","item","monitor","current","dragId","hoverId","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","hoverClientY","y","hoverMiddleY","bottom","index","isDragging","drag","collect","end","delta","getDifferenceFromInitialOffset","newLeft","Math","round","x","newTop","handleResizeStop","e","direction","d","offsetWidth","offsetHeight","handleDelete","style","position","opacity","cursor","children","size","onResizeStop","border","onClick","right","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/project/villa-parking-management/frontend/src/components/DraggableResizableItem.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { Resizable } from 're-resizable';\nimport { ItemTypes } from './ItemTypes';\n\nconst DraggableResizableItem = ({ id, type, left, top, width, height, moveSpace, resizeSpace, deleteSpace }) => {\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes[type.toUpperCase()],\n    hover(item, monitor) {\n      if (!ref.current) return;\n      const dragId = item.id;\n      const hoverId = id;\n\n      if (dragId === hoverId) return;\n\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n      if (!clientOffset) return;\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      if (dragId < hoverId && hoverClientY < hoverMiddleY) return;\n      if (dragId > hoverId && hoverClientY > hoverMiddleY) return;\n\n      moveSpace(dragId, hoverId);\n      item.index = hoverId;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes[type.toUpperCase()],\n    item: { id, left, top, type },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      if (!delta) return;\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n      moveSpace(item.id, newLeft, newTop);\n    },\n  });\n\n  drag(drop(ref));\n\n  const handleResizeStop = (e, direction, ref, d) => {\n    resizeSpace(id, ref.offsetWidth, ref.offsetHeight);\n  };\n\n  const handleDelete = () => {\n    deleteSpace(id);\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        position: 'absolute',\n        left,\n        top,\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'move',\n      }}\n    >\n      <Resizable\n        size={{ width, height }}\n        onResizeStop={handleResizeStop}\n        style={{ border: '1px solid black' }}\n      >\n        <div style={{ width: '100%', height: '100%', position: 'relative' }}>\n          {type}\n          <button onClick={handleDelete} style={{ position: 'absolute', top: 0, right: 0 }}>x</button>\n        </div>\n      </Resizable>\n    </div>\n  );\n};\n\nexport default DraggableResizableItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}