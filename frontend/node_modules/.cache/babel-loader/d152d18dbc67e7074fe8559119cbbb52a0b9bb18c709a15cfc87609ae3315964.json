{"ast":null,"code":"var _jsxFileName = \"/Users/mac/project/villa-parking-management/frontend/src/components/DraggableResizableItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { Resizable } from 're-resizable';\nimport { ItemTypes } from './ItemTypes';\nimport '../styles/ParkingSpaces.css'; // CSS 파일을 임포트합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableResizableItem = ({\n  id,\n  type,\n  left,\n  top,\n  width,\n  height,\n  onMove,\n  onResize,\n  onDelete\n}) => {\n  _s();\n  const itemType = type || ItemTypes.DEFAULT;\n  const [{\n    isDragging\n  }, drag, preview] = useDrag({\n    type: itemType,\n    item: {\n      id,\n      left,\n      top,\n      width,\n      height\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: Object.values(ItemTypes),\n    drop: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n      onMove(item.id, newLeft, newTop);\n    }\n  });\n  const handleResizeStop = (e, direction, ref, d) => {\n    onResize(id, ref.offsetWidth, ref.offsetHeight);\n  };\n  const handleDelete = () => {\n    onDelete(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => preview(drop(node)),\n    style: {\n      position: 'absolute',\n      left,\n      top,\n      opacity: isDragging ? 0.5 : 1\n    },\n    className: type // 타입에 따라 클래스 이름을 설정합니다.\n    ,\n    children: /*#__PURE__*/_jsxDEV(Resizable, {\n      size: {\n        width,\n        height\n      },\n      onResizeStop: handleResizeStop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: drag,\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'relative'\n        },\n        children: [type, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          style: {\n            position: 'absolute',\n            top: 0,\n            right: 0\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableResizableItem, \"nshO7v3QtiFpdbDGz+8vykJ8HDo=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = DraggableResizableItem;\nexport default DraggableResizableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableResizableItem\");","map":{"version":3,"names":["React","useDrag","useDrop","Resizable","ItemTypes","jsxDEV","_jsxDEV","DraggableResizableItem","id","type","left","top","width","height","onMove","onResize","onDelete","_s","itemType","DEFAULT","isDragging","drag","preview","item","collect","monitor","drop","accept","Object","values","delta","getDifferenceFromInitialOffset","newLeft","Math","round","x","newTop","y","handleResizeStop","e","direction","ref","d","offsetWidth","offsetHeight","handleDelete","node","style","position","opacity","className","children","size","onResizeStop","onClick","right","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/project/villa-parking-management/frontend/src/components/DraggableResizableItem.js"],"sourcesContent":["import React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { Resizable } from 're-resizable';\nimport { ItemTypes } from './ItemTypes';\nimport '../styles/ParkingSpaces.css'; // CSS 파일을 임포트합니다.\n\nconst DraggableResizableItem = ({ id, type, left, top, width, height, onMove, onResize, onDelete }) => {\n  const itemType = type || ItemTypes.DEFAULT;\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: itemType,\n    item: { id, left, top, width, height },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: Object.values(ItemTypes),\n    drop: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n      onMove(item.id, newLeft, newTop);\n    },\n  });\n\n  const handleResizeStop = (e, direction, ref, d) => {\n    onResize(id, ref.offsetWidth, ref.offsetHeight);\n  };\n\n  const handleDelete = () => {\n    onDelete(id);\n  };\n\n  return (\n    <div\n      ref={(node) => preview(drop(node))}\n      style={{\n        position: 'absolute',\n        left,\n        top,\n        opacity: isDragging ? 0.5 : 1,\n      }}\n      className={type} // 타입에 따라 클래스 이름을 설정합니다.\n    >\n      <Resizable\n        size={{ width, height }}\n        onResizeStop={handleResizeStop}\n      >\n        <div\n          ref={drag}\n          style={{ width: '100%', height: '100%', position: 'relative' }}\n        >\n          {type}\n          <button onClick={handleDelete} style={{ position: 'absolute', top: 0, right: 0 }}>x</button>\n        </div>\n      </Resizable>\n    </div>\n  );\n};\n\nexport default DraggableResizableItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}