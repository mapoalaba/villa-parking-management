{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/FindPassword.css';\n\n// const FindPassword = () => {\n//   const [phone, setPhone] = useState('');\n//   const [verificationCode, setVerificationCode] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [isVerified, setIsVerified] = useState(false);\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const validatePhone = (phone) => {\n//     const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\n//     return phoneRegex.test(phone);\n//   };\n\n//   const validatePassword = (password) => {\n//     const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\n//     return passwordRegex.test(password);\n//   };\n\n//   const handleSendCode = async (e) => {\n//     e.preventDefault();\n//     if (!validatePhone(phone)) {\n//       setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\n//       return;\n//     }\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\n//       alert('Verification code sent!');\n//       setMessage(response.data.message);\n//     } catch (error) {\n//       console.error('There was an error sending the verification code!', error);\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\n//     }\n//   };\n\n//   const handleVerifyCode = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\n//       if (response.status === 200) {\n//         setIsVerified(true);\n//         alert('Phone number verified!');\n//         setMessage('Phone number verified! You can now reset your password.');\n//       }\n//     } catch (error) {\n//       console.error('There was an error verifying the code!', error);\n//       setMessage(error.response?.data?.message || 'Invalid verification code! Please try again.');\n//     }\n//   };\n\n//   const handleChangePassword = async (e) => {\n//     e.preventDefault();\n//     if (!validatePassword(newPassword)) {\n//       setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\n//       return;\n//     }\n//     if (newPassword !== confirmPassword) {\n//       setMessage(\"Passwords don't match!\");\n//       return;\n//     }\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/change-password', {\n//         phone,\n//         username,\n//         newPassword\n//       });\n//       if (response.status === 200) {\n//         alert('Password changed successfully!');\n//         navigate('/login');\n//       } else {\n//         setMessage(response.data.message || 'Error changing password');\n//       }\n//     } catch (error) {\n//       console.error('There was an error changing the password!', error);\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"find-password-container\">\n//       <h2>Find Password</h2>\n//       <form onSubmit={handleSendCode}>\n//         <div className=\"input-group\">\n//           <label>Phone:</label>\n//           <input\n//             type=\"text\"\n//             value={phone}\n//             onChange={(e) => setPhone(e.target.value)}\n//             required\n//             placeholder='전화번호 ( - 빼고 입력)'\n//             className=\"input-field\"\n//           />\n//           <button type=\"submit\" className=\"btn\">Send Verification Code</button>\n//         </div>\n//       </form>\n//       <div className=\"input-group\">\n//         <label>Verification Code:</label>\n//         <input\n//           type=\"text\"\n//           value={verificationCode}\n//           onChange={(e) => setVerificationCode(e.target.value)}\n//           required\n//           className=\"input-field\"\n//         />\n//         <button onClick={handleVerifyCode} className=\"btn\">Verify Code</button>\n//       </div>\n//       {isVerified && (\n//         <form onSubmit={handleChangePassword}>\n//           <div className=\"input-group\">\n//             <label>Username:</label>\n//             <input\n//               type=\"text\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <label>New Password:</label>\n//             <input\n//               type=\"password\"\n//               value={newPassword}\n//               onChange={(e) => setNewPassword(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Confirm New Password:</label>\n//             <input\n//               type=\"password\"\n//               value={confirmPassword}\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn\">Change Password</button>\n//         </form>\n//       )}\n//       {message && <p className=\"message\">{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default FindPassword;","map":{"version":3,"names":[],"sources":["C:/villa-parking-management/frontend/src/components/FindPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/FindPassword.css';\r\n\r\n// const FindPassword = () => {\r\n//   const [phone, setPhone] = useState('');\r\n//   const [verificationCode, setVerificationCode] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [newPassword, setNewPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [isVerified, setIsVerified] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const validatePhone = (phone) => {\r\n//     const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\r\n//     return phoneRegex.test(phone);\r\n//   };\r\n\r\n//   const validatePassword = (password) => {\r\n//     const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\r\n//     return passwordRegex.test(password);\r\n//   };\r\n\r\n//   const handleSendCode = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!validatePhone(phone)) {\r\n//       setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\r\n//       alert('Verification code sent!');\r\n//       setMessage(response.data.message);\r\n//     } catch (error) {\r\n//       console.error('There was an error sending the verification code!', error);\r\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleVerifyCode = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n//       if (response.status === 200) {\r\n//         setIsVerified(true);\r\n//         alert('Phone number verified!');\r\n//         setMessage('Phone number verified! You can now reset your password.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was an error verifying the code!', error);\r\n//       setMessage(error.response?.data?.message || 'Invalid verification code! Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleChangePassword = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!validatePassword(newPassword)) {\r\n//       setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\r\n//       return;\r\n//     }\r\n//     if (newPassword !== confirmPassword) {\r\n//       setMessage(\"Passwords don't match!\");\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/change-password', {\r\n//         phone,\r\n//         username,\r\n//         newPassword\r\n//       });\r\n//       if (response.status === 200) {\r\n//         alert('Password changed successfully!');\r\n//         navigate('/login');\r\n//       } else {\r\n//         setMessage(response.data.message || 'Error changing password');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was an error changing the password!', error);\r\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"find-password-container\">\r\n//       <h2>Find Password</h2>\r\n//       <form onSubmit={handleSendCode}>\r\n//         <div className=\"input-group\">\r\n//           <label>Phone:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={phone}\r\n//             onChange={(e) => setPhone(e.target.value)}\r\n//             required\r\n//             placeholder='전화번호 ( - 빼고 입력)'\r\n//             className=\"input-field\"\r\n//           />\r\n//           <button type=\"submit\" className=\"btn\">Send Verification Code</button>\r\n//         </div>\r\n//       </form>\r\n//       <div className=\"input-group\">\r\n//         <label>Verification Code:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={verificationCode}\r\n//           onChange={(e) => setVerificationCode(e.target.value)}\r\n//           required\r\n//           className=\"input-field\"\r\n//         />\r\n//         <button onClick={handleVerifyCode} className=\"btn\">Verify Code</button>\r\n//       </div>\r\n//       {isVerified && (\r\n//         <form onSubmit={handleChangePassword}>\r\n//           <div className=\"input-group\">\r\n//             <label>Username:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>New Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={newPassword}\r\n//               onChange={(e) => setNewPassword(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Confirm New Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={confirmPassword}\r\n//               onChange={(e) => setConfirmPassword(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn\">Change Password</button>\r\n//         </form>\r\n//       )}\r\n//       {message && <p className=\"message\">{message}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FindPassword;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}