{"ast":null,"code":"var _jsxFileName = \"C:\\\\villa-parking-management\\\\frontend\\\\src\\\\components\\\\ResidentListPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import '../styles/ResidentListPage.css';\n\n// const ResidentListPage = () => {\n//   const { id: villaId } = useParams();\n//   const [villa, setVilla] = useState(null);\n//   const [residents, setResidents] = useState([]);\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchVillaResidents = async () => {\n//       try {\n//         const villaResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}`);\n//         setVilla(villaResponse.data);\n\n//         const residentsResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}/residents`);\n//         setResidents(residentsResponse.data);\n//       } catch (error) {\n//         console.error('빌라 거주자 목록 가져오기 오류:', error);\n//         setMessage('빌라 거주자 목록 가져오기 오류');\n//       }\n//     };\n\n//     fetchVillaResidents();\n//   }, [villaId]);\n\n//   const handleViewUser = (userId) => {\n//     navigate(`/user-info/${userId}`);\n//   };\n\n//   return (\n//     <div className=\"resident-list-container\">\n//       {villa && (\n//         <>\n//           <div className='residentlist-header'>\n//             <h2 className='residentlistpage-h2'>{villa.villaName}</h2>\n//           </div>\n//           <div className='residentlist-body'>\n//             <h3>거주 중인 회원 목록</h3>\n//             {message && <p className=\"message\">{message}</p>}\n//             <ul className=\"resident-list\">\n//               {residents.map((resident) => (\n//                 <li key={resident._id} className=\"resident-item\">\n//                   <span>{resident.username}</span>\n//                   <button className=\"btn view-btn userbtn\" onClick={() => handleViewUser(resident._id)}>회원정보</button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ResidentListPage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../styles/ResidentListPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResidentListPage = () => {\n  _s();\n  const {\n    id: villaId\n  } = useParams();\n  const [villa, setVilla] = useState(null);\n  const [residents, setResidents] = useState([]);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchVillaResidents = async () => {\n      try {\n        const villaResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}`);\n        setVilla(villaResponse.data);\n        console.log('Villa:', villaResponse.data);\n        const residentsResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}/residents`);\n        setResidents(residentsResponse.data);\n        console.log('Residents:', residentsResponse.data);\n      } catch (error) {\n        console.error('빌라 거주자 목록 가져오기 오류:', error);\n        setMessage('빌라 거주자 목록 가져오기 오류');\n      }\n    };\n    fetchVillaResidents();\n  }, [villaId]);\n  const handleViewUser = userId => {\n    navigate(`/user-info/${userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resident-list-container\",\n    children: villa && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"residentlist-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"residentlistpage-h2\",\n          children: villa.villaName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"residentlist-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uAC70\\uC8FC \\uC911\\uC778 \\uD68C\\uC6D0 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"resident-list\",\n          children: residents.map(resident => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"resident-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: resident.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn view-btn userbtn\",\n              onClick: () => handleViewUser(resident._id),\n              children: \"\\uD68C\\uC6D0\\uC815\\uBCF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, resident._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ResidentListPage, \"YATyQXbQUqnJ+cE4bex6z5iM56s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResidentListPage;\nexport default ResidentListPage;\nvar _c;\n$RefreshReg$(_c, \"ResidentListPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ResidentListPage","_s","id","villaId","villa","setVilla","residents","setResidents","message","setMessage","navigate","fetchVillaResidents","villaResponse","get","data","console","log","residentsResponse","error","handleViewUser","userId","className","children","villaName","fileName","_jsxFileName","lineNumber","columnNumber","map","resident","username","onClick","_id","_c","$RefreshReg$"],"sources":["C:/villa-parking-management/frontend/src/components/ResidentListPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import '../styles/ResidentListPage.css';\r\n\r\n// const ResidentListPage = () => {\r\n//   const { id: villaId } = useParams();\r\n//   const [villa, setVilla] = useState(null);\r\n//   const [residents, setResidents] = useState([]);\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchVillaResidents = async () => {\r\n//       try {\r\n//         const villaResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}`);\r\n//         setVilla(villaResponse.data);\r\n\r\n//         const residentsResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}/residents`);\r\n//         setResidents(residentsResponse.data);\r\n//       } catch (error) {\r\n//         console.error('빌라 거주자 목록 가져오기 오류:', error);\r\n//         setMessage('빌라 거주자 목록 가져오기 오류');\r\n//       }\r\n//     };\r\n\r\n//     fetchVillaResidents();\r\n//   }, [villaId]);\r\n\r\n//   const handleViewUser = (userId) => {\r\n//     navigate(`/user-info/${userId}`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"resident-list-container\">\r\n//       {villa && (\r\n//         <>\r\n//           <div className='residentlist-header'>\r\n//             <h2 className='residentlistpage-h2'>{villa.villaName}</h2>\r\n//           </div>\r\n//           <div className='residentlist-body'>\r\n//             <h3>거주 중인 회원 목록</h3>\r\n//             {message && <p className=\"message\">{message}</p>}\r\n//             <ul className=\"resident-list\">\r\n//               {residents.map((resident) => (\r\n//                 <li key={resident._id} className=\"resident-item\">\r\n//                   <span>{resident.username}</span>\r\n//                   <button className=\"btn view-btn userbtn\" onClick={() => handleViewUser(resident._id)}>회원정보</button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ResidentListPage;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../styles/ResidentListPage.css';\r\n\r\nconst ResidentListPage = () => {\r\n  const { id: villaId } = useParams();\r\n  const [villa, setVilla] = useState(null);\r\n  const [residents, setResidents] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchVillaResidents = async () => {\r\n      try {\r\n        const villaResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}`);\r\n        setVilla(villaResponse.data);\r\n        console.log('Villa:', villaResponse.data);\r\n\r\n        const residentsResponse = await axios.get(`http://localhost:3001/api/villa/${villaId}/residents`);\r\n        setResidents(residentsResponse.data);\r\n        console.log('Residents:', residentsResponse.data);\r\n      } catch (error) {\r\n        console.error('빌라 거주자 목록 가져오기 오류:', error);\r\n        setMessage('빌라 거주자 목록 가져오기 오류');\r\n      }\r\n    };\r\n\r\n    fetchVillaResidents();\r\n  }, [villaId]);\r\n\r\n  const handleViewUser = (userId) => {\r\n    navigate(`/user-info/${userId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"resident-list-container\">\r\n      {villa && (\r\n        <>\r\n          <div className='residentlist-header'>\r\n            <h2 className='residentlistpage-h2'>{villa.villaName}</h2>\r\n          </div>\r\n          <div className='residentlist-body'>\r\n            <h3>거주 중인 회원 목록</h3>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <ul className=\"resident-list\">\r\n              {residents.map((resident) => (\r\n                <li key={resident._id} className=\"resident-item\">\r\n                  <span>{resident.username}</span>\r\n                  <button className=\"btn view-btn userbtn\" onClick={() => handleViewUser(resident._id)}>회원정보</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResidentListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}