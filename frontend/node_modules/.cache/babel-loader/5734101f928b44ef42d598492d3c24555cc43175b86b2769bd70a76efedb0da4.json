{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import ParkingArea from './ParkingArea';\n// import { ItemTypes } from './ItemTypes';\n// import axios from 'axios';\n// import '../styles/ParkingSpaces.css';\n\n// const ParkingSpaces = () => {\n//   const [spaces, setSpaces] = useState([]);\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const { villaName, address } = location.state || {};\n\n//   const addSpace = (type) => {\n//     const id = spaces.length + 1;\n//     setSpaces([...spaces, { id, type, left: 0, top: 0, width: 50, height: 50 }]);\n//   };\n\n//   const moveSpace = (id, left, top) => {\n//     setSpaces((prevSpaces) =>\n//       prevSpaces.map((space) =>\n//         space.id === id ? { ...space, left, top } : space\n//       )\n//     );\n//   };\n\n//   const resizeSpace = (id, width, height) => {\n//     setSpaces((prevSpaces) =>\n//       prevSpaces.map((space) =>\n//         space.id === id ? { ...space, width, height } : space\n//       )\n//     );\n//   };\n\n//   const deleteSpace = (id) => {\n//     setSpaces((prevSpaces) =>\n//       prevSpaces.filter((space) => space.id !== id)\n//     );\n//   };\n\n//   const handleSave = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/villa/save', {\n//         villaName,\n//         address,\n//         spaces,\n//       });\n//       if (response.status === 201) {\n//         const { villaId, qrCode } = response.data;\n//         navigate('/villa-qrcode', { state: { villaId, qrCode } });\n//       }\n//     } catch (error) {\n//       console.error('Error saving villa:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>내 빌라 등록 - 주차 공간 생성</h2>\n//       <div>\n//         <label>Villa Name:</label>\n//         <input type=\"text\" value={villaName} readOnly />\n//       </div>\n//       <div>\n//         <label>Address:</label>\n//         <input type=\"text\" value={address} readOnly />\n//       </div>\n//       <div className=\"toolbar\">\n//         <button onClick={() => addSpace(ItemTypes.VILLA)}>Add Villa</button>\n//         <button onClick={() => addSpace(ItemTypes.PARKING)}>Add Parking</button>\n//         <button onClick={() => addSpace(ItemTypes.EXIT)}>Add Exit</button>\n//         <button onClick={() => addSpace(ItemTypes.WALL)}>Add Wall</button>\n//       </div>\n//       <ParkingArea spaces={spaces} moveSpace={moveSpace} resizeSpace={resizeSpace} deleteSpace={deleteSpace} />\n//       <button type=\"button\" onClick={handleSave}>Save</button>\n//     </div>\n//   );\n// };\n\n// export default ParkingSpaces;","map":{"version":3,"names":[],"sources":["C:/villa-parking-management/frontend/src/components/ParkingSpaces.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import ParkingArea from './ParkingArea';\r\n// import { ItemTypes } from './ItemTypes';\r\n// import axios from 'axios';\r\n// import '../styles/ParkingSpaces.css';\r\n\r\n// const ParkingSpaces = () => {\r\n//   const [spaces, setSpaces] = useState([]);\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const { villaName, address } = location.state || {};\r\n\r\n//   const addSpace = (type) => {\r\n//     const id = spaces.length + 1;\r\n//     setSpaces([...spaces, { id, type, left: 0, top: 0, width: 50, height: 50 }]);\r\n//   };\r\n\r\n//   const moveSpace = (id, left, top) => {\r\n//     setSpaces((prevSpaces) =>\r\n//       prevSpaces.map((space) =>\r\n//         space.id === id ? { ...space, left, top } : space\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const resizeSpace = (id, width, height) => {\r\n//     setSpaces((prevSpaces) =>\r\n//       prevSpaces.map((space) =>\r\n//         space.id === id ? { ...space, width, height } : space\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const deleteSpace = (id) => {\r\n//     setSpaces((prevSpaces) =>\r\n//       prevSpaces.filter((space) => space.id !== id)\r\n//     );\r\n//   };\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/villa/save', {\r\n//         villaName,\r\n//         address,\r\n//         spaces,\r\n//       });\r\n//       if (response.status === 201) {\r\n//         const { villaId, qrCode } = response.data;\r\n//         navigate('/villa-qrcode', { state: { villaId, qrCode } });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving villa:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>내 빌라 등록 - 주차 공간 생성</h2>\r\n//       <div>\r\n//         <label>Villa Name:</label>\r\n//         <input type=\"text\" value={villaName} readOnly />\r\n//       </div>\r\n//       <div>\r\n//         <label>Address:</label>\r\n//         <input type=\"text\" value={address} readOnly />\r\n//       </div>\r\n//       <div className=\"toolbar\">\r\n//         <button onClick={() => addSpace(ItemTypes.VILLA)}>Add Villa</button>\r\n//         <button onClick={() => addSpace(ItemTypes.PARKING)}>Add Parking</button>\r\n//         <button onClick={() => addSpace(ItemTypes.EXIT)}>Add Exit</button>\r\n//         <button onClick={() => addSpace(ItemTypes.WALL)}>Add Wall</button>\r\n//       </div>\r\n//       <ParkingArea spaces={spaces} moveSpace={moveSpace} resizeSpace={resizeSpace} deleteSpace={deleteSpace} />\r\n//       <button type=\"button\" onClick={handleSave}>Save</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ParkingSpaces;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}