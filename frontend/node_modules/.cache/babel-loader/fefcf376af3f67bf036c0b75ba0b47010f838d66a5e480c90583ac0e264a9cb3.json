{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import QrScanner from 'react-qr-scanner';\n\n// const EnterVilla = () => {\n//   const [villaId, setVillaId] = useState('');\n//   const [scanResult, setScanResult] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleVillaIdChange = (e) => {\n//     setVillaId(e.target.value);\n//   };\n\n//   const handleAddVilla = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/villa/add-villa', { villaId }, { withCredentials: true });\n//       if (response && response.data) {\n//         navigate('/my-villa');\n//       }\n//     } catch (error) {\n//       console.error('Error adding villa:', error);\n//     }\n//   };\n\n//   const handleScan = (data) => {\n//     if (data) {\n//       setScanResult(data.text);\n//       setVillaId(data.text);\n//     }\n//   };\n\n//   const handleError = (err) => {\n//     console.error('Error scanning QR code:', err);\n//   };\n\n//   const previewStyle = {\n//     height: 240,\n//     width: 320,\n//   };\n\n//   return (\n//     <div>\n//       <h2>빌라 입장</h2>\n//       <div>\n//         <label>빌라 고유번호 입력</label>\n//         <input type=\"text\" value={villaId} onChange={handleVillaIdChange} />\n//         <button onClick={handleAddVilla}>내 빌라에 추가</button>\n//       </div>\n//       <div>\n//         <h3>QR 코드 촬영</h3>\n//         <QrScanner\n//           delay={300}\n//           onError={handleError}\n//           onScan={handleScan}\n//           style={previewStyle}\n//         />\n//         <p>{scanResult}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EnterVilla;","map":{"version":3,"names":[],"sources":["C:/villa-parking-management/frontend/src/components/EnterVilla.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import QrScanner from 'react-qr-scanner';\r\n\r\n// const EnterVilla = () => {\r\n//   const [villaId, setVillaId] = useState('');\r\n//   const [scanResult, setScanResult] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleVillaIdChange = (e) => {\r\n//     setVillaId(e.target.value);\r\n//   };\r\n\r\n//   const handleAddVilla = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/villa/add-villa', { villaId }, { withCredentials: true });\r\n//       if (response && response.data) {\r\n//         navigate('/my-villa');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error adding villa:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleScan = (data) => {\r\n//     if (data) {\r\n//       setScanResult(data.text);\r\n//       setVillaId(data.text);\r\n//     }\r\n//   };\r\n\r\n//   const handleError = (err) => {\r\n//     console.error('Error scanning QR code:', err);\r\n//   };\r\n\r\n//   const previewStyle = {\r\n//     height: 240,\r\n//     width: 320,\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>빌라 입장</h2>\r\n//       <div>\r\n//         <label>빌라 고유번호 입력</label>\r\n//         <input type=\"text\" value={villaId} onChange={handleVillaIdChange} />\r\n//         <button onClick={handleAddVilla}>내 빌라에 추가</button>\r\n//       </div>\r\n//       <div>\r\n//         <h3>QR 코드 촬영</h3>\r\n//         <QrScanner\r\n//           delay={300}\r\n//           onError={handleError}\r\n//           onScan={handleScan}\r\n//           style={previewStyle}\r\n//         />\r\n//         <p>{scanResult}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EnterVilla;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}