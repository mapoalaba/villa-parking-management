{"ast":null,"code":"var _jsxFileName = \"C:\\\\villa-parking-management\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    address: '',\n    vehicleNumber: '',\n    vehicleName: ''\n  });\n  const [usernameAvailable, setUsernameAvailable] = useState(null);\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n    if (name === 'username') {\n      setUsernameAvailable(null); // Username 변경 시 상태 초기화\n    }\n  };\n  const checkUsernameAvailability = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/check-username', {\n        username: form.username\n      });\n      setUsernameAvailable(response.data.available);\n    } catch (error) {\n      console.error('There was an error checking the username!', error);\n    }\n  };\n  const sendVerificationCode = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/user/send-code', {\n        phone: form.phone\n      });\n      alert('Verification code sent!');\n    } catch (error) {\n      console.error('There was an error sending the verification code!', error);\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/verify-code', {\n        code: verificationCode\n      });\n      if (response.status === 200) {\n        setIsVerified(true);\n        alert('Phone number verified!');\n      }\n    } catch (error) {\n      console.error('There was an error verifying the code!', error);\n      alert('Invalid verification code!');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (form.password !== form.confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    }\n    if (usernameAvailable === false) {\n      alert(\"Username is already taken!\");\n      return;\n    }\n    if (!isVerified) {\n      alert(\"Phone number is not verified!\");\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/api/user/register', form);\n      alert('Registration successful!');\n      navigate('/login'); // 회원가입 성공 시 로그인 페이지로 이동\n    } catch (error) {\n      console.error('There was an error during the registration!', error);\n    }\n  };\n  const handleAddressSearch = () => {\n    new window.daum.Postcode({\n      oncomplete: function (data) {\n        setForm({\n          ...form,\n          address: data.address\n        });\n      }\n    }).open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: form.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: checkUsernameAvailability,\n        children: \"Check Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), usernameAvailable === false && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Username is already taken\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }, this), usernameAvailable === true && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Username is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: form.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: form.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Verification Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: form.address,\n        onChange: handleChange,\n        readOnly: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddressSearch,\n        children: \"Search Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Vehicle Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"vehicleNumber\",\n        value: form.vehicleNumber,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Vehicle Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"vehicleName\",\n        value: form.vehicleName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"n7grfGPRERACLt93i/ii9P5OXY8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// axios.defaults.withCredentials = true;\n\n// const Register = () => {\n//     const navigate = useNavigate();\n\n//     const [form, setForm] = useState({\n//         username: '',\n//         password: '',\n//         confirmPassword: '',\n//         phone: '',\n//         address: '',\n//         vehicleType: '승용차',\n//         vehicleNumberPrefix: '',\n//         vehicleNumberMiddle: '',\n//         vehicleNumberSuffix: '',\n//     });\n\n//     const [usernameAvailable, setUsernameAvailable] = useState(null);\n//     const [verificationCode, setVerificationCode] = useState('');\n//     const [isVerified, setIsVerified] = useState(false);\n//     const [vehicleNumberPrefixOptions, setVehicleNumberPrefixOptions] = useState([]);\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setForm({\n//             ...form,\n//             [name]: value,\n//         });\n\n//         if (name === 'username') {\n//             setUsernameAvailable(null);  // Username 변경 시 상태 초기화\n//         }\n\n//         if (name === 'vehicleType') {\n//             updateVehicleNumberPrefixOptions(value);\n//         }\n//     };\n\n//     const updateVehicleNumberPrefixOptions = (vehicleType) => {\n//         let options = [];\n//         if (vehicleType === '승용차') {\n//             options = [...Array(70).keys()].map(i => (i + 1).toString().padStart(2, '0')).concat([...Array(600).keys()].map(i => (i + 100).toString()));\n//         } else if (vehicleType === '승합차') {\n//             options = [...Array(10).keys()].map(i => (i + 70).toString()).concat([...Array(100).keys()].map(i => (i + 700).toString()));\n//         } else if (vehicleType === '화물차') {\n//             options = [...Array(18).keys()].map(i => (i + 80).toString()).concat([...Array(18).keys()].map(i => (i + 980).toString()));\n//         }\n//         setVehicleNumberPrefixOptions(options);\n//     };\n\n//     const checkUsernameAvailability = async () => {\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/user/check-username', { username: form.username });\n//             setUsernameAvailable(response.data.available);\n//         } catch (error) {\n//             console.error('There was an error checking the username!', error);\n//         }\n//     };\n\n//     const sendVerificationCode = async () => {\n//         try {\n//             await axios.post('http://localhost:3001/api/user/send-code', { phone: form.phone });\n//             alert('Verification code sent!');\n//         } catch (error) {\n//             console.error('There was an error sending the verification code!', error);\n//         }\n//     };\n\n//     const verifyCode = async () => {\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\n//             if (response.status === 200) {\n//                 setIsVerified(true);\n//                 alert('Phone number verified!');\n//             }\n//         } catch (error) {\n//             console.error('There was an error verifying the code!', error);\n//             alert('Invalid verification code!');\n//         }\n//     };\n\n//     const validateForm = () => {\n//         const usernameRegex = /^[a-zA-Z0-9]{8,20}$/;\n//         const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\n//         const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\n//         const vehicleNumberMiddleRegex = /^[가-호]$/;\n//         const vehicleNumberSuffixRegex = /^\\d{4}$/;\n\n//         if (!usernameRegex.test(form.username)) {\n//             alert(\"Username must be 8-20 characters long.\");\n//             return false;\n//         }\n\n//         if (!passwordRegex.test(form.password)) {\n//             alert(\"Password must be 4-20 characters long, with at least one uppercase letter and one special character.\");\n//             return false;\n//         }\n\n//         if (!phoneRegex.test(form.phone)) {\n//             alert(\"Phone number must be in the format 01000000000 or 010-0000-0000.\");\n//             return false;\n//         }\n\n//         if (!vehicleNumberMiddleRegex.test(form.vehicleNumberMiddle)) {\n//             alert(\"Vehicle number middle part must be one of the allowed Korean characters.\");\n//             return false;\n//         }\n\n//         if (!vehicleNumberSuffixRegex.test(form.vehicleNumberSuffix)) {\n//             alert(\"Vehicle number suffix must be 4 digits.\");\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (!validateForm()) {\n//             return;\n//         }\n\n//         if (form.password !== form.confirmPassword) {\n//             alert(\"Passwords don't match!\");\n//             return;\n//         }\n\n//         if (usernameAvailable === false) {\n//             alert(\"Username is already taken!\");\n//             return;\n//         }\n\n//         if (!isVerified) {\n//             alert(\"Phone number is not verified!\");\n//             return;\n//         }\n\n//         const vehicleNumber = `${form.vehicleNumberPrefix}-${form.vehicleNumberMiddle}-${form.vehicleNumberSuffix}`;\n\n//         try {\n//             await axios.post('http://localhost:3001/api/user/register', { ...form, vehicleNumber });\n//             alert('Registration successful!');\n//             navigate('/login'); // 회원가입 성공 시 로그인 페이지로 이동\n//         } catch (error) {\n//             console.error('There was an error during the registration!', error);\n//         }\n//     };\n\n//     const handleAddressSearch = () => {\n//         new window.daum.Postcode({\n//             oncomplete: function (data) {\n//                 setForm({\n//                     ...form,\n//                     address: data.address,\n//                 });\n//             },\n//         }).open();\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <div>\n//                 <label>Username:</label>\n//                 <input type=\"text\" name=\"username\" value={form.username} onChange={handleChange} required />\n//                 <button type=\"button\" onClick={checkUsernameAvailability}>Check Availability</button>\n//                 {usernameAvailable === false && <span>Username is already taken</span>}\n//                 {usernameAvailable === true && <span>Username is available</span>}\n//             </div>\n//             <div>\n//                 <label>Password:</label>\n//                 <input type=\"password\" name=\"password\" value={form.password} onChange={handleChange} required />\n//             </div>\n//             <div>\n//                 <label>Confirm Password:</label>\n//                 <input type=\"password\" name=\"confirmPassword\" value={form.confirmPassword} onChange={handleChange} required />\n//             </div>\n//             <div>\n//                 <label>Phone:</label>\n//                 <input type=\"text\" name=\"phone\" value={form.phone} onChange={handleChange} required />\n//                 <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\n//             </div>\n//             <div>\n//                 <label>Verification Code:</label>\n//                 <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} required />\n//                 <button type=\"button\" onClick={verifyCode}>Verify Code</button>\n//             </div>\n//             <div>\n//                 <label>Address:</label>\n//                 <input type=\"text\" name=\"address\" value={form.address} onChange={handleChange} readOnly required />\n//                 <button type=\"button\" onClick={handleAddressSearch}>Search Address</button>\n//             </div>\n//             <div>\n//                 <label>Vehicle Type:</label>\n//                 <select name=\"vehicleType\" value={form.vehicleType} onChange={handleChange} required>\n//                     <option value=\"승용차\">승용차</option>\n//                     <option value=\"승합차\">승합차</option>\n//                     <option value=\"화물차\">화물차</option>\n//                 </select>\n//             </div>\n//             <div>\n//                 <label>Vehicle Number:</label>\n//                 <select name=\"vehicleNumberPrefix\" value={form.vehicleNumberPrefix} onChange={handleChange} required>\n//                     <option value=\"\">Select Prefix</option>\n//                     {vehicleNumberPrefixOptions.map((option) => (\n//                         <option key={option} value={option}>{option}</option>\n//                     ))}\n//                 </select>\n//                 <input type=\"text\" name=\"vehicleNumberMiddle\" value={form.vehicleNumberMiddle} onChange={handleChange} required placeholder=\"가,나,다,...\" />\n//                 <input type=\"text\" name=\"vehicleNumberSuffix\" value={form.vehicleNumberSuffix} onChange={handleChange} required placeholder=\"0000\" />\n//             </div>\n//             <button type=\"submit\">Register</button>\n//         </form>\n//     );\n// };\n\n// export default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","defaults","withCredentials","Register","_s","navigate","form","setForm","username","password","confirmPassword","phone","address","vehicleNumber","vehicleName","usernameAvailable","setUsernameAvailable","verificationCode","setVerificationCode","isVerified","setIsVerified","handleChange","e","name","value","target","checkUsernameAvailability","response","post","data","available","error","console","sendVerificationCode","alert","verifyCode","code","status","handleSubmit","preventDefault","handleAddressSearch","window","daum","Postcode","oncomplete","open","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","onClick","readOnly","_c","$RefreshReg$"],"sources":["C:/villa-parking-management/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [form, setForm] = useState({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        phone: '',\r\n        address: '',\r\n        vehicleNumber: '',\r\n        vehicleName: '',\r\n    });\r\n\r\n    const [usernameAvailable, setUsernameAvailable] = useState(null);\r\n    const [verificationCode, setVerificationCode] = useState('');\r\n    const [isVerified, setIsVerified] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm({\r\n            ...form,\r\n            [name]: value,\r\n        });\r\n\r\n        if (name === 'username') {\r\n            setUsernameAvailable(null);  // Username 변경 시 상태 초기화\r\n        }\r\n    };\r\n\r\n    const checkUsernameAvailability = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/user/check-username', { username: form.username });\r\n            setUsernameAvailable(response.data.available);\r\n        } catch (error) {\r\n            console.error('There was an error checking the username!', error);\r\n        }\r\n    };\r\n\r\n    const sendVerificationCode = async () => {\r\n        try {\r\n            await axios.post('http://localhost:3001/api/user/send-code', { phone: form.phone });\r\n            alert('Verification code sent!');\r\n        } catch (error) {\r\n            console.error('There was an error sending the verification code!', error);\r\n        }\r\n    };\r\n\r\n    const verifyCode = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n            if (response.status === 200) {\r\n                setIsVerified(true);\r\n                alert('Phone number verified!');\r\n            }\r\n        } catch (error) {\r\n            console.error('There was an error verifying the code!', error);\r\n            alert('Invalid verification code!');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (form.password !== form.confirmPassword) {\r\n            alert(\"Passwords don't match!\");\r\n            return;\r\n        }\r\n\r\n        if (usernameAvailable === false) {\r\n            alert(\"Username is already taken!\");\r\n            return;\r\n        }\r\n\r\n        if (!isVerified) {\r\n            alert(\"Phone number is not verified!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post('http://localhost:3001/api/user/register', form);\r\n            alert('Registration successful!');\r\n            navigate('/login'); // 회원가입 성공 시 로그인 페이지로 이동\r\n        } catch (error) {\r\n            console.error('There was an error during the registration!', error);\r\n        }\r\n    };\r\n\r\n    const handleAddressSearch = () => {\r\n        new window.daum.Postcode({\r\n            oncomplete: function (data) {\r\n                setForm({\r\n                    ...form,\r\n                    address: data.address,\r\n                });\r\n            },\r\n        }).open();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>Username:</label>\r\n                <input type=\"text\" name=\"username\" value={form.username} onChange={handleChange} required />\r\n                <button type=\"button\" onClick={checkUsernameAvailability}>Check Availability</button>\r\n                {usernameAvailable === false && <span>Username is already taken</span>}\r\n                {usernameAvailable === true && <span>Username is available</span>}\r\n            </div>\r\n            <div>\r\n                <label>Password:</label>\r\n                <input type=\"password\" name=\"password\" value={form.password} onChange={handleChange} required />\r\n            </div>\r\n            <div>\r\n                <label>Confirm Password:</label>\r\n                <input type=\"password\" name=\"confirmPassword\" value={form.confirmPassword} onChange={handleChange} required />\r\n            </div>\r\n            <div>\r\n                <label>Phone:</label>\r\n                <input type=\"text\" name=\"phone\" value={form.phone} onChange={handleChange} required />\r\n                <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n            </div>\r\n            <div>\r\n                <label>Verification Code:</label>\r\n                <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} required />\r\n                <button type=\"button\" onClick={verifyCode}>Verify Code</button>\r\n            </div>\r\n            <div>\r\n                <label>Address:</label>\r\n                <input type=\"text\" name=\"address\" value={form.address} onChange={handleChange} readOnly required />\r\n                <button type=\"button\" onClick={handleAddressSearch}>Search Address</button>\r\n            </div>\r\n            <div>\r\n                <label>Vehicle Number:</label>\r\n                <input type=\"text\" name=\"vehicleNumber\" value={form.vehicleNumber} onChange={handleChange} required />\r\n            </div>\r\n            <div>\r\n                <label>Vehicle Name:</label>\r\n                <input type=\"text\" name=\"vehicleName\" value={form.vehicleName} onChange={handleChange} required />\r\n            </div>\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// axios.defaults.withCredentials = true;\r\n\r\n// const Register = () => {\r\n//     const navigate = useNavigate();\r\n\r\n//     const [form, setForm] = useState({\r\n//         username: '',\r\n//         password: '',\r\n//         confirmPassword: '',\r\n//         phone: '',\r\n//         address: '',\r\n//         vehicleType: '승용차',\r\n//         vehicleNumberPrefix: '',\r\n//         vehicleNumberMiddle: '',\r\n//         vehicleNumberSuffix: '',\r\n//     });\r\n\r\n//     const [usernameAvailable, setUsernameAvailable] = useState(null);\r\n//     const [verificationCode, setVerificationCode] = useState('');\r\n//     const [isVerified, setIsVerified] = useState(false);\r\n//     const [vehicleNumberPrefixOptions, setVehicleNumberPrefixOptions] = useState([]);\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setForm({\r\n//             ...form,\r\n//             [name]: value,\r\n//         });\r\n\r\n//         if (name === 'username') {\r\n//             setUsernameAvailable(null);  // Username 변경 시 상태 초기화\r\n//         }\r\n\r\n//         if (name === 'vehicleType') {\r\n//             updateVehicleNumberPrefixOptions(value);\r\n//         }\r\n//     };\r\n\r\n//     const updateVehicleNumberPrefixOptions = (vehicleType) => {\r\n//         let options = [];\r\n//         if (vehicleType === '승용차') {\r\n//             options = [...Array(70).keys()].map(i => (i + 1).toString().padStart(2, '0')).concat([...Array(600).keys()].map(i => (i + 100).toString()));\r\n//         } else if (vehicleType === '승합차') {\r\n//             options = [...Array(10).keys()].map(i => (i + 70).toString()).concat([...Array(100).keys()].map(i => (i + 700).toString()));\r\n//         } else if (vehicleType === '화물차') {\r\n//             options = [...Array(18).keys()].map(i => (i + 80).toString()).concat([...Array(18).keys()].map(i => (i + 980).toString()));\r\n//         }\r\n//         setVehicleNumberPrefixOptions(options);\r\n//     };\r\n\r\n//     const checkUsernameAvailability = async () => {\r\n//         try {\r\n//             const response = await axios.post('http://localhost:3001/api/user/check-username', { username: form.username });\r\n//             setUsernameAvailable(response.data.available);\r\n//         } catch (error) {\r\n//             console.error('There was an error checking the username!', error);\r\n//         }\r\n//     };\r\n\r\n//     const sendVerificationCode = async () => {\r\n//         try {\r\n//             await axios.post('http://localhost:3001/api/user/send-code', { phone: form.phone });\r\n//             alert('Verification code sent!');\r\n//         } catch (error) {\r\n//             console.error('There was an error sending the verification code!', error);\r\n//         }\r\n//     };\r\n\r\n//     const verifyCode = async () => {\r\n//         try {\r\n//             const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n//             if (response.status === 200) {\r\n//                 setIsVerified(true);\r\n//                 alert('Phone number verified!');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('There was an error verifying the code!', error);\r\n//             alert('Invalid verification code!');\r\n//         }\r\n//     };\r\n\r\n//     const validateForm = () => {\r\n//         const usernameRegex = /^[a-zA-Z0-9]{8,20}$/;\r\n//         const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\r\n//         const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\r\n//         const vehicleNumberMiddleRegex = /^[가-호]$/;\r\n//         const vehicleNumberSuffixRegex = /^\\d{4}$/;\r\n\r\n//         if (!usernameRegex.test(form.username)) {\r\n//             alert(\"Username must be 8-20 characters long.\");\r\n//             return false;\r\n//         }\r\n\r\n//         if (!passwordRegex.test(form.password)) {\r\n//             alert(\"Password must be 4-20 characters long, with at least one uppercase letter and one special character.\");\r\n//             return false;\r\n//         }\r\n\r\n//         if (!phoneRegex.test(form.phone)) {\r\n//             alert(\"Phone number must be in the format 01000000000 or 010-0000-0000.\");\r\n//             return false;\r\n//         }\r\n\r\n//         if (!vehicleNumberMiddleRegex.test(form.vehicleNumberMiddle)) {\r\n//             alert(\"Vehicle number middle part must be one of the allowed Korean characters.\");\r\n//             return false;\r\n//         }\r\n\r\n//         if (!vehicleNumberSuffixRegex.test(form.vehicleNumberSuffix)) {\r\n//             alert(\"Vehicle number suffix must be 4 digits.\");\r\n//             return false;\r\n//         }\r\n\r\n//         return true;\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         if (!validateForm()) {\r\n//             return;\r\n//         }\r\n\r\n//         if (form.password !== form.confirmPassword) {\r\n//             alert(\"Passwords don't match!\");\r\n//             return;\r\n//         }\r\n\r\n//         if (usernameAvailable === false) {\r\n//             alert(\"Username is already taken!\");\r\n//             return;\r\n//         }\r\n\r\n//         if (!isVerified) {\r\n//             alert(\"Phone number is not verified!\");\r\n//             return;\r\n//         }\r\n\r\n//         const vehicleNumber = `${form.vehicleNumberPrefix}-${form.vehicleNumberMiddle}-${form.vehicleNumberSuffix}`;\r\n\r\n//         try {\r\n//             await axios.post('http://localhost:3001/api/user/register', { ...form, vehicleNumber });\r\n//             alert('Registration successful!');\r\n//             navigate('/login'); // 회원가입 성공 시 로그인 페이지로 이동\r\n//         } catch (error) {\r\n//             console.error('There was an error during the registration!', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleAddressSearch = () => {\r\n//         new window.daum.Postcode({\r\n//             oncomplete: function (data) {\r\n//                 setForm({\r\n//                     ...form,\r\n//                     address: data.address,\r\n//                 });\r\n//             },\r\n//         }).open();\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <div>\r\n//                 <label>Username:</label>\r\n//                 <input type=\"text\" name=\"username\" value={form.username} onChange={handleChange} required />\r\n//                 <button type=\"button\" onClick={checkUsernameAvailability}>Check Availability</button>\r\n//                 {usernameAvailable === false && <span>Username is already taken</span>}\r\n//                 {usernameAvailable === true && <span>Username is available</span>}\r\n//             </div>\r\n//             <div>\r\n//                 <label>Password:</label>\r\n//                 <input type=\"password\" name=\"password\" value={form.password} onChange={handleChange} required />\r\n//             </div>\r\n//             <div>\r\n//                 <label>Confirm Password:</label>\r\n//                 <input type=\"password\" name=\"confirmPassword\" value={form.confirmPassword} onChange={handleChange} required />\r\n//             </div>\r\n//             <div>\r\n//                 <label>Phone:</label>\r\n//                 <input type=\"text\" name=\"phone\" value={form.phone} onChange={handleChange} required />\r\n//                 <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n//             </div>\r\n//             <div>\r\n//                 <label>Verification Code:</label>\r\n//                 <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} required />\r\n//                 <button type=\"button\" onClick={verifyCode}>Verify Code</button>\r\n//             </div>\r\n//             <div>\r\n//                 <label>Address:</label>\r\n//                 <input type=\"text\" name=\"address\" value={form.address} onChange={handleChange} readOnly required />\r\n//                 <button type=\"button\" onClick={handleAddressSearch}>Search Address</button>\r\n//             </div>\r\n//             <div>\r\n//                 <label>Vehicle Type:</label>\r\n//                 <select name=\"vehicleType\" value={form.vehicleType} onChange={handleChange} required>\r\n//                     <option value=\"승용차\">승용차</option>\r\n//                     <option value=\"승합차\">승합차</option>\r\n//                     <option value=\"화물차\">화물차</option>\r\n//                 </select>\r\n//             </div>\r\n//             <div>\r\n//                 <label>Vehicle Number:</label>\r\n//                 <select name=\"vehicleNumberPrefix\" value={form.vehicleNumberPrefix} onChange={handleChange} required>\r\n//                     <option value=\"\">Select Prefix</option>\r\n//                     {vehicleNumberPrefixOptions.map((option) => (\r\n//                         <option key={option} value={option}>{option}</option>\r\n//                     ))}\r\n//                 </select>\r\n//                 <input type=\"text\" name=\"vehicleNumberMiddle\" value={form.vehicleNumberMiddle} onChange={handleChange} required placeholder=\"가,나,다,...\" />\r\n//                 <input type=\"text\" name=\"vehicleNumberSuffix\" value={form.vehicleNumberSuffix} onChange={handleChange} required placeholder=\"0000\" />\r\n//             </div>\r\n//             <button type=\"submit\">Register</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}