{"ast":null,"code":"var _jsxFileName = \"C:\\\\villa-parking-management\\\\frontend\\\\src\\\\components\\\\FindPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/FindPassword.css';\n\n// const FindPassword = () => {\n//   const [phone, setPhone] = useState('');\n//   const [verificationCode, setVerificationCode] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [isVerified, setIsVerified] = useState(false);\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const validatePhone = (phone) => {\n//     const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\n//     return phoneRegex.test(phone);\n//   };\n\n//   const validatePassword = (password) => {\n//     const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\n//     return passwordRegex.test(password);\n//   };\n\n//   const handleSendCode = async (e) => {\n//     e.preventDefault();\n//     if (!validatePhone(phone)) {\n//       setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\n//       return;\n//     }\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\n//       alert('Verification code sent!');\n//       setMessage(response.data.message);\n//     } catch (error) {\n//       console.error('There was an error sending the verification code!', error);\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\n//     }\n//   };\n\n//   const handleVerifyCode = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\n//       if (response.status === 200) {\n//         setIsVerified(true);\n//         alert('Phone number verified!');\n//         setMessage('Phone number verified! You can now reset your password.');\n//       }\n//     } catch (error) {\n//       console.error('There was an error verifying the code!', error);\n//       setMessage(error.response?.data?.message || 'Invalid verification code! Please try again.');\n//     }\n//   };\n\n//   const handleChangePassword = async (e) => {\n//     e.preventDefault();\n//     if (!validatePassword(newPassword)) {\n//       setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\n//       return;\n//     }\n//     if (newPassword !== confirmPassword) {\n//       setMessage(\"Passwords don't match!\");\n//       return;\n//     }\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/change-password', {\n//         phone,\n//         username,\n//         newPassword\n//       });\n//       if (response.status === 200) {\n//         alert('Password changed successfully!');\n//         navigate('/login');\n//       } else {\n//         setMessage(response.data.message || 'Error changing password');\n//       }\n//     } catch (error) {\n//       console.error('There was an error changing the password!', error);\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"find-password-container\">\n//       <h2>Find Password</h2>\n//       {!isVerified ? (\n//         <>\n//           <form onSubmit={handleSendCode}>\n//             <div className=\"input-group\">\n//               <label>Phone:</label>\n//               <div className=\"input-with-button\">\n//                 <input\n//                   type=\"text\"\n//                   value={phone}\n//                   onChange={(e) => setPhone(e.target.value)}\n//                   required\n//                   placeholder='전화번호 ( - 빼고 입력)'\n//                   className=\"input-field\"\n//                 />\n//                 <button type=\"submit\" className=\"btn\">Send Code</button>\n//               </div>\n//             </div>\n//           </form>\n//           <div className=\"input-group\">\n//             <label>Verification Code:</label>\n//             <div className=\"input-with-button\">\n//               <input\n//                 type=\"text\"\n//                 value={verificationCode}\n//                 onChange={(e) => setVerificationCode(e.target.value)}\n//                 required\n//                 className=\"input-field\"\n//               />\n//               <button onClick={handleVerifyCode} className=\"btn\">Verify Code</button>\n//             </div>\n//           </div>\n//         </>\n//       ) : (\n//         <form onSubmit={handleChangePassword}>\n//           <div className=\"input-group\">\n//             <label>Username:</label>\n//             <input\n//               type=\"text\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <label>New Password:</label>\n//             <input\n//               type=\"password\"\n//               value={newPassword}\n//               onChange={(e) => setNewPassword(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Confirm New Password:</label>\n//             <input\n//               type=\"password\"\n//               value={confirmPassword}\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//               required\n//               className=\"input-field\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn\">Change Password</button>\n//         </form>\n//       )}\n//       {message && <p className=\"message\">{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default FindPassword;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/FindPassword.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FindPassword = () => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [username, setUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const validatePhone = phone => {\n    const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\n    return phoneRegex.test(phone);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\n    return passwordRegex.test(password);\n  };\n  const handleSendCode = async e => {\n    e.preventDefault();\n    if (!validatePhone(phone)) {\n      setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/send-code', {\n        phone\n      });\n      alert('Verification code sent!');\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('There was an error sending the verification code!', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Unexpected error occurred. Please try again.');\n    }\n  };\n  const handleVerifyCode = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/verify-code', {\n        code: verificationCode\n      });\n      if (response.status === 200) {\n        setIsVerified(true);\n        alert('Phone number verified!');\n        setMessage('Phone number verified! You can now reset your password.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('There was an error verifying the code!', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Invalid verification code! Please try again.');\n    }\n  };\n  const handleChangePassword = async e => {\n    e.preventDefault();\n    if (!validatePassword(newPassword)) {\n      setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setMessage(\"Passwords don't match!\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/change-password', {\n        phone,\n        username,\n        newPassword\n      });\n      if (response.status === 200) {\n        alert('Password changed successfully!');\n        navigate('/login');\n      } else {\n        setMessage(response.data.message || 'Error changing password');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('There was an error changing the password!', error);\n      setMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Unexpected error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), !isVerified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendCode,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-with-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: phone,\n              onChange: e => setPhone(e.target.value),\n              required: true,\n              placeholder: \"\\uC804\\uD654\\uBC88\\uD638 ( - \\uBE7C\\uACE0 \\uC785\\uB825)\",\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              children: \"Send Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Verification Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-with-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: verificationCode,\n            onChange: e => setVerificationCode(e.target.value),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVerifyCode,\n            className: \"btn\",\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChangePassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn full-width-btn\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(FindPassword, \"/3QtYLMZKuKNQiMnpMg4/gaFseU=\", false, function () {\n  return [useNavigate];\n});\n_c = FindPassword;\nexport default FindPassword;\nvar _c;\n$RefreshReg$(_c, \"FindPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","FindPassword","_s","phone","setPhone","verificationCode","setVerificationCode","username","setUsername","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isVerified","setIsVerified","message","setMessage","navigate","validatePhone","phoneRegex","test","validatePassword","password","passwordRegex","handleSendCode","e","preventDefault","response","post","alert","data","error","_error$response","_error$response$data","console","handleVerifyCode","code","status","_error$response2","_error$response2$data","handleChangePassword","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/villa-parking-management/frontend/src/components/FindPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/FindPassword.css';\r\n\r\n// const FindPassword = () => {\r\n//   const [phone, setPhone] = useState('');\r\n//   const [verificationCode, setVerificationCode] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [newPassword, setNewPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [isVerified, setIsVerified] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const validatePhone = (phone) => {\r\n//     const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\r\n//     return phoneRegex.test(phone);\r\n//   };\r\n\r\n//   const validatePassword = (password) => {\r\n//     const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\r\n//     return passwordRegex.test(password);\r\n//   };\r\n\r\n//   const handleSendCode = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!validatePhone(phone)) {\r\n//       setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\r\n//       alert('Verification code sent!');\r\n//       setMessage(response.data.message);\r\n//     } catch (error) {\r\n//       console.error('There was an error sending the verification code!', error);\r\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleVerifyCode = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n//       if (response.status === 200) {\r\n//         setIsVerified(true);\r\n//         alert('Phone number verified!');\r\n//         setMessage('Phone number verified! You can now reset your password.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was an error verifying the code!', error);\r\n//       setMessage(error.response?.data?.message || 'Invalid verification code! Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleChangePassword = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!validatePassword(newPassword)) {\r\n//       setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\r\n//       return;\r\n//     }\r\n//     if (newPassword !== confirmPassword) {\r\n//       setMessage(\"Passwords don't match!\");\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/change-password', {\r\n//         phone,\r\n//         username,\r\n//         newPassword\r\n//       });\r\n//       if (response.status === 200) {\r\n//         alert('Password changed successfully!');\r\n//         navigate('/login');\r\n//       } else {\r\n//         setMessage(response.data.message || 'Error changing password');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was an error changing the password!', error);\r\n//       setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"find-password-container\">\r\n//       <h2>Find Password</h2>\r\n//       {!isVerified ? (\r\n//         <>\r\n//           <form onSubmit={handleSendCode}>\r\n//             <div className=\"input-group\">\r\n//               <label>Phone:</label>\r\n//               <div className=\"input-with-button\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={phone}\r\n//                   onChange={(e) => setPhone(e.target.value)}\r\n//                   required\r\n//                   placeholder='전화번호 ( - 빼고 입력)'\r\n//                   className=\"input-field\"\r\n//                 />\r\n//                 <button type=\"submit\" className=\"btn\">Send Code</button>\r\n//               </div>\r\n//             </div>\r\n//           </form>\r\n//           <div className=\"input-group\">\r\n//             <label>Verification Code:</label>\r\n//             <div className=\"input-with-button\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={verificationCode}\r\n//                 onChange={(e) => setVerificationCode(e.target.value)}\r\n//                 required\r\n//                 className=\"input-field\"\r\n//               />\r\n//               <button onClick={handleVerifyCode} className=\"btn\">Verify Code</button>\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <form onSubmit={handleChangePassword}>\r\n//           <div className=\"input-group\">\r\n//             <label>Username:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>New Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={newPassword}\r\n//               onChange={(e) => setNewPassword(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Confirm New Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={confirmPassword}\r\n//               onChange={(e) => setConfirmPassword(e.target.value)}\r\n//               required\r\n//               className=\"input-field\"\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn\">Change Password</button>\r\n//         </form>\r\n//       )}\r\n//       {message && <p className=\"message\">{message}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FindPassword;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/FindPassword.css';\r\n\r\nconst FindPassword = () => {\r\n  const [phone, setPhone] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^(010\\d{4}\\d{4}|010-\\d{4}-\\d{4})$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{4,20}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleSendCode = async (e) => {\r\n    e.preventDefault();\r\n    if (!validatePhone(phone)) {\r\n      setMessage('Phone number must be in the format 01000000000 or 010-0000-0000.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\r\n      alert('Verification code sent!');\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error('There was an error sending the verification code!', error);\r\n      setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyCode = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n      if (response.status === 200) {\r\n        setIsVerified(true);\r\n        alert('Phone number verified!');\r\n        setMessage('Phone number verified! You can now reset your password.');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error verifying the code!', error);\r\n      setMessage(error.response?.data?.message || 'Invalid verification code! Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = async (e) => {\r\n    e.preventDefault();\r\n    if (!validatePassword(newPassword)) {\r\n      setMessage('Password must be 4-20 characters long, with at least one uppercase letter and one special character.');\r\n      return;\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/user/change-password', {\r\n        phone,\r\n        username,\r\n        newPassword\r\n      });\r\n      if (response.status === 200) {\r\n        alert('Password changed successfully!');\r\n        navigate('/login');\r\n      } else {\r\n        setMessage(response.data.message || 'Error changing password');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error changing the password!', error);\r\n      setMessage(error.response?.data?.message || 'Unexpected error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"find-password-container\">\r\n      <h2>Find Password</h2>\r\n      {!isVerified ? (\r\n        <>\r\n          <form onSubmit={handleSendCode}>\r\n            <div className=\"input-group\">\r\n              <label>Phone:</label>\r\n              <div className=\"input-with-button\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  required\r\n                  placeholder='전화번호 ( - 빼고 입력)'\r\n                  className=\"input-field\"\r\n                />\r\n                <button type=\"submit\" className=\"btn\">Send Code</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"input-group\">\r\n            <label>Verification Code:</label>\r\n            <div className=\"input-with-button\">\r\n              <input\r\n                type=\"text\"\r\n                value={verificationCode}\r\n                onChange={(e) => setVerificationCode(e.target.value)}\r\n                required\r\n                className=\"input-field\"\r\n              />\r\n              <button onClick={handleVerifyCode} className=\"btn\">Verify Code</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <form onSubmit={handleChangePassword}>\r\n          <div className=\"input-group\">\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Confirm New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n              className=\"input-field\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <button type=\"submit\" className=\"btn full-width-btn\">Change Password</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindPassword;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}