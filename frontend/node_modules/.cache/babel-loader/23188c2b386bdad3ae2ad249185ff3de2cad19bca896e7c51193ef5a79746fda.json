{"ast":null,"code":"var _jsxFileName = \"C:\\\\villa-parking-management\\\\frontend\\\\src\\\\components\\\\FindUsername.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const FindUsername = () => {\n//   const [phone, setPhone] = useState('');\n//   const [verificationCode, setVerificationCode] = useState('');\n//   const [isVerified, setIsVerified] = useState(false);\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSendCode = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\n//       alert('Verification code sent!');\n//       setMessage(response.data.message);\n//     } catch (error) {\n//       console.error('There was an error sending the verification code!', error);\n//       if (error.response && error.response.data) {\n//         setMessage(error.response.data.message);\n//       } else {\n//         setMessage('Unexpected error occurred. Please try again.');\n//       }\n//     }\n//   };\n\n//   const handleVerifyCode = async (e) => {\n//     e.preventDefault();\n//     try {\n//         const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\n//         if (response.status === 200) {\n//             setIsVerified(true);\n//             alert('Phone number verified!');\n//             setMessage('Phone number verified! Click the button below to retrieve your username.');\n//         }\n//     } catch (error) {\n//         console.error('There was an error verifying the code!', error);\n//         alert('Invalid verification code!');\n//         setMessage(error.response.data.message);\n//     }\n//   };\n\n//   const handleRetrieveUsername = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/user/retrieve-username', { phone });\n//       navigate('/username-list', { state: { usernames: response.data.usernames } });\n//     } catch (error) {\n//       console.error('There was an error retrieving the username!', error);\n//       if (error.response && error.response.data) {\n//         setMessage(error.response.data.message);\n//       } else {\n//         setMessage('Unexpected error occurred. Please try again.');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Find Username</h2>\n//       <form onSubmit={handleSendCode}>\n//         <div>\n//           <label>Phone:</label>\n//           <input\n//             type=\"text\"\n//             value={phone}\n//             onChange={(e) => setPhone(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Send Verification Code</button>\n//         </div>\n//       </form>\n//       <div>\n//         <label>Verification Code:</label>\n//         <input\n//           type=\"text\"\n//           value={verificationCode}\n//           onChange={(e) => setVerificationCode(e.target.value)}\n//           required\n//         />\n//         <button onClick={handleVerifyCode}>Verify Code</button>\n//       </div>\n//       {isVerified && (\n//         <div>\n//           <button onClick={handleRetrieveUsername}>Retrieve Username</button>\n//         </div>\n//       )}\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default FindUsername;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindUsername = () => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [setIsVerified] = useState(false);\n  const [message, setMessage] = useState('');\n  // const navigate = useNavigate();\n\n  const handleSendCode = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/send-code', {\n        phone\n      });\n      alert('Verification code sent!');\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('There was an error sending the verification code!', error);\n      if (error.response && error.response.data) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('Unexpected error occurred. Please try again.');\n      }\n    }\n  };\n  const handleVerifyCode = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/api/user/verify-code', {\n        code: verificationCode\n      });\n      if (response.status === 200) {\n        setIsVerified(true);\n        alert('Phone number verified!');\n        setMessage('Phone number verified! Click the button below to retrieve your username.');\n      }\n    } catch (error) {\n      console.error('There was an error verifying the code!', error);\n      alert('Invalid verification code!');\n      setMessage(error.response.data.message);\n    }\n  };\n\n  // const handleRetrieveUsername = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await axios.post('http://localhost:3001/api/user/retrieve-username', { phone });\n  //     console.log(response.data);\n  //     navigate('/UsernameList', { state: { usernames: response.data.usernames } });\n  //   } catch (error) {\n  //     console.error('There was an error retrieving the username!', error);\n  //     if (error.response && error.response.data) {\n  //       setMessage(error.response.data.message);\n  //     } else {\n  //       setMessage('Unexpected error occurred. Please try again.');\n  //     }\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendCode,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send Verification Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Verification Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Retrieve Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(FindUsername, \"4I8XczO6GOq6mkDv6U701qCe8ro=\");\n_c = FindUsername;\nexport default FindUsername;\nvar _c;\n$RefreshReg$(_c, \"FindUsername\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","FindUsername","_s","phone","setPhone","verificationCode","setVerificationCode","setIsVerified","message","setMessage","handleSendCode","e","preventDefault","response","post","alert","data","error","console","handleVerifyCode","code","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/villa-parking-management/frontend/src/components/FindUsername.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const FindUsername = () => {\r\n//   const [phone, setPhone] = useState('');\r\n//   const [verificationCode, setVerificationCode] = useState('');\r\n//   const [isVerified, setIsVerified] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSendCode = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\r\n//       alert('Verification code sent!');\r\n//       setMessage(response.data.message);\r\n//     } catch (error) {\r\n//       console.error('There was an error sending the verification code!', error);\r\n//       if (error.response && error.response.data) {\r\n//         setMessage(error.response.data.message);\r\n//       } else {\r\n//         setMessage('Unexpected error occurred. Please try again.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleVerifyCode = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//         const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n//         if (response.status === 200) {\r\n//             setIsVerified(true);\r\n//             alert('Phone number verified!');\r\n//             setMessage('Phone number verified! Click the button below to retrieve your username.');\r\n//         }\r\n//     } catch (error) {\r\n//         console.error('There was an error verifying the code!', error);\r\n//         alert('Invalid verification code!');\r\n//         setMessage(error.response.data.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleRetrieveUsername = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3001/api/user/retrieve-username', { phone });\r\n//       navigate('/username-list', { state: { usernames: response.data.usernames } });\r\n//     } catch (error) {\r\n//       console.error('There was an error retrieving the username!', error);\r\n//       if (error.response && error.response.data) {\r\n//         setMessage(error.response.data.message);\r\n//       } else {\r\n//         setMessage('Unexpected error occurred. Please try again.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Find Username</h2>\r\n//       <form onSubmit={handleSendCode}>\r\n//         <div>\r\n//           <label>Phone:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={phone}\r\n//             onChange={(e) => setPhone(e.target.value)}\r\n//             required\r\n//           />\r\n//           <button type=\"submit\">Send Verification Code</button>\r\n//         </div>\r\n//       </form>\r\n//       <div>\r\n//         <label>Verification Code:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={verificationCode}\r\n//           onChange={(e) => setVerificationCode(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button onClick={handleVerifyCode}>Verify Code</button>\r\n//       </div>\r\n//       {isVerified && (\r\n//         <div>\r\n//           <button onClick={handleRetrieveUsername}>Retrieve Username</button>\r\n//         </div>\r\n//       )}\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FindUsername;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FindUsername = () => {\r\n  const [phone, setPhone] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [ setIsVerified] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  // const navigate = useNavigate();\r\n\r\n  const handleSendCode = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/user/send-code', { phone });\r\n      alert('Verification code sent!');\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error('There was an error sending the verification code!', error);\r\n      if (error.response && error.response.data) {\r\n        setMessage(error.response.data.message);\r\n      } else {\r\n        setMessage('Unexpected error occurred. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVerifyCode = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/user/verify-code', { code: verificationCode });\r\n      if (response.status === 200) {\r\n        setIsVerified(true);\r\n        alert('Phone number verified!');\r\n        setMessage('Phone number verified! Click the button below to retrieve your username.');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error verifying the code!', error);\r\n      alert('Invalid verification code!');\r\n      setMessage(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  // const handleRetrieveUsername = async (e) => {\r\n  //   e.preventDefault();\r\n  //   try {\r\n  //     const response = await axios.post('http://localhost:3001/api/user/retrieve-username', { phone });\r\n  //     console.log(response.data);\r\n  //     navigate('/UsernameList', { state: { usernames: response.data.usernames } });\r\n  //   } catch (error) {\r\n  //     console.error('There was an error retrieving the username!', error);\r\n  //     if (error.response && error.response.data) {\r\n  //       setMessage(error.response.data.message);\r\n  //     } else {\r\n  //       setMessage('Unexpected error occurred. Please try again.');\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Find Username</h2>\r\n      <form onSubmit={handleSendCode}>\r\n        <div>\r\n          <label>Phone:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Send Verification Code</button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <label>Verification Code:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={verificationCode}\r\n          onChange={(e) => setVerificationCode(e.target.value)}\r\n          required\r\n        />\r\n        <button onClick={handleVerifyCode}>Verify Code</button>\r\n      </div>\r\n      <div>\r\n        <button>Retrieve Username</button>\r\n      </div>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUsername;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}